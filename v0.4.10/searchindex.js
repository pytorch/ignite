Search.setIndex({"docnames": ["about", "concepts", "contrib/engines", "contrib/handlers", "contrib/metrics", "defaults", "distributed", "engine", "examples", "exceptions", "faq", "generated/defaults", "generated/ignite.contrib.handlers.base_logger", "generated/ignite.contrib.handlers.clearml_logger", "generated/ignite.contrib.handlers.mlflow_logger", "generated/ignite.contrib.handlers.neptune_logger", "generated/ignite.contrib.handlers.polyaxon_logger", "generated/ignite.contrib.handlers.tensorboard_logger", "generated/ignite.contrib.handlers.tqdm_logger", "generated/ignite.contrib.handlers.trains_logger", "generated/ignite.contrib.handlers.visdom_logger", "generated/ignite.contrib.handlers.wandb_logger", "generated/ignite.contrib.metrics.AveragePrecision", "generated/ignite.contrib.metrics.CohenKappa", "generated/ignite.contrib.metrics.GpuInfo", "generated/ignite.contrib.metrics.PrecisionRecallCurve", "generated/ignite.contrib.metrics.ROC_AUC", "generated/ignite.contrib.metrics.RocCurve", "generated/ignite.contrib.metrics.regression.CanberraMetric", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError", "generated/ignite.contrib.metrics.regression.FractionalBias", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.ManhattanDistance", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.contrib.metrics.regression.MeanError", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.R2Score", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "governance", "handlers", "index", "metrics", "quickstart", "utils"], "filenames": ["about.rst", "concepts.rst", "contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "defaults.rst", "distributed.rst", "engine.rst", "examples.rst", "exceptions.rst", "faq.rst", "generated/defaults.rst", "generated/ignite.contrib.handlers.base_logger.rst", "generated/ignite.contrib.handlers.clearml_logger.rst", "generated/ignite.contrib.handlers.mlflow_logger.rst", "generated/ignite.contrib.handlers.neptune_logger.rst", "generated/ignite.contrib.handlers.polyaxon_logger.rst", "generated/ignite.contrib.handlers.tensorboard_logger.rst", "generated/ignite.contrib.handlers.tqdm_logger.rst", "generated/ignite.contrib.handlers.trains_logger.rst", "generated/ignite.contrib.handlers.visdom_logger.rst", "generated/ignite.contrib.handlers.wandb_logger.rst", "generated/ignite.contrib.metrics.AveragePrecision.rst", "generated/ignite.contrib.metrics.CohenKappa.rst", "generated/ignite.contrib.metrics.GpuInfo.rst", "generated/ignite.contrib.metrics.PrecisionRecallCurve.rst", "generated/ignite.contrib.metrics.ROC_AUC.rst", "generated/ignite.contrib.metrics.RocCurve.rst", "generated/ignite.contrib.metrics.regression.CanberraMetric.rst", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.FractionalBias.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.ManhattanDistance.rst", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.contrib.metrics.regression.MeanError.rst", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.R2Score.rst", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "governance.rst", "handlers.rst", "index.rst", "metrics.rst", "quickstart.rst", "utils.rst"], "titles": ["About us", "Concepts", "ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "&lt;no title&gt;", "ignite.distributed", "ignite.engine", "Examples", "ignite.exceptions", "FAQ", "&lt;no title&gt;", "base_logger", "clearml_logger", "mlflow_logger", "neptune_logger", "polyaxon_logger", "tensorboard_logger", "tqdm_logger", "trains_logger", "visdom_logger", "wandb_logger", "AveragePrecision", "CohenKappa", "GpuInfo", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "R2Score", "WaveHedgesDistance", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "BaseSaveHandler", "Checkpoint", "ModelCheckpoint", "EarlyStopping", "EMAHandler", "global_step_from_engine", "FastaiLRFinder", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "ReduceLROnPlateauScheduler", "create_lr_scheduler_with_warmup", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "Accuracy", "Average", "Bleu", "ClassificationReport", "DiceCoefficient", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "InceptionScore", "IoU", "JaccardIndex", "Loss", "MeanAbsoluteError", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "PSNR", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "ConfusionMatrix", "mIoU", "Metric", "MetricsLambda", "Precision", "Recall", "PyTorch-Ignite governance", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "Quick start", "ignite.utils"], "terms": {"thi": [0, 1, 2, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 76, 77, 82, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "project": [0, 15, 21, 131, 133, 135], "wa": [0, 2, 3, 15, 19, 47, 54, 67, 97], "start": [0, 1, 2, 10, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 48, 49, 50, 51, 54, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 71, 75, 77, 78, 79, 81, 85, 86, 87, 89, 92, 95, 97, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 133, 134, 136], "alykhan": 0, "tejani": 0, "alykhantejani": 0, "francisco": 0, "massa": 0, "fmassa": 0, "joost": 0, "van": 0, "amersfoort": 0, "y0ast": 0, "end": [0, 1, 2, 7, 16, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 54, 57, 75, 78, 79, 81, 84, 86, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 134, 135], "2017": [0, 78], "highli": 0, "inspir": [0, 8, 100, 104], "torchnet": 0, "In": [0, 1, 2, 6, 7, 10, 13, 24, 32, 45, 54, 69, 70, 73, 88, 98, 100, 103, 104, 111, 125, 127, 129, 130, 132, 134, 135], "2018": [0, 4, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 108], "had": 0, "grown": 0, "first": [0, 1, 7, 15, 22, 23, 25, 26, 27, 47, 54, 60, 70, 71, 73, 77, 78, 84, 86, 99, 103, 107, 111, 124, 129, 130, 135, 136], "public": [0, 124, 127], "releas": [0, 7], "publish": 0, "june": 0, "sinc": [0, 1, 2, 3, 13, 14, 15, 16, 17, 20, 21, 49, 54, 57, 71, 72, 73, 134], "sever": [0, 1, 8, 10, 127, 128, 135], "have": [0, 1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 54, 70, 73, 91, 94, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 134], "appear": 0, "follow": [0, 1, 10, 44, 45, 54, 56, 60, 70, 73, 98, 99, 104, 105, 107, 115, 124, 125, 127, 129, 130, 134, 135], "5": [0, 1, 2, 6, 7, 10, 15, 18, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 54, 57, 61, 62, 63, 64, 65, 66, 70, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 98, 100, 101, 103, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 127, 130, 132, 134, 136], "month": [0, 131], "cycl": [0, 8, 77, 78, 79, 81, 82], "thrive": 0, "intern": [0, 1, 2, 7, 22, 23, 26, 38, 39, 40, 44, 45, 46, 48, 49, 50, 51, 54, 55, 60, 61, 62, 70, 71, 72, 83, 91, 97, 101, 103, 134, 136], "commun": [0, 13, 131], "lead": [0, 32, 38, 39, 40, 93, 103, 104], "i": [0, 1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "numfocu": 0, "affili": 0, "open": [0, 8, 18, 54], "sourc": [0, 1, 2, 6, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136], "effort": 0, "The": [0, 1, 2, 6, 13, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 54, 55, 57, 61, 62, 67, 70, 73, 75, 77, 78, 87, 89, 94, 101, 104, 105, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 135], "": [0, 1, 2, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 54, 57, 61, 62, 63, 64, 65, 66, 70, 71, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 93, 94, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "organ": [0, 131], "due": [0, 18], "larg": [0, 135], "part": [0, 70, 75, 135], "histor": 0, "reason": 0, "ha": [0, 1, 2, 13, 48, 49, 54, 57, 61, 62, 63, 64, 65, 66, 70, 71, 73, 100, 115, 118, 125, 133, 134], "same": [0, 2, 7, 10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 50, 51, 70, 73, 75, 85, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130], "implic": [0, 131], "other": [0, 1, 2, 6, 13, 45, 46, 47, 48, 49, 50, 54, 61, 62, 63, 64, 65, 66, 70, 73, 75, 111, 116, 125, 127, 128, 133, 134], "from": [0, 1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 54, 56, 57, 59, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ecosystem": 0, "decis": [0, 131], "make": [0, 6, 7, 44, 45, 54, 69, 70, 131], "process": [0, 1, 2, 6, 10, 13, 21, 24, 32, 43, 44, 45, 46, 47, 49, 69, 70, 95, 96, 97, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136], "structur": [0, 1, 7, 70, 131], "describ": [0, 7, 131], "document": [0, 2, 10, 21, 48, 49, 131], "peopl": 0, "ar": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 45, 50, 54, 57, 67, 69, 70, 71, 73, 75, 77, 96, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136], "current": [0, 1, 6, 13, 15, 18, 24, 32, 38, 39, 40, 43, 45, 47, 50, 53, 54, 55, 57, 70, 71, 73, 75, 76, 77, 78, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 97, 103, 106, 121, 127, 128, 134], "contributor": 0, "mainten": 0, "victor": 0, "fomin": 0, "vfdev": 0, "sylvain": 0, "desrozi": 0, "sdesrozi": 0, "tara": 0, "savchyn": 0, "trsvchn": 0, "been": [0, 13, 18, 54, 71], "activ": [0, 22, 25, 26, 27, 70, 131], "past": [0, 131], "longer": 0, "jason": 0, "kriss": 0, "jasonkriss": 0, "anmol": 0, "joshi": 0, "anmolsjoshi": 0, "we": [0, 1, 6, 7, 8, 10, 13, 14, 15, 16, 17, 20, 21, 44, 45, 46, 75, 88, 104, 108, 111, 127, 134, 135], "look": [0, 7, 18, 24, 106, 136], "motiv": 0, "becom": [0, 54, 57, 131], "collabor": 0, "help": [0, 1, 6, 8, 13, 14, 15, 16, 17, 20, 21, 51, 74, 133, 134], "out": [0, 1, 125, 133, 134], "can": [0, 1, 2, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 54, 56, 57, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "consid": [0, 1, 71, 72, 128, 129, 130], "candid": [0, 118, 119, 120], "after": [0, 1, 7, 13, 14, 15, 16, 17, 18, 20, 21, 48, 49, 54, 57, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 85, 86, 93, 95, 96, 121, 134], "successfulli": 0, "merg": [0, 131], "github": [0, 8, 10, 20, 43, 49, 54, 75, 131, 133], "pull": [0, 131, 133], "request": [0, 131], "If": [0, 1, 2, 6, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 44, 47, 48, 49, 50, 54, 61, 62, 67, 70, 71, 73, 78, 79, 81, 85, 86, 93, 101, 103, 104, 106, 108, 111, 112, 113, 114, 117, 123, 125, 127, 128, 134, 136], "you": [0, 1, 10, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 61, 62, 94, 98, 99, 100, 101, 103, 104, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 129, 130, 133, 134, 135], "interest": [0, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 131, 134, 135], "more": [0, 1, 2, 6, 7, 10, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 47, 48, 49, 50, 52, 54, 57, 71, 75, 83, 85, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "detail": [0, 1, 2, 3, 6, 7, 10, 14, 15, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 50, 52, 54, 70, 71, 100, 104, 108, 118, 119, 120, 125, 131, 133, 134, 135], "pleas": [0, 1, 2, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 47, 50, 52, 54, 55, 69, 70, 71, 75, 104, 108, 116, 133, 134, 135], "contact": 0, "4458": 0, "discord": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136], "scientif": 0, "would": [0, 1, 10, 70, 71, 85, 128, 134], "appreci": 0, "citat": 0, "misc": 0, "v": [0, 8, 129, 130, 133], "j": [0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 109, 110, 115, 116], "A": [0, 1, 2, 10, 24, 32, 40, 41, 50, 54, 55, 59, 70, 71, 72, 80, 109, 110, 116, 122, 134], "titl": [0, 1, 13, 14, 15, 16, 17, 20, 21, 132], "high": [0, 133], "level": [0, 6, 133, 136], "librari": [0, 1, 7, 15, 104, 134, 135], "train": [0, 1, 2, 6, 13, 14, 15, 16, 17, 18, 20, 21, 24, 43, 47, 48, 49, 54, 61, 62, 63, 64, 65, 66, 68, 70, 72, 73, 75, 76, 78, 83, 87, 88, 89, 91, 92, 94, 95, 96, 104, 127, 128, 133, 135, 136], "neural": [0, 8, 75, 78, 133], "network": [0, 8, 75, 78, 125], "year": 0, "2020": [0, 136], "journal": 0, "repositori": [0, 131], "howpublish": 0, "url": [0, 20], "http": [0, 8, 15, 20, 43, 49, 54, 75, 87, 89, 92, 100, 127, 133], "com": [0, 8, 20, 43, 54, 75, 133], "gratefulli": 0, "contribut": [0, 2, 3, 125, 131], "all": [0, 1, 6, 8, 13, 14, 15, 16, 17, 18, 20, 21, 24, 32, 38, 39, 40, 44, 45, 46, 49, 54, 56, 66, 69, 70, 71, 75, 85, 103, 105, 111, 127, 128, 131, 133, 134], "who": [0, 131], "get": [0, 1, 2, 10, 13, 15, 17, 49, 60, 69, 70, 73, 75, 76, 77, 78, 80, 81, 84, 85, 87, 88, 89, 90, 92, 104, 125, 133, 134, 135], "off": 0, "ground": [0, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 112, 114, 115, 117, 125], "support": [0, 1, 2, 6, 13, 15, 44, 45, 46, 47, 54, 70, 129, 130, 134], "especi": 0, "amaz": 0, "work": [0, 6, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 83, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133], "isabela": 0, "presedo": 0, "floyd": 0, "pf": 0, "logo": 0, "its": [0, 1, 7, 12, 13, 14, 15, 16, 17, 20, 21, 46, 47, 50, 54, 70, 71, 73, 85, 86, 115, 128, 133], "elabor": 0, "guidelin": 0, "our": [0, 1, 131, 133, 135], "new": [0, 6, 46, 53, 54, 61, 62, 63, 64, 65, 66, 68, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 104, 108, 115, 116, 118, 119, 120, 122, 128, 129, 130, 131, 134, 136], "found": [0, 1, 6, 7, 10, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 54, 75, 100, 104, 108, 111, 118, 119, 120, 127, 135], "here": [0, 6, 7, 10, 15, 54, 104, 134, 135], "also": [0, 1, 2, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 50, 54, 56, 57, 70, 71, 75, 96, 104, 134, 135], "grate": 0, "soumith": 0, "chintala": 0, "joe": 0, "spisak": 0, "jspisak": 0, "facebook": 0, "group": [0, 6, 10, 47, 78, 79, 81, 82, 83, 84, 85], "infrastructur": 0, "gpu": [0, 2, 6, 8, 10, 24, 47, 48, 49, 61, 62, 63, 64, 65, 66, 133, 134], "ci": 0, "host": [0, 2, 6, 48, 49, 61, 62, 63, 64, 65, 66, 133, 136], "conda": [0, 133], "particular": 0, "magellium": 0, "quansight": 0, "ifpen": 0, "scikit": [0, 23, 28, 33, 101, 129, 130], "learn": [0, 1, 2, 8, 13, 14, 15, 16, 17, 20, 21, 23, 28, 33, 70, 75, 77, 78, 81, 82, 83, 84, 86, 91, 101, 129, 130, 132, 133], "present": [0, 2, 54, 115], "etc": [0, 1, 2, 7, 10, 13, 21, 47, 54, 70, 136], "which": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 48, 54, 55, 57, 61, 62, 67, 70, 71, 73, 74, 75, 78, 79, 81, 91, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135], "essenc": 1, "framework": [1, 6, 45, 47], "class": [1, 2, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136], "an": [1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 48, 49, 50, 51, 54, 57, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 88, 91, 93, 95, 96, 97, 99, 103, 104, 107, 108, 111, 116, 121, 125, 127, 131, 133, 134, 135, 136], "abstract": [1, 69, 76, 79, 83, 91, 127, 135], "loop": [1, 8, 10, 54, 135], "given": [1, 6, 7, 13, 15, 17, 24, 45, 47, 54, 60, 70, 72, 75, 77, 95, 96, 102, 108, 125, 135], "number": [1, 2, 6, 13, 14, 15, 16, 17, 18, 20, 21, 43, 44, 47, 49, 54, 60, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 94, 99, 104, 106, 107, 108, 115, 124, 125, 127, 129, 130, 136], "time": [1, 13, 14, 15, 16, 17, 20, 21, 54, 60, 68, 70, 75, 95, 96, 97, 133, 136], "over": [1, 2, 10, 13, 15, 17, 20, 54, 75, 77, 78, 79, 81, 82, 84, 109, 111, 126, 134, 135], "provid": [1, 2, 4, 6, 7, 8, 13, 14, 15, 16, 17, 20, 21, 24, 44, 45, 46, 47, 50, 51, 54, 57, 69, 70, 71, 72, 74, 75, 86, 105, 106, 111, 113, 121, 127, 128, 133, 134], "data": [1, 2, 6, 7, 20, 22, 23, 24, 25, 26, 27, 32, 38, 39, 40, 43, 44, 48, 49, 50, 51, 54, 57, 59, 60, 61, 62, 70, 72, 93, 95, 96, 98, 99, 103, 104, 106, 107, 108, 115, 116, 121, 125, 127, 128, 129, 130, 133, 134, 135, 136], "execut": [1, 6, 7, 12, 47, 52, 54, 55, 57, 75, 86, 97, 103, 134, 135], "function": [1, 2, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 52, 53, 54, 55, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 87, 89, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136], "return": [1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136], "result": [1, 24, 32, 55, 75, 95, 96, 103, 104, 106, 127, 128, 134, 135], "while": [1, 2, 7, 10, 13, 14, 15, 16, 17, 20, 21, 44, 52, 70, 74, 75, 131, 133], "epoch": [1, 2, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 50, 54, 57, 59, 60, 70, 71, 72, 74, 78, 79, 81, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 134, 135, 136], "max_epoch": [1, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 49, 50, 54, 60, 70, 71, 75, 77, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 95, 96, 135, 136], "run": [1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 49, 50, 54, 55, 57, 59, 60, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "data_it": [1, 10], "iter": [1, 2, 7, 13, 14, 15, 16, 17, 18, 20, 21, 24, 48, 49, 50, 51, 54, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 77, 78, 81, 82, 84, 85, 95, 106, 133, 134, 135], "true": [1, 2, 5, 6, 7, 10, 11, 13, 15, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 55, 57, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132, 134, 136], "try": 1, "batch": [1, 2, 5, 6, 7, 10, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135], "next": [1, 54, 57, 77, 84, 85, 90, 135], "output": [1, 2, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 85, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136], "process_funct": [1, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 54, 60, 93, 94, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 134], "iter_count": 1, "1": [1, 2, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 49, 50, 54, 57, 60, 63, 64, 65, 66, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136], "except": [1, 6, 57, 67, 71, 116, 129, 130, 133, 134], "stopiter": [1, 54], "epoch_length": [1, 7, 10, 50, 54, 60, 75], "break": [1, 135], "thu": [1, 6, 7, 10, 135], "model": [1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 54, 61, 62, 63, 64, 65, 66, 70, 71, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135], "trainer": [1, 5, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 54, 56, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133, 135, 136], "simpli": [1, 10, 18, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 112, 113, 114, 116, 117, 122, 123], "multipl": [1, 6, 7, 8, 10, 47, 70, 71, 73, 82, 87, 89, 92, 94, 118, 134], "dataset": [1, 6, 8, 10, 13, 14, 15, 16, 17, 20, 21, 44, 54, 72, 135], "updat": [1, 2, 10, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 56, 63, 64, 65, 66, 73, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "similarli": 1, "evalu": [1, 5, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 54, 61, 62, 70, 72, 73, 74, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "done": [1, 6, 7, 15, 17, 20, 21, 50, 54, 98, 105, 116, 127, 128, 129, 130, 134, 135], "singl": [1, 2, 6, 8, 15, 18, 47, 55, 59, 60, 69, 70, 71, 72, 94, 97, 99, 107, 124, 125], "valid": [1, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 54, 70, 72, 73, 100, 106, 118, 119, 120, 121, 127, 128, 133, 134, 135], "comput": [1, 2, 6, 7, 9, 10, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 68, 70, 73, 78, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 135], "For": [1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 46, 47, 48, 49, 50, 52, 61, 62, 63, 64, 65, 66, 70, 75, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135], "exampl": [1, 3, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 54, 56, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "supervis": [1, 2, 48, 49, 61, 62, 63, 64, 65, 66, 75, 133], "task": [1, 4, 6, 7, 8, 13, 25, 27], "def": [1, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 49, 50, 54, 56, 57, 58, 59, 72, 73, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135], "train_step": [1, 5, 10, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 135], "optim": [1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 54, 56, 61, 62, 63, 64, 65, 66, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132, 135], "zero_grad": [1, 10, 54, 135], "x": [1, 2, 6, 10, 16, 18, 24, 48, 49, 54, 61, 62, 63, 64, 65, 66, 70, 93, 99, 104, 106, 107, 108, 111, 121, 124, 127, 134, 135, 136], "y": [1, 6, 10, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 56, 61, 62, 63, 64, 65, 66, 98, 100, 103, 104, 105, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 130, 134, 135], "prepare_batch": [1, 2, 10, 48, 49, 54, 61, 62, 63, 64, 65, 66], "y_pred": [1, 10, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 56, 61, 62, 63, 64, 65, 66, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135], "loss": [1, 2, 10, 13, 14, 15, 16, 17, 18, 20, 21, 49, 54, 56, 63, 64, 65, 66, 70, 75, 85, 93, 135], "loss_fn": [1, 2, 10, 49, 63, 64, 65, 66, 111], "backward": [1, 54, 56, 129, 130, 133, 135], "step": [1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 20, 21, 46, 49, 54, 56, 63, 64, 65, 66, 70, 71, 73, 74, 87, 89, 92, 97, 135], "item": [1, 10, 49, 54, 63, 64, 65, 66, 70, 103, 121, 128, 134, 135], "100": [1, 2, 7, 39, 54, 57, 73, 86, 106, 132, 135], "type": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136], "e": [1, 2, 7, 13, 14, 15, 16, 17, 18, 20, 21, 50, 54, 69, 70, 71, 72, 86, 93, 97, 102, 109, 110, 125, 126, 127, 128, 134, 136], "abov": [1, 6, 70, 108, 115, 134], "restrict": [1, 54, 103], "everyth": 1, "user": [1, 2, 6, 7, 10, 14, 15, 22, 23, 25, 26, 27, 43, 44, 47, 48, 49, 54, 56, 57, 60, 61, 62, 70, 71, 73, 88, 103, 122, 134, 135], "want": [1, 10, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 94, 98, 99, 100, 101, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 129, 130, 131, 135], "set": [1, 2, 6, 7, 13, 18, 20, 21, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 54, 60, 70, 71, 73, 77, 83, 84, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 134, 135], "further": [1, 71], "ani": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 95, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 131, 134, 136], "By": [1, 2, 6, 7, 17, 18, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 60, 70, 77, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 136], "default": [1, 2, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 54, 55, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136], "length": [1, 2, 54, 60, 78, 79, 81, 119], "defin": [1, 2, 5, 6, 10, 11, 12, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 54, 56, 57, 60, 61, 62, 70, 71, 72, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135], "len": [1, 54, 111], "howev": [1, 2, 7, 18, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 135], "manual": [1, 6, 13, 16], "wai": [1, 6, 7, 10, 45, 51, 75, 131, 134], "input": [1, 2, 6, 7, 13, 14, 15, 16, 17, 20, 21, 32, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 61, 62, 67, 70, 71, 88, 99, 100, 103, 104, 107, 108, 111, 118, 121, 124, 127, 129, 130, 136], "200": 1, "finit": 1, "unknown": 1, "argument": [1, 2, 6, 13, 14, 15, 16, 17, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 45, 47, 48, 49, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 80, 85, 93, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135], "omit": 1, "automat": [1, 6, 10, 13, 18, 21, 24, 44, 48, 49, 54, 70, 106, 127, 128], "determin": [1, 10, 13, 15, 17, 41, 54, 125], "when": [1, 2, 6, 7, 10, 13, 15, 17, 18, 20, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 50, 54, 57, 68, 70, 73, 75, 85, 91, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 133, 134, 135, 136], "exhaust": [1, 10], "logic": [1, 2, 54, 135], "complex": [1, 10], "code": [1, 6, 7, 8, 10, 15, 43, 47, 131, 133, 134], "method": [1, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136], "construct": [1, 2, 13, 15, 17, 49, 82, 85], "contain": [1, 7, 24, 50, 54, 55, 60, 69, 70, 75, 76, 77, 82, 94, 95, 96, 106, 115, 121, 125, 127, 128, 133], "requir": [1, 2, 6, 10, 14, 15, 16, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 70, 75, 76, 100, 104, 108, 111, 112, 113, 114, 117, 123, 127, 133, 135], "model_1": 1, "model_2": 1, "optimizer_1": 1, "optimizer_2": 1, "criterion_1": 1, "criterion_2": 1, "data_1": 1, "data_2": 1, "loss_1": 1, "forward_pass": 1, "loss_2": 1, "multi": [1, 6, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 89, 94, 98, 99, 100, 101, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 129, 130, 134], "like": [1, 6, 7, 10, 18, 24, 47, 70, 106, 111, 127, 129, 130, 134, 135, 136], "gan": [1, 8], "see": [1, 2, 3, 6, 7, 10, 12, 13, 14, 15, 18, 21, 47, 48, 49, 50, 52, 54, 70, 71, 97, 103, 111, 125, 127, 133, 134], "To": [1, 2, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 71, 103, 104, 106, 112, 113, 114, 116, 117, 122, 123, 133, 134, 135], "improv": [1, 2, 72, 85, 136], "flexibl": [1, 10, 54, 57], "system": [1, 133], "introduc": 1, "facilit": 1, "interact": [1, 131], "each": [1, 2, 5, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 54, 60, 61, 62, 63, 64, 65, 66, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134], "complet": [1, 4, 6, 7, 10, 15, 18, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 50, 54, 57, 58, 60, 70, 72, 85, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 133, 135, 136], "list": [1, 2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 54, 70, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 118, 119, 120, 127, 133], "g": [1, 2, 7, 13, 14, 15, 16, 17, 18, 20, 21, 54, 69, 70, 71, 86, 93, 97, 102, 108, 109, 110, 125, 126, 127, 128, 134, 136], "lambda": [1, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 61, 62, 63, 64, 65, 66, 70, 71, 73, 75, 93, 94, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134], "simpl": [1, 10, 18, 134], "option": [1, 2, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 38, 39, 40, 43, 47, 48, 49, 51, 54, 55, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 93, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 118, 121, 124, 125, 126, 127, 129, 130, 135, 136], "necessarili": 1, "let": [1, 10, 54, 70, 111, 116, 127, 135], "u": [1, 133], "what": [1, 18, 75], "happen": 1, "call": [1, 2, 6, 7, 10, 13, 15, 17, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 45, 49, 54, 57, 69, 70, 80, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134], "fire_ev": [1, 10, 54, 56], "epoch_start": [1, 10, 54, 57, 93, 95, 134], "onc": [1, 10, 24, 54, 55, 57, 89, 91, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134], "iteration_start": [1, 10, 13, 14, 15, 16, 17, 20, 21, 54, 57, 58, 71, 77, 78, 80, 81, 82, 84, 86, 95, 97, 134], "iteration_complet": [1, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 24, 54, 57, 68, 70, 73, 77, 78, 80, 81, 82, 84, 85, 86, 91, 93, 94, 95, 96, 97, 106, 121, 127, 134, 135], "epoch_complet": [1, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 54, 57, 59, 60, 70, 71, 73, 87, 88, 89, 90, 92, 93, 95, 96, 134, 135], "At": [1, 54, 70], "fire": [1, 54, 57], "paragraph": 1, "how": [1, 2, 8, 10, 21, 73, 75, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133], "add": [1, 2, 6, 10, 54, 73, 135], "occur": [1, 2, 48, 49, 61, 62, 63, 64, 65, 66, 67, 71, 97, 120], "everi": [1, 2, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 54, 55, 57, 58, 70, 71, 73, 87, 88, 92, 93, 97, 106, 127, 128, 134, 135, 136], "attach": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 54, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135], "add_event_handl": [1, 7, 10, 13, 15, 21, 54, 59, 68, 70, 71, 72, 73, 77, 78, 80, 81, 82, 84, 85, 86, 94, 135], "decor": [1, 6, 7, 52, 54, 134, 135], "update_model": [1, 54], "_": [1, 2, 6, 21, 38, 39, 40, 50, 54, 70, 71, 97], "print": [1, 6, 7, 10, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 54, 59, 70, 71, 73, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 134, 135], "on_training_start": 1, "anoth": [1, 8, 10, 13, 14, 15, 16, 17, 20, 21, 44, 70, 71, 73, 74, 83, 91, 127, 128, 135], "messag": [1, 18, 73, 136], "even": [1, 54, 57, 135], "simpler": 1, "onli": [1, 2, 6, 10, 13, 15, 17, 32, 45, 47, 48, 49, 55, 61, 62, 70, 71, 103, 104, 105, 108, 116, 121, 125], "need": [1, 2, 10, 15, 17, 18, 20, 21, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 70, 71, 73, 75, 112, 113, 114, 116, 117, 122, 123, 127, 128, 133, 134, 136], "arg": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 26, 27, 47, 54, 71, 97, 103, 127, 128, 134, 135], "kwarg": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 44, 45, 46, 47, 54, 60, 67, 70, 71, 75, 76, 80, 82, 83, 85, 91, 111, 127, 128, 134, 135], "mydata": 1, "2": [1, 4, 5, 6, 7, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 57, 64, 67, 70, 71, 73, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134], "3": [1, 2, 6, 7, 10, 12, 15, 18, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 54, 57, 58, 68, 70, 71, 73, 76, 80, 83, 84, 85, 86, 87, 88, 89, 95, 96, 99, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 127, 128, 130, 132, 134, 136], "4": [1, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135, 136], "on_training_end": 1, "f": [1, 6, 10, 54, 59, 73, 105, 118, 119, 120, 128, 129, 130, 134, 135], "detach": [1, 127, 128, 134], "via": [1, 6, 47, 59], "remove_event_handl": [1, 54], "removableeventhandl": [1, 12, 18, 54], "refer": [1, 8, 13, 15, 17, 19, 21, 35, 36, 37, 75, 100, 104, 108, 118, 119, 120], "reus": 1, "configur": [1, 2, 6, 8, 13, 32, 43, 44, 45, 46, 47, 54, 67, 69, 70, 71, 76, 83, 91, 103, 134, 136], "train_load": [1, 6, 7, 44, 54, 93, 135], "validation_load": 1, "test_load": [1, 134], "create_supervised_train": [1, 18, 93, 135], "create_supervised_evalu": [1, 15, 93, 111, 127, 134, 135], "acc": [1, 13], "accuraci": [1, 13, 14, 15, 16, 17, 18, 20, 21, 54, 70, 111, 121, 123, 127, 129, 130, 134, 135], "log_metr": 1, "2f": [1, 135], "test": [1, 5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "pattern": [1, 15, 70, 71, 135], "n": [1, 7, 13, 15, 17, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 78, 99, 100, 107, 108, 112, 114, 117, 118, 120, 127, 128, 129, 130, 132, 136], "th": [1, 73, 115, 127, 128, 135], "filter": [1, 6, 54, 55, 57, 71, 125, 134], "50": [1, 18, 24, 57, 76, 83, 106, 132], "log_training_loss_every_50_iter": 1, "25": [1, 7, 34, 35, 37, 39, 42, 54, 77, 92, 132], "do_something_once_on_25_epoch": 1, "do": [1, 6, 10, 54, 55, 57, 58, 93, 97, 125, 135], "someth": [1, 10, 57, 58, 93, 128], "custom_event_filt": [1, 57], "10": [1, 7, 10, 15, 18, 21, 24, 47, 54, 57, 64, 67, 70, 71, 72, 75, 76, 83, 84, 85, 88, 90, 91, 92, 97, 104, 106, 108, 116, 129, 130, 132, 134, 136], "fals": [1, 2, 6, 13, 15, 18, 20, 21, 22, 23, 25, 26, 27, 45, 48, 49, 50, 54, 57, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 101, 103, 105, 115, 122, 128, 129, 130, 134, 136], "event_filt": [1, 55, 57], "call_on_special_ev": [1, 57], "should": [1, 2, 6, 10, 13, 14, 15, 16, 17, 20, 21, 24, 45, 47, 48, 49, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 90, 97, 98, 103, 104, 105, 106, 112, 113, 114, 115, 117, 121, 122, 125, 127, 128, 129, 130], "inherit": [1, 2, 10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 46, 56, 57, 70, 71, 134], "eventenum": [1, 10, 24, 54, 57], "regist": [1, 13, 14, 15, 16, 17, 20, 21, 54, 59, 74, 97], "register_ev": [1, 10, 12, 54, 56], "ignit": [1, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135], "import": [1, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 54, 56, 63, 64, 65, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136], "customev": [1, 54, 57], "custom_start": 1, "custom_complet": 1, "These": [1, 8, 134], "could": [1, 5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 71, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 134, 135], "call_on_custom_ev": 1, "fire_custom_ev": 1, "create_supervised_tbptt_train": [1, 2], "usag": [1, 3, 7, 8, 24, 52, 70, 106, 121, 127, 128, 133], "thing": [1, 54], "correspond": [1, 7, 13, 14, 15, 16, 17, 20, 21, 24, 70, 77, 115, 121], "attribut": [1, 13, 14, 15, 16, 17, 18, 20, 21, 49, 54, 57, 60, 70, 71, 73, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 127, 134], "pass": [1, 2, 6, 15, 18, 20, 24, 49, 54, 56, 57, 60, 68, 69, 70, 71, 75, 82, 85, 93, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135], "dict": [1, 2, 24, 48, 54, 70, 71, 72, 73, 75, 76, 77, 82, 95, 101, 106, 111, 127], "event_to_attr": [1, 54], "map": [1, 2, 6, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 48, 54, 69, 70, 71, 72, 75, 76, 77, 82, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 136], "between": [1, 2, 7, 48, 49, 54, 60, 61, 62, 63, 64, 65, 66, 75, 84, 97, 116, 118, 119, 120, 125], "increas": [1, 2, 10, 72, 75, 78, 81, 82, 84, 89, 90], "counter": [1, 71, 72, 97, 134], "whenev": 1, "solut": [1, 13], "temporari": [1, 6, 13, 67, 71], "workaround": 1, "mai": [1, 2, 6, 18, 48, 49, 54, 59, 61, 62, 63, 64, 65, 66, 75, 125], "chang": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 45, 46, 47, 48, 49, 54, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 78, 79, 80, 81, 85, 87, 89, 92, 93, 100, 106, 118, 127, 129, 130, 131, 134, 136], "futur": [1, 20], "built": [1, 57, 111], "checkpoint": [1, 2, 7, 13, 15, 21, 67, 69, 71, 73, 136], "pipelin": 1, "save": [1, 2, 7, 13, 15, 21, 49, 50, 54, 67, 69, 70, 71, 72, 82, 85, 93], "best": [1, 2, 10, 13, 15, 21, 70, 85, 118, 119, 120], "stop": [1, 2, 10, 72, 75, 85, 94], "experi": [1, 7, 14, 15, 16, 17, 133], "track": [1, 14, 15, 16, 73, 133], "thei": [1, 15, 54, 111, 115, 131], "two": [1, 2, 7, 70, 71, 73, 75, 124, 135], "modul": [1, 2, 3, 6, 7, 8, 12, 13, 15, 17, 20, 21, 45, 47, 48, 49, 61, 62, 63, 64, 65, 66, 70, 73, 104, 108, 133, 134, 136], "contrib": [1, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "some": [1, 7, 10, 50, 54, 79, 129, 130, 134], "ad": [1, 2, 6, 12, 13, 15, 17, 18, 23, 24, 45, 46, 47, 48, 49, 50, 54, 63, 64, 65, 66, 67, 70, 71, 80, 86, 99, 100, 106, 107, 112, 113, 114, 117, 123, 127, 129, 130, 134, 135, 136], "callabl": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 52, 54, 55, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 88, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 136], "terminateonnan": [1, 2, 10, 95], "tensorboard_logg": 1, "creat": [1, 2, 5, 6, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 54, 56, 61, 62, 67, 68, 70, 71, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136], "logger": [1, 2, 8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 133, 136], "tb_logger": [1, 17, 24], "tensorboardlogg": [1, 2, 12, 17], "log_dir": [1, 17], "tb_log": [1, 17], "log": [1, 2, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 106, 107, 135, 136], "weight": [1, 12, 13, 15, 17, 20, 21, 23, 54, 70, 73, 100, 101, 105, 129, 130], "histogram": [1, 13, 17], "event_nam": [1, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 54, 59, 60, 70, 71, 106], "log_handl": [1, 12, 13, 14, 15, 16, 17, 20, 21, 24], "weightshisthandl": [1, 13, 17], "below": [1, 3, 22, 25, 26, 27, 54, 57, 97, 98, 103, 105, 111, 127, 129, 130, 134, 135], "typic": [1, 10, 122], "displai": [1, 6, 8, 15, 18], "store": [1, 2, 7, 32, 38, 39, 40, 50, 51, 54, 59, 70, 71, 93, 95, 96, 103, 124, 134, 136], "inform": [1, 2, 6, 13, 15, 17, 24, 48, 49, 75, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135], "includ": [1, 13, 17, 70, 71, 101], "seed": [1, 7, 14, 16, 50, 54, 60, 136], "initializ": 1, "0": [1, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136], "initi": [1, 6, 7, 12, 13, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 45, 47, 49, 54, 73, 85, 86, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 134, 136], "doc": [1, 13, 14, 15, 17, 18, 87, 89, 92, 134], "on_iteration_complet": 1, "output_transform": [1, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 54, 61, 62, 63, 64, 65, 66, 75, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134, 135], "transform": [1, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 71, 75, 93, 94, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134], "intend": [1, 7], "ll": 1, "differ": [1, 7, 23, 25, 44, 54, 69, 86, 104, 127, 128, 134], "them": [1, 10, 15, 94, 129, 130, 131, 134], "print_loss": 1, "train_loss": 1, "similar": [1, 122, 134], "dictionari": [1, 2, 13, 14, 15, 16, 17, 18, 20, 21, 24, 50, 54, 60, 69, 70, 75, 76, 77, 82, 106, 111, 121, 127, 128], "good": 1, "practic": [1, 10, 134], "storag": [1, 13, 22, 23, 26, 38, 39, 40, 70, 71, 101, 103], "new_attribut": 1, "user_handler_funct": 1, "12345": [1, 134], "box": 1, "variou": [1, 3, 8, 12, 57, 131, 132, 133, 134, 135], "machin": [1, 47, 133], "onlin": [1, 15, 73, 104, 134, 135], "entir": [1, 103, 134], "histori": [1, 82, 85, 93, 103, 134], "validation_data": 1, "stand": 1, "alon": [1, 70], "object": [1, 2, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 54, 55, 60, 70, 71, 72, 75, 78, 79, 80, 81, 82, 83, 84, 88, 95, 96, 97, 105, 108, 121, 127, 128, 135, 136], "reset": [1, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 54, 70, 72, 75, 93, 97, 98, 100, 103, 104, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 133, 136], "get_prediction_target": 1, "api": [1, 15, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133], "where": [1, 2, 6, 10, 13, 14, 15, 16, 17, 18, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 68, 70, 71, 73, 77, 98, 100, 104, 105, 108, 111, 112, 114, 116, 117, 129, 130, 133, 135], "go": [1, 135], "checkout": 1, "tutori": 1, "notebook": [1, 3, 6, 18, 133], "tool": [2, 6, 47], "tbptt": [2, 10, 133], "common": [2, 6, 13, 14, 15, 16, 17, 20, 21, 119, 134, 135], "tbptt_event": [2, 54], "valu": [2, 6, 15, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 104, 105, 106, 108, 113, 116, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 134], "adit": 2, "event": [2, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 50, 54, 55, 56, 58, 59, 60, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 121, 132, 133, 134, 135], "addit": [2, 6, 7, 45, 50, 54, 70, 86, 100, 104, 111, 133, 135], "dedic": 2, "tbtt_step": 2, "dim": [2, 22, 54, 99, 104, 107, 123, 134], "devic": [2, 6, 10, 14, 16, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 54, 61, 62, 63, 64, 65, 66, 69, 70, 73, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134, 135, 136], "none": [2, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 47, 48, 49, 51, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136], "non_block": [2, 10, 48, 49, 54, 61, 62, 63, 64, 65, 66, 136], "_prepare_batch": [2, 48, 49, 61, 62, 63, 64, 65, 66], "backprop": 2, "through": [2, 6, 49, 77, 131, 134, 135], "recurr": 2, "long": [2, 103, 111, 125], "sequenc": [2, 13, 14, 15, 16, 17, 20, 21, 78, 79, 81, 83, 84, 98, 100, 104, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 136], "computation": 2, "intens": 2, "whole": [2, 76, 77, 82], "befor": [2, 6, 32, 38, 39, 40, 45, 48, 49, 54, 57, 61, 62, 68, 70, 75, 103, 134], "gradient": [2, 12, 13, 15, 17, 20, 21, 49, 63, 64, 65, 66, 75, 133], "mani": [2, 131, 133], "opportun": 2, "subsequ": [2, 119], "known": 2, "appli": [2, 13, 15, 17, 20, 22, 23, 25, 26, 27, 44, 45, 48, 49, 50, 54, 61, 62, 63, 64, 65, 66, 70, 73, 75, 128, 134, 136], "int": [2, 6, 20, 43, 47, 49, 51, 54, 55, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 97, 100, 101, 102, 104, 106, 108, 109, 110, 113, 115, 116, 118, 120, 122, 123, 125, 126, 136], "chunk": 2, "last": [2, 7, 54, 70, 71, 72, 77, 134, 135], "one": [2, 7, 10, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 54, 70, 72, 75, 82, 89, 94, 98, 99, 100, 101, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 134, 136], "smaller": [2, 70], "axi": [2, 125], "repres": [2, 84, 90, 125, 131], "dimens": [2, 99, 107, 111, 115, 124], "str": [2, 6, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 136], "specif": [2, 7, 13, 15, 17, 22, 23, 26, 38, 39, 40, 46, 47, 48, 49, 51, 57, 61, 62, 63, 64, 65, 66, 70, 101, 103, 134], "bool": [2, 6, 12, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 45, 48, 49, 54, 55, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 101, 103, 105, 115, 121, 122, 127, 128, 129, 130, 136], "copi": [2, 13, 48, 49, 61, 62, 63, 64, 65, 66, 73, 76, 77, 82], "cpu": [2, 6, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 61, 62, 63, 64, 65, 66, 70, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134, 136], "asynchron": [2, 48, 49, 61, 62, 63, 64, 65, 66, 136], "respect": [2, 6, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 61, 62, 63, 64, 65, 66, 73, 98, 99, 100, 101, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 129, 130, 136], "case": [2, 6, 7, 10, 22, 23, 24, 25, 26, 27, 48, 49, 54, 61, 62, 63, 64, 65, 66, 70, 73, 98, 99, 101, 105, 107, 125, 129, 130, 134, 135], "effect": [2, 6, 10, 48, 49, 61, 62, 63, 64, 65, 66], "receiv": [2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 54, 57, 61, 62, 63, 64, 65, 66, 70, 98, 99, 100, 103, 105, 107, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 129, 130], "tupl": [2, 6, 24, 48, 49, 61, 62, 63, 64, 65, 66, 70, 77, 82, 84, 90, 96, 100, 103, 111, 118, 121, 124, 127, 136], "tensor": [2, 6, 12, 13, 15, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 61, 62, 63, 64, 65, 66, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136], "batch_x": [2, 48, 49, 61, 62, 63, 64, 65, 66], "batch_i": [2, 48, 49, 61, 62, 63, 64, 65, 66], "now": [2, 6, 18, 47, 48, 49, 59, 61, 62, 93, 100, 118, 135, 136], "move": [2, 3, 48, 49, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 135, 136], "correct": [2, 10, 18, 48, 49, 55, 61, 62, 70, 134], "pytorch": [2, 6, 7, 8, 10, 13, 14, 15, 16, 17, 21, 43, 47, 48, 49, 54, 87, 89, 92, 127, 133, 134, 135], "explan": [2, 48, 49, 133], "add_early_stopping_by_val_scor": 2, "patienc": [2, 10, 72, 85, 132], "metric_nam": [2, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 70, 85, 106], "earli": [2, 10], "handler": [2, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 54, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133, 135, 136], "base": [2, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 56, 60, 69, 70, 71, 74, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134], "score": [2, 69, 70, 71, 72, 100, 101, 105, 108, 118, 119, 120], "name": [2, 6, 8, 10, 13, 14, 15, 16, 17, 18, 20, 21, 24, 47, 48, 49, 54, 55, 59, 60, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 96, 106, 121, 127, 128, 134, 135, 136], "metric": [2, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 54, 60, 61, 62, 70, 72, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 135], "order": [2, 7, 100, 120], "keep": [2, 6, 7, 13, 15, 17, 52, 70, 73, 75, 134, 136], "wait": [2, 72], "state": [2, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 52, 54, 59, 61, 62, 63, 64, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "earlystop": [2, 10], "gen_save_best_models_by_val_scor": 2, "save_handl": [2, 70], "n_save": [2, 13, 15, 21, 70, 71], "tag": [2, 12, 13, 14, 15, 16, 17, 20, 21, 24], "val": 2, "highest": [2, 70, 71], "retain": [2, 70, 71], "deleg": 2, "union": [2, 6, 12, 13, 14, 15, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 49, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136], "basesavehandl": [2, 70], "filenam": [2, 13, 15, 67, 69, 70, 71, 95, 96, 136], "implement": [2, 4, 8, 10, 12, 28, 32, 38, 39, 40, 46, 54, 70, 75, 100, 101, 103, 104, 110, 111, 127, 134, 135], "remov": [2, 3, 12, 13, 15, 54, 55, 59, 67, 69, 70, 71, 75], "fix": [2, 28, 33, 70], "disk": [2, 67, 70, 71], "disksav": [2, 7, 70, 71, 73], "state_dict": [2, 7, 50, 54, 70, 71, 72, 75, 76, 77, 82], "load_state_dict": [2, 7, 54, 70, 72, 75, 76, 77, 82], "fetch": [2, 6, 7, 10, 57, 60, 95, 96], "prefix": [2, 69, 70, 71], "keyword": [2, 13, 16, 17, 21, 44, 47, 54, 60, 67, 70, 71, 85, 111, 128, 134], "save_best_model_by_val_scor": 2, "output_path": [2, 95, 96], "path": [2, 13, 17, 21, 67, 70, 71, 95, 96, 136], "indic": [2, 7, 51, 55, 57, 71, 89, 97, 101, 125, 134, 136], "setup_any_log": 2, "logger_modul": 2, "log_every_it": 2, "deprec": [2, 54, 55, 70, 71, 133], "version": [2, 3, 6, 7, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42, 45, 46, 47, 48, 49, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 104, 106, 108, 115, 116, 118, 119, 120, 122, 127, 129, 130, 133, 134, 136], "instead": [2, 3, 13, 14, 15, 16, 17, 18, 20, 21, 49, 55, 71, 133], "setup_tb_log": 2, "setup_visdom_log": 2, "setup_mlflow_log": 2, "baselogg": [2, 12], "setup_clearml_log": 2, "clearml": [2, 3, 13], "averag": [2, 6, 22, 54, 73, 97, 100, 105, 107, 111, 113, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 134], "rate": [2, 13, 14, 15, 16, 17, 20, 21, 75, 77, 78, 81, 82, 83, 84, 86, 91, 115, 132], "torch": [2, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 62, 64, 67, 70, 71, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136], "kei": [2, 13, 14, 15, 16, 17, 20, 21, 24, 47, 54, 60, 70, 71, 72, 75, 101, 106, 111, 127], "interv": 2, "clearmllogg": [2, 13, 19], "setup_common_distrib_training_handl": 2, "train_sampl": 2, "to_sav": [2, 7, 13, 15, 70, 71, 73, 75], "save_every_it": 2, "1000": [2, 70, 71, 108], "lr_schedul": [2, 7, 70, 80, 82, 85, 86, 87, 89, 92, 132], "with_gpu_stat": 2, "output_nam": 2, "with_pbar": 2, "with_pbar_on_it": 2, "stop_on_nan": 2, "clear_cuda_cach": 2, "distribut": [2, 7, 13, 32, 43, 44, 45, 46, 47, 67, 69, 70, 71, 103, 133, 136], "schedul": [2, 7, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 133], "modelcheckpoint": [2, 10, 21, 70], "runningaverag": [2, 18], "update_funct": 2, "progress": [2, 18, 24, 106], "bar": [2, 18, 24, 32, 40, 41, 106], "distributedsampl": [2, 44, 134], "sampler": [2, 6, 43, 44, 50, 51, 53, 134], "set_epoch": 2, "instanc": [2, 13, 15, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 64, 70, 73, 82, 85, 95, 96, 102, 109, 110, 112, 113, 114, 116, 117, 121, 122, 123, 126, 134, 135], "mutual": [2, 32, 103], "exclus": 2, "paramschedul": [2, 3, 77, 82, 86], "_lrschedul": [2, 80, 82, 86], "nativ": [2, 6, 8, 45, 46, 47], "lrschedul": 2, "gpuinfo": 2, "pynvml": 2, "packag": [2, 6, 14, 16, 17, 20, 47, 75, 76, 104], "instal": [2, 13, 14, 15, 16, 17, 18, 20, 21, 47, 75, 76, 104, 108], "associ": [2, 13, 15, 54, 67, 69, 134], "wise": [2, 134], "cuda": [2, 6, 8, 14, 16, 44, 45, 48, 49, 62, 63, 64, 65, 73, 104, 134, 136], "empty_cach": 2, "v0": [2, 16, 54, 57, 71], "setup_common_training_handl": 2, "mlflow": [2, 14], "mlflowlogg": [2, 12, 14], "setup_neptune_log": 2, "neptun": [2, 3, 15], "neptunelogg": [2, 15], "setup_plx_log": 2, "polyaxon": [2, 16], "polyaxonlogg": [2, 12, 16], "tensorboard": [2, 8, 17, 24], "directori": [2, 13, 15, 17, 67, 70, 71, 133, 136], "setup_trains_log": 2, "renam": [2, 19], "visdom": [2, 3, 8, 20], "visdomlogg": [2, 12, 20], "setup_wandb_log": 2, "wandb": [2, 3, 21], "wandblogg": [2, 21], "6": [3, 6, 7, 10, 49, 54, 70, 71, 73, 75, 84, 89, 90, 95, 96, 98, 104, 105, 108, 113, 118, 119, 129, 130, 132], "fastailrfind": 3, "basictimeprofil": [3, 10], "handlerstimeprofil": [3, 10], "comprehens": 3, "tensorboardx": [3, 17], "mnist": [3, 7, 13, 15, 21, 133, 135], "cyclegan": 3, "efficientnet": [3, 8], "tqdm": [3, 8, 18, 24, 106], "definit": 4, "botchkarev": [4, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42], "page": 4, "30": [4, 6, 7, 22, 54, 84, 132], "appendix": 4, "mathemat": 4, "collect": [5, 6, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 58, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 94, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 134], "ordereddict": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 54, 70, 72, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "nn": [5, 11, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 70, 71, 73, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135], "engin": [5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136], "util": [5, 7, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 51, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133, 135], "regress": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133], "doctest": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "eval_step": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "default_evalu": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "param_tensor": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "zero": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132], "requires_grad": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132], "default_optim": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "sgd": [5, 6, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132, 135], "lr": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 70, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135], "must": [5, 6, 11, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 70, 71, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134], "hi": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "own": [5, 11, 15, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133], "testsetup": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "get_default_train": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "default_model": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "sequenti": [5, 11, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "linear": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 71, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "fc": [5, 11, 13, 15, 17, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "manual_se": [5, 7, 10, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133, 134, 136], "666": [5, 11, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130], "backend": [6, 44, 45, 46, 47, 50, 134], "nccl": [6, 47], "gloo": [6, 47], "mpi": [6, 47], "xla": [6, 44, 46, 47, 66, 69, 70], "tpu": [6, 8, 47, 49, 66, 70, 134], "horovod": [6, 8, 45, 46, 47], "context": [6, 15, 17, 20, 45, 47, 59, 75], "manag": [6, 15, 17, 20, 47, 59, 75, 133], "simplifi": [6, 47], "setup": [6, 7, 10, 13, 14, 15, 16, 17, 20, 21, 44, 47, 51, 54, 70, 71, 74, 111, 127, 133, 134, 136], "auto_model": 6, "auto_optim": 6, "auto_dataload": 6, "adapt": [6, 43, 44, 45, 46, 134], "transpar": [6, 133], "loader": 6, "exist": [6, 67, 71, 73, 75, 87, 88, 89, 90, 91, 92, 103, 131, 136], "main": [6, 7, 20, 47, 101, 135], "py": [6, 15, 47, 135], "idist": [6, 44, 45, 46, 47, 70], "local_rank": [6, 47, 134], "config": [6, 21, 47], "get_rank": [6, 47, 70], "batch_siz": [6, 7, 10, 14, 16, 44, 98, 99, 101, 103, 104, 105, 107, 108, 111, 115, 116, 124, 125, 129, 130, 134], "32": [6, 7, 10, 44, 54], "num_work": [6, 20, 44, 50, 134], "12": [6, 7, 10, 18, 24, 54, 69, 89, 106, 132, 136], "shuffl": [6, 7, 44], "size": [6, 7, 10, 43, 44, 45, 47, 79, 92, 99, 104, 107, 111, 122, 124, 133, 134], "resnet50": 6, "ddp": [6, 28, 29, 30, 31, 33, 34, 35, 37, 41, 42], "dp": 6, "just": [6, 7, 10, 21, 135], "itself": [6, 44], "accord": [6, 7, 47, 70, 111, 115, 134], "01": [6, 54, 78, 81, 82, 122, 132, 135, 136], "overrid": [6, 46, 50, 54, 69, 87, 88, 89, 90, 91, 92, 134], "safe": 6, "behind": 6, "xm": [6, 46, 67, 69, 71], "optimizer_step": [6, 46], "optimizi": 6, "perform": [6, 10, 18, 26, 27, 45, 73], "dist_config": [6, 47], "nproc_per_nod": [6, 47], "specifi": [6, 10, 14, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 47, 54, 55, 67, 70, 71, 75, 98, 99, 100, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134], "launch": [6, 10, 47], "python": [6, 15, 20, 47, 134], "start_method": 6, "fork": 6, "jupyt": [6, 18], "parallel": [6, 43, 108, 134, 136], "b": [6, 24, 47, 54, 57, 70, 109, 110, 116, 134], "cifar10": [6, 7, 8], "wrap": [6, 44, 45, 46, 70, 80, 82, 85, 132], "about": [6, 7, 50, 57, 131, 133], "final": [6, 32, 67, 71, 103, 134, 135], "spawn": [6, 47], "has_native_dist_support": 6, "avail": [6, 13, 14, 15, 16, 17, 18, 20, 21, 32, 38, 39, 40, 44, 45, 46, 47, 93, 103, 129, 130, 133], "has_xla_support": 6, "torch_xla": [6, 66, 136], "all_gath": 6, "gather": [6, 32, 103, 127], "oper": [6, 18, 26, 27, 32, 57, 58, 103, 134], "float": [6, 12, 13, 15, 17, 23, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 105, 113, 116, 118, 119, 120, 121, 122, 124], "across": [6, 32, 49, 63, 64, 65, 66, 103, 105, 129, 130, 134], "particip": [6, 43, 47, 131, 134], "shape": [6, 13, 17, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 98, 99, 101, 103, 104, 105, 107, 108, 112, 113, 114, 115, 116, 117, 122, 124, 125, 129, 130, 134, 136], "world_siz": [6, 44], "string": [6, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 70, 106, 121, 127, 128, 134], "all_reduc": 6, "op": [6, 46, 124], "sum": [6, 54, 99, 100, 115, 134], "reduc": [6, 10, 13, 15, 17, 20, 84, 85, 90, 104, 118, 119, 120, 134], "reduct": [6, 12, 13, 15, 17, 20, 134], "possibl": [6, 7, 15, 17, 20, 21, 70, 71, 116, 136], "product": [6, 134], "min": [6, 10, 85, 95, 96, 134], "max": [6, 10, 42, 54, 95, 96, 132, 134], "AND": 6, "OR": 6, "adasum": 6, "available_backend": [6, 44, 45, 46], "barrier": 6, "synchron": [6, 21, 50, 52, 133], "broadcast": [6, 32, 45, 46, 103], "src": [6, 121], "safe_mod": 6, "sure": [6, 44, 45, 69], "otherwis": [6, 17, 18, 49, 69, 70, 71, 72, 75, 85, 101, 105, 116, 121, 134], "crash": [6, 7], "non": [6, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 45, 46, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130], "rank": [6, 13, 32, 43, 44, 45, 46, 67, 70, 71, 103, 136], "anyth": [6, 49], "discard": 6, "mind": [6, 7, 70, 75], "mode": [6, 13, 15, 73, 85, 100, 132], "dens": 6, "There": [6, 10, 71, 73], "slower": 6, "than": [6, 18, 32, 38, 39, 40, 45, 47, 54, 72, 75, 79, 85, 93, 98, 103, 104, 127, 133, 136], "without": [6, 7, 8, 44, 47, 70, 125, 134, 135], "t1": [6, 132], "rand": [6, 7, 10, 108, 116, 122, 134], "s1": 6, "abc": 6, "3456": 6, "els": [6, 54, 70, 128], "empti": [6, 15, 18, 93], "assert": [6, 24, 50, 54, 106, 121, 127, 128], "isinst": 6, "those": [6, 7], "placehold": 6, "index": [6, 10, 47, 84, 88, 90, 95, 96, 102, 109, 110, 115, 122, 123, 125, 126, 134], "dist": [6, 47], "destroy_process_group": 6, "get_local_rank": 6, "local": [6, 10, 13, 21, 44, 47, 95, 96], "within": [6, 43, 131], "get_nnod": 6, "node": [6, 8, 47, 134], "get_node_rank": 6, "get_nproc_per_nod": 6, "per": [6, 10, 47, 54, 60, 106, 129, 130], "get_world_s": 6, "world": [6, 44, 45, 47], "hostnam": 6, "accept": [6, 13, 14, 15, 16, 17, 18, 20, 21, 45, 47, 57, 67, 70, 71, 93, 116, 127, 135], "timeout": 6, "timedelta": 6, "minut": 6, "init_method": [6, 47], "env": [6, 13, 47], "info": [6, 47, 136], "torch_init": 6, "comm": 6, "hvd_init": 6, "torchrun": [6, 47], "train_fn": 6, "c": [6, 54, 57, 129, 130, 133], "is_avail": 6, "is_initi": 6, "window": [6, 20], "file": [6, 13, 15, 18, 21, 47, 67, 69, 70, 71, 95, 96, 135, 136], "tmp": [6, 7, 10, 47, 50, 54, 70, 71], "share": [6, 15, 21], "model_nam": 6, "serial": [6, 7, 67, 71, 134], "one_rank_onli": 6, "with_barri": 6, "wrt": 6, "synchronis": 6, "mean": [6, 10, 21, 31, 32, 35, 36, 37, 41, 49, 54, 63, 64, 65, 66, 70, 73, 95, 96, 101, 103, 104, 105, 112, 113, 114, 116, 117, 124, 126, 128, 129, 130, 134], "some_handl": 6, "set_local_rank": 6, "hint": 6, "up": [6, 7, 73, 86, 99, 134, 135], "init_process_group": [6, 47], "dist_info": 6, "show_config": 6, "fn": [6, 98, 130], "kwargs_dict": 6, "entrypoint": 6, "top": [6, 123], "so": [6, 54, 67, 71, 92, 125, 129, 130, 134], "pickl": [6, 134], "impos": 6, "multiprocess": 6, "nnode": [6, 47], "node_rank": [6, 47], "master_addr": [6, 47], "127": 6, "master_port": [6, 47], "2222": [6, 29], "mp": 6, "start_process": 6, "xmp": 6, "hvd_run": 6, "toler": 6, "ignor": [6, 13, 49, 75, 102, 109, 110, 126, 134], "rais": [6, 9, 13, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 54, 67, 70, 71, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 134], "d": [6, 47], "23": [6, 7, 24, 54, 94, 106, 136], "8": [6, 7, 10, 28, 29, 30, 31, 47, 54, 68, 77, 80, 82, 84, 85, 86, 89, 90, 134, 135, 136], "master": [6, 8, 47], "7": [6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 46, 49, 54, 63, 64, 65, 66, 70, 76, 87, 88, 89, 90, 91, 92, 98, 100, 105, 111, 118, 123, 129, 130, 132], "googl": [6, 8], "colab": [6, 8], "core": [6, 54, 133, 136], "xla_model": [6, 136], "sync": [6, 21], "forc": 6, "destroi": 6, "get_": 6, "neg": [6, 70, 98, 115, 130], "impact": [6, 7, 18], "concept": [7, 133, 135], "It": [7, 10, 15, 17, 20, 21, 24, 54, 71, 72, 73, 75, 104, 105, 106, 108, 127, 134], "approxim": 7, "reproduc": [7, 51, 133], "origin": 7, "behaviour": [7, 54, 71], "easili": [7, 10, 131, 135], "deseri": 7, "data_load": [7, 54, 70], "create_dir": [7, 67, 70, 71], "l": [7, 118, 119], "checkpoint_50000": 7, "pt": [7, 50, 54, 70, 71], "restor": [7, 54, 75], "to_load": [7, 70, 73], "load": [7, 49, 54, 70, 73, 95, 96], "checkpoint_fil": 7, "load_object": [7, 70, 73], "continu": [7, 54, 131], "gener": [7, 8, 13, 14, 15, 16, 17, 20, 21, 73, 87, 89, 92, 108, 135], "rather": [7, 104, 136], "difficult": 7, "achiev": [7, 132], "reli": 7, "aspect": 7, "softwar": 7, "environ": [7, 15, 20, 68], "hardwar": 7, "note": [7, 45, 54, 57, 70, 71, 72, 104, 108, 125, 130, 135], "random": [7, 52, 136], "take": [7, 13, 14, 15, 16, 17, 20, 21, 55, 70, 71, 72, 78, 87, 88, 89, 90, 91, 92, 97, 103, 111, 131, 135], "your": [7, 13, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 49, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 135], "problem": 7, "platform": 7, "cudnn": [7, 50], "applic": [7, 45, 69, 70, 78, 121, 127], "enough": 7, "rerun": 7, "doe": [7, 13, 14, 15, 16, 17, 20, 21, 54, 71, 73, 89, 92], "ensur": [7, 13, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133], "deterministicengin": [7, 49], "reproduciblebatchsampl": [7, 50], "control": [7, 68, 97, 118, 119, 120, 133], "precis": [7, 8, 22, 25, 48, 49, 50, 83, 91, 100, 101, 105, 118, 119, 120, 125, 128, 134], "roughli": 7, "rang": [7, 10, 50, 54, 73, 75, 97, 116, 122], "num_epoch": [7, 50], "set_se": [7, 50], "do_single_epoch_iter": [7, 50], "dataload": [7, 10, 44, 49, 50, 51, 53, 54, 57, 60, 75, 95, 96, 134, 135], "made": [7, 131], "trivial": 7, "random_train_data_load": 7, "arang": 7, "print_train_data": 7, "tolist": [7, 25, 27, 54], "56": 7, "40": [7, 70, 84], "2nd": 7, "rng_state": 7, "31": [7, 54], "13": [7, 10, 54, 95], "18": [7, 15, 54], "16": [7, 10, 22, 47, 54, 96, 116, 122], "33": [7, 54], "36": 7, "37": 7, "19": [7, 10, 54, 96], "9": [7, 10, 13, 15, 17, 28, 29, 30, 31, 54, 71, 78, 80, 81, 84, 85, 87, 88, 89, 92, 98, 105, 118, 129, 130, 134], "20": [7, 47, 54, 84, 91, 92, 125, 128, 132, 136], "14": [7, 10, 54, 92], "26": [7, 54], "29": [7, 54], "35": [7, 106], "38": 7, "34": [7, 18, 54], "22": [7, 10, 54, 96], "17": [7, 10, 18, 24, 54, 95, 106], "21": [7, 22, 54, 84, 136], "24": [7, 24, 54, 106], "15": [7, 10, 54, 90, 92, 132], "39": 7, "28": [7, 54], "27": [7, 54], "11": [7, 10, 54, 89, 96, 112, 113, 114, 117, 122], "sampl": [7, 44, 99, 107, 115, 124, 125, 129, 130], "exactli": [7, 50], "simul": [7, 76, 77, 80, 82, 83, 85, 86, 91], "previou": [7, 54, 75], "skip": [7, 13, 73], "datapoint": 7, "augment": 7, "middl": [7, 79, 81], "remain": [7, 18, 84], "until": [7, 54, 84, 131], "issu": [7, 10, 22, 23, 25, 26, 27, 43, 54, 103], "period": [7, 70, 71, 92, 127, 128], "dure": [7, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 54, 57, 67, 70, 71, 73, 75, 76, 77, 80, 82, 83, 85, 87, 88, 89, 91, 92, 125, 127, 128, 133, 135], "random_train_data_gener": 7, "yield": [7, 10], "randint": [7, 134], "user_handl": 7, "77": [7, 70, 132], "randomli": 7, "alter": 7, "produc": [7, 13, 14, 15, 16, 17, 20, 21, 44, 50], "keep_random_st": 7, "numpi": [7, 52, 91, 132, 136], "therefor": [7, 10, 134, 135], "deal": 7, "write": [8, 70], "compact": 8, "full": 8, "featur": [8, 54, 104, 108, 134], "line": [8, 76, 135], "basic": [8, 54], "port": [8, 20, 47], "resnet": 8, "helper": [8, 12, 13, 14, 15, 16, 17, 20, 21, 24, 44, 45, 46, 52, 53, 70, 74, 82, 86, 99, 106, 107, 124, 127, 133, 135, 136], "dcgan": 8, "plain": 8, "deep": 8, "convolut": 8, "adversari": 8, "reinforc": 8, "actor": 8, "critic": [8, 136], "cart": 8, "pole": 8, "fast": 8, "style": [8, 15], "artist": 8, "transfer": [8, 70], "text": [8, 13, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 73, 98, 100, 101, 104, 105, 108, 109, 110, 112, 114, 116, 117, 129, 130], "classif": [8, 15, 25, 27, 101, 103, 125], "variat": 8, "auto": [8, 43, 44, 45, 46, 133], "encod": 8, "hors": 8, "zebra": 8, "nvidia": [8, 45, 49], "apex": [8, 45, 49, 65, 133], "amp": [8, 45, 48, 49, 62, 64], "finetun": 8, "b0": 8, "cifar100": 8, "classifi": 8, "fashion": [8, 134], "hyperparamet": 8, "tune": 8, "ax": [8, 75], "finder": [8, 75, 133], "benchmark": [8, 50], "mix": [8, 48, 49], "link": 8, "research": 8, "blob": 8, "torchvis": [8, 104, 108], "baselin": 8, "vision": [8, 78, 133], "imagenet": [8, 104, 108], "pascal": 8, "voc2012": 8, "notcomputableerror": [9, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 133, 134], "cannot": [9, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 75, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 134], "section": [10, 15, 132], "answer": 10, "frequent": [10, 20], "ask": [10, 131], "understand": [10, 135], "in_training_loop_on_epoch_complet": 10, "val_load": [10, 135], "when_validation_loop_is_don": 10, "plateau": 10, "equival": [10, 13, 14, 15, 16, 17, 20, 21, 129, 130, 135], "As": [10, 134], "consequ": 10, "too": [10, 128], "score_funct": [10, 13, 15, 21, 70, 71, 72], "best_model_sav": 10, "mymodel": [10, 71], "might": [10, 103, 122], "calcul": [10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 56, 98, 100, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 129, 130], "allow": [10, 54, 57, 131, 135], "backpropev": [10, 56], "back": [10, 17, 81], "propag": 10, "backward_start": [10, 56], "backward_complet": [10, 56], "optim_step_complet": [10, 56], "opitm": 10, "process_batch": 10, "function_before_backprop": [10, 56], "insert": 10, "limit": [10, 68, 134], "resourc": 10, "most": [10, 85, 133, 134, 135], "accumulation_step": 10, "update_fn": [10, 15, 17, 20, 63, 64, 65, 66], "criterion": [10, 54, 56, 111, 135], "blog": 10, "articl": 10, "dataflow": [10, 50, 52, 95, 96, 133], "infinite_iter": 10, "norm": [10, 12, 13, 15, 17, 20, 113], "3f": 10, "obtain": [10, 128], "63": 10, "862": 10, "64": [10, 18, 90], "042": 10, "936": 10, "141": [10, 132], "767": 10, "791": 10, "565": 10, "602": 10, "995": 10, "943": 10, "831": 10, "276": 10, "148": 10, "920": 10, "226": 10, "explicitli": [10, 24, 106, 127], "termin": [10, 54, 57, 68], "stop_train": 10, "restart": [10, 50, 54], "finite_unk_size_data_it": 10, "dataloader_stop_iter": [10, 57], "restart_it": 10, "val_step": 10, "either": [10, 18, 20, 22, 25, 26, 27], "finite_size_data_it": 10, "set_data": [10, 54], "manner": [10, 75], "depend": [10, 57, 104, 122, 128, 133], "simpliest": 10, "log_epoch_tim": 10, "log_total_tim": 10, "spent": 10, "log_intermediate_result": [10, 95, 96], "print_result": [10, 95, 96], "get_result": [10, 75, 95, 96], "stat": [10, 95, 129, 130], "second": [10, 68, 95, 97, 106, 135, 136], "std": [10, 54, 95, 96], "157": [10, 95], "46292": [10, 95], "01452": [10, 95], "1501": [10, 95], "26905": [10, 95], "07730": [10, 95], "01258": [10, 95], "11384": [10, 95], "00008": [10, 95], "1935": [10, 95], "28461": [10, 95], "1551": [10, 95], "00300": [10, 95], "02693": [10, 95], "82721": [10, 95], "00000": [10, 95], "00006": [10, 95], "piecewiselinear": [10, 95], "03482": [10, 95], "00001": [10, 95], "188": [10, 95], "00018": [10, 95], "679": [10, 95], "00002": [10, 95], "20037": [10, 95], "866": [10, 95], "00089": [10, 95], "1943": [10, 95], "00010": [10, 95], "00003": [10, 95, 96], "empty_cuda_cach": [10, 95], "log_elapsed_tim": [10, 95, 96], "57860": [10, 95], "11529": [10, 95], "14977": [10, 95], "12893": [10, 95], "00790": [10, 95], "yet": [10, 95], "trigger": [10, 18, 54, 57, 91, 95, 96, 134, 135], "breakdown": 10, "basi": [10, 129, 130], "log_training_result": [10, 93, 96, 135], "43245": [10, 96], "log_validation_result": [10, 96, 135], "55271": [10, 96], "log_tim": [10, 96], "00049": [10, 96], "00106": [10, 96], "log_training_loss": [10, 96, 135], "059": [10, 96], "04571": [10, 96], "took": [10, 96], "29543": [10, 96], "00393": [10, 96], "1875": [10, 96], "00784": [10, 96], "00602": [10, 96], "00034": [10, 96], "24365": [10, 96], "00533": [10, 96], "1874": [10, 96], "01129": [10, 96], "937": [10, 96], "00866": [10, 96], "00113": [10, 96], "timer": [10, 54, 68], "docstr": 10, "among": [10, 54], "label": [10, 13, 14, 15, 16, 17, 20, 21, 83, 91, 101, 115, 123, 125, 129, 130, 132], "forum": 10, "discuss": [10, 127], "categori": 10, "basehandl": 12, "callableeventwithfilt": [12, 18, 59, 60, 73, 91, 134], "eventslist": [12, 59, 73, 91], "forward": [12, 104, 133], "attach_opt_params_handl": [12, 13, 14, 15, 16, 17, 18, 20, 21], "shortcut": [12, 54], "optimizerparamshandl": [12, 13, 14, 15, 16, 17, 20, 21], "miss": 12, "statement": [12, 59], "attach_output_handl": [12, 13, 14, 15, 16, 17, 20, 21], "outputhandl": [12, 13, 14, 15, 16, 17, 20, 21, 24], "baseoptimizerparamshandl": 12, "param_nam": [12, 13, 14, 15, 16, 17, 20, 21, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 132], "baseoutputhandl": 12, "global_step_transform": [12, 13, 14, 15, 16, 17, 20, 21, 70, 71, 74], "state_attribut": [12, 13, 14, 15, 16, 17, 18, 20, 21], "baseweightshandl": 12, "whitelist": [12, 13, 15, 17], "baseweightsscalarhandl": 12, "scalar": [12, 13, 15, 17, 18, 20, 76, 77, 81, 84, 85, 87, 88, 89, 90, 92, 103, 134], "plot": [13, 14, 15, 16, 17, 18, 20, 21, 75, 76, 83, 91, 93, 125, 132], "upload": [13, 15], "choic": 13, "server": [13, 15, 20], "s3": 13, "bucket": 13, "pip": [13, 14, 15, 16, 17, 20, 21, 75, 76, 133], "init": [13, 21], "alreadi": [13, 18, 54, 70, 71, 73, 87, 88, 89, 90, 91, 92], "project_nam": [13, 15], "integr": [13, 15, 21], "task_nam": 13, "cnn": [13, 15, 21], "nll": [13, 14, 15, 16, 17, 18, 20, 21, 72, 135], "global_step_from_engin": [13, 14, 15, 16, 17, 20, 21, 70, 71], "train_evalu": [13, 14, 15, 16, 17, 20, 21, 93], "weightsscalarhandl": [13, 15, 17, 20], "classmethod": [13, 76, 77, 80, 82, 83, 85, 91], "bypass_mod": 13, "bypass": 13, "github_act": 13, "unless": 13, "overridden": [13, 69], "set_bypass_mod": 13, "outsid": 13, "Will": 13, "drop": 13, "standalon": [13, 47], "access": [13, 14, 15, 16, 17, 20, 21, 54, 127, 131], "clearmlsav": [13, 19], "output_uri": 13, "dirnam": [13, 67, 71], "artifact": 13, "runtim": 13, "error": [13, 29, 31, 32, 34, 35, 36, 38, 39, 40, 70, 93, 103, 112, 114, 116, 117, 136], "locat": 13, "123": [13, 18], "score_nam": [13, 15, 21, 69, 70, 71], "filename_prefix": [13, 15, 21, 70, 71], "validation_evalu": [13, 15], "event_complet": [13, 57], "get_local_copi": 13, "download": [13, 15], "gradshisthandl": [13, 17], "submodul": [13, 15, 17], "along": [13, 14, 15, 16, 17, 18, 20, 21], "fulli": [13, 15, 17, 128], "qualifi": [13, 15, 17, 72], "bia": [13, 15, 17, 30, 37], "has_shape_2_1": [13, 17], "p": [13, 15, 17, 100, 105, 108, 113, 118, 119, 120, 128], "gradsscalarhandl": [13, 15, 17, 20], "upon": [13, 15, 17], "ones": [13, 15, 17, 104], "permit": [13, 15, 17], "Then": [13, 15, 17, 73, 77, 84, 85, 91], "belong": [13, 15, 17, 129, 130], "layer": [13, 15, 17], "is_in_fc_lay": [13, 15, 17], "param_group": [13, 14, 15, 16, 17, 20, 21, 54, 77, 78, 79, 80, 81, 82, 83, 84, 86], "prepar": [13, 14, 15, 16, 17, 20, 21], "loss1": [13, 14, 15, 16, 17, 20, 21], "another_loss": [13, 14, 15, 16, 17, 20, 21], "loss2": [13, 14, 15, 16, 17, 20, 21], "global": [13, 14, 15, 16, 17, 20, 21, 70, 71, 74], "desir": [13, 14, 15, 16, 17, 20, 21, 70, 71], "integ": [13, 14, 15, 16, 17, 20, 21, 70, 71, 77, 84, 90, 118, 134], "global_step": [13, 14, 15, 16, 17, 20, 21, 70, 71], "500": [13, 14, 15, 16, 17, 20, 21, 54], "validation_set": [13, 14, 15, 16, 17, 20, 21], "alpha": [13, 14, 15, 16, 17, 18, 20, 21, 50, 54, 118, 119, 120, 121], "beta": [13, 14, 15, 16, 17, 18, 20, 21, 50, 54, 101, 105, 128, 134], "get_event_attrib_valu": [13, 14, 15, 16, 17, 20, 21, 60], "conv": [13, 17], "weight_selector": [13, 17], "has_bias_in_nam": [13, 15, 17], "custom_event_nam": [13, 14, 15, 16, 17, 20, 21, 74], "tracking_uri": 14, "client": [14, 15, 16], "uri": 14, "log_param": [14, 16], "__class__": [14, 16], "__name__": [14, 16], "__version__": [14, 16], "get_device_nam": [14, 16], "mlflow_tracking_uri": 14, "api_token": 15, "anonym": 15, "npt_logger": 15, "experiment_nam": 15, "param": [15, 76, 77, 78, 81, 82, 84, 85, 87, 88, 89, 90, 92], "minst": [15, 21], "token": [15, 106, 118, 119, 120], "ai": 15, "form": [15, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 78, 87, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 134], "namespac": 15, "tom": 15, "neptune_project": 15, "variabl": [15, 20, 45, 99, 107, 124, 134], "taken": [15, 54, 77, 125, 136], "offline_mod": 15, "send": [15, 20, 45, 49, 54], "usual": [15, 54, 78, 79, 81, 111], "debug": [15, 136], "purpos": [15, 93, 131, 134, 135], "edit": 15, "metadata": [15, 69], "view": [15, 134], "column": [15, 125], "upload_source_fil": 15, "tab": 15, "unix": 15, "pathnam": 15, "expans": 15, "recurs": [15, 128], "lookup": 15, "later": 15, "glob": 15, "creation": 15, "read": [15, 133, 135], "pair": [15, 25, 70], "properti": 15, "explor": 15, "ui": 15, "o": [15, 71], "org": [15, 75, 87, 89, 92, 100, 127], "pytor1": 15, "chart": 15, "neptunesav": 15, "validation_accuraci": [15, 21], "neptuneserv": 15, "close": [15, 16, 17, 18, 20, 21, 87], "neptuneml": 15, "plx_logger": 16, "posit": [16, 17, 21, 47, 98, 100, 105, 107, 115, 129, 130, 134], "favor": 17, "fall": 17, "summarywrit": 17, "v1": 17, "progressbar": [18, 24, 49, 106], "persist": [18, 24, 106], "bar_format": 18, "desc": 18, "n_fmt": 18, "total_fmt": 18, "percentag": [18, 24, 39], "0f": 18, "postfix": 18, "elaps": [18, 97], "tqdm_kwarg": 18, "custom": [18, 44, 54, 56, 57, 96, 127, 133, 135], "format": [18, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 112, 113, 114, 116, 117, 122, 123, 125, 127, 134, 136], "l_bar": 18, "r_bar": 18, "rate_fmt": 18, "descript": 18, "predict": [18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 93, 98, 103, 104, 105, 108, 111, 112, 114, 115, 117, 125, 127, 129, 130], "pbar": [18, 49], "128": 18, "06": [18, 113], "stderr": [18, 136], "log_fil": 18, "w": [18, 100, 116], "directli": [18, 49, 70, 134, 135], "recommend": [18, 73], "replac": [18, 50, 53, 70, 71, 72], "log_messag": 18, "guarante": [18, 67, 71], "stdout": 18, "insid": 18, "tqdm_notebook": 18, "render": [18, 70, 71], "ipywidget": 18, "bug": 18, "closing_event_nam": 18, "select": [18, 116], "entri": 18, "advanc": 18, "0d": 18, "1d": [18, 99, 107, 124], "intention": 18, "preserv": 18, "wish": 18, "clearml_logg": 19, "trainslogg": 19, "alia": [19, 70], "trainssav": 19, "show_legend": 20, "flag": [20, 97, 98, 129, 130], "show": [20, 71, 73, 75, 101, 111, 127, 134], "legend": [20, 83, 91, 132], "vd_logger": 20, "vb_logger": 20, "raise_except": 20, "git": [20, 133], "fossasia": 20, "visdom_server_url": 20, "visdom_port": 20, "worker": [20, 44, 136], "concurr": 20, "threadpoolexecutor": 20, "post": 20, "thread": [20, 21], "usernam": 20, "password": 20, "visdom_usernam": 20, "visdom_password": 20, "slow": 20, "down": 20, "avoid": [20, 70, 113, 131, 136], "situat": 20, "less": [20, 72, 133], "seper": 21, "whatev": [21, 83, 91], "entiti": 21, "bias": 21, "cloud": [21, 70], "wrapper": [21, 49, 55, 80, 85, 104], "graph": 21, "watch": 21, "dir": 21, "model_checkpoint": 21, "require_empti": [21, 67, 71], "check_compute_fn": [22, 23, 25, 26, 27, 103], "accumul": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 49, 63, 64, 65, 66, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135], "truth": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 115, 125], "sklearn": [22, 23, 25, 26, 27, 33, 101], "average_precision_scor": 22, "expect": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 71, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131], "warn": [22, 23, 25, 26, 27, 70, 73, 103, 136], "compris": [22, 25, 26, 27], "probabl": [22, 25, 26, 27, 108], "estim": [22, 25, 26, 27], "confid": [22, 25, 26, 27], "shown": [22, 25, 26, 27, 131, 135], "activated_output_transform": 22, "softmax": 22, "avg_precis": [22, 25, 26, 27], "79": [22, 24], "70": 22, "46": [22, 136], "54": 22, "84": [22, 132], "y_true": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 98, 101, 102, 103, 104, 105, 109, 110, 111, 115, 121, 125, 126, 128, 129, 130, 134], "average_precis": 22, "9166": 22, "cohen": 23, "kappa": 23, "wieght": 23, "quadrat": 23, "cohen_kappa_scor": 23, "whether": [23, 55, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 115, 121], "output_tranform": [23, 99, 107, 112, 113, 114, 117, 123], "ck": 23, "4285": 23, "get_cohen_kappa_fn": 23, "memori": [24, 32, 38, 39, 40, 93, 103, 136], "report": [24, 101], "measur": [24, 97, 122, 129, 130, 135], "mem": 24, "59": 24, "00": [24, 106, 136], "On": [24, 106, 121, 127, 128], "under": [24, 26, 93, 106, 121, 127, 128], "epochwis": [24, 106, 121, 127, 128], "usage_nam": [24, 106, 121, 127, 128, 134], "batchwis": [24, 106, 121, 127, 128], "mymetr": [24, 106, 121, 127, 128], "is_attach": [24, 106, 121, 127, 128], "put": [24, 106, 127], "sent": [24, 106, 127], "actual": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 49, 55, 71, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130], "quantiti": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 134], "shallow": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128], "flatten": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128], "recal": [25, 101, 105, 118, 119, 120, 125, 128, 134], "threshold": [25, 27, 85, 98, 105, 129, 130, 132], "binari": [25, 27, 98, 105, 125, 129, 130], "precision_recall_curv": 25, "sigmoid_output_transform": [25, 26, 27], "sigmoid": [25, 26, 27, 125], "0474": [25, 26, 27], "5987": [25, 26, 27], "7109": [25, 26, 27], "9997": [25, 26, 27], "prec_recall_curv": 25, "round": [25, 27, 98, 105, 125, 129, 130], "area": 26, "characterist": [26, 27], "curv": [26, 75], "roc": [26, 27], "auc": 26, "roc_auc_scor": 26, "roc_curv": [26, 27], "6666": [26, 98, 101], "roc_auc": 27, "fpr": 27, "tpr": 27, "333": 27, "711": 27, "047": 27, "canberra": 28, "cm": [28, 102, 109, 110, 125, 126, 134], "sum_": [28, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 100, 108, 112, 114, 117, 129, 130], "frac": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 98, 105, 108, 109, 110, 112, 114, 116, 117, 129, 130], "a_j": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "p_j": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "distanc": [28, 33, 42, 104, 113, 116], "__init__": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 88, 104, 127, 134], "block": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 98, 99, 100, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130], "8000": 28, "ab": [28, 75, 132], "denomin": 28, "fraction": [29, 30], "absolut": [29, 31, 32, 34, 35, 38, 39, 40, 83, 91, 112], "fae": 29, "fractional_abs_error": 29, "fb": 30, "fractional_bia": 30, "4000": [30, 105], "geometr": [31, 32, 107, 124], "gmae": 31, "exp": [31, 32, 75, 100, 108], "ln": [31, 32], "2723": 31, "rel": [32, 35, 40, 85], "gmrae": 32, "math": 32, "target": [32, 38, 39, 40, 54, 59, 93, 103, 111, 112, 113, 114, 116, 117, 122, 123, 125, 127], "potenti": [32, 38, 39, 40, 93, 103], "larger": [32, 38, 39, 40, 44, 45, 47, 54, 70, 79, 93, 103], "ram": [32, 38, 39, 40, 93, 103], "gmare": 32, "75": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 103, 112, 113, 114, 116, 117, 122, 123, 129, 130, 132], "manhattan": 33, "md": [33, 38, 39, 40], "compat": [33, 44, 129, 130], "maximum": [34, 68, 116, 133], "maxa": 34, "max_": [34, 116], "left": [34, 35, 38, 39, 40, 73, 100, 105, 116], "lvert": [34, 109, 110, 112], "rvert": [34, 109, 110, 112], "right": [34, 35, 38, 39, 40, 73, 100, 105, 116, 131], "mae": [34, 38, 112], "mare": 35, "me": 36, "625": [36, 38], "normal": [37, 86, 115, 122, 125, 134], "mnb": 37, "median": [38, 39, 40], "mdae": 38, "float32": [38, 39, 40, 41, 103], "mdape": 39, "cdot": [39, 73, 100], "mape": 39, "mdrae": 40, "mrae": 40, "r": [41, 100, 105, 118, 119, 120, 128], "squar": [41, 104, 114, 116, 117], "coeffici": [41, 102], "r2": 41, "8035": 41, "wave": [42, 78], "hedg": 42, "whd": 42, "num_replica": 43, "proxi": 43, "23430": 43, "issuecom": 43, "562350407": 43, "assum": [43, 101, 134], "constant": [43, 73], "scale": [44, 49, 64, 75], "equal": [44, 70, 71, 72, 84, 97, 125, 136], "nproc": 44, "distributedproxysampl": 44, "pin_memori": [44, 134], "iterabledataset": 44, "mpdeviceload": 44, "_mpdeviceload": 44, "distribt": [44, 45], "train_dataset": 44, "drop_last": 44, "sync_bn": 45, "distributeddataparallel": [45, 49, 70, 73, 134], "dataparallel": [45, 70, 73], "convert_sync_batchnorm": 45, "batchnorm": 45, "convers": 45, "opt_level": 45, "goal": 46, "distributedoptim": 46, "launcher": [47, 133, 136], "spawn_kwarg": 47, "child": 47, "script": 47, "horovodrun": 47, "total": [47, 54, 60, 95, 96, 97], "mandatori": 47, "tcp": 47, "ip": 47, "address": 47, "np": [47, 83, 91, 132], "3344": 47, "h": [47, 116], "hostname1": 47, "hostname2": 47, "both": [47, 115, 129, 130], "some_fil": 47, "23456": 47, "15000": 47, "func": [47, 52, 54, 134, 136], "amp_mod": [48, 49], "factori": [48, 49, 61, 62, 63, 64, 65, 66], "assign": [48, 49, 61, 62, 63, 64, 65, 66, 104, 108, 125], "fit": [48, 61, 62], "cast": [48, 49, 131], "float16": [48, 49], "infer": [48, 61, 62, 115], "batch_pr": [48, 61, 62], "determinist": [49, 50, 51, 52, 53, 133], "scaler": [49, 64], "gradient_accumulation_step": [49, 63, 64, 65, 66], "gradscal": [49, 64], "convert_tensor": [49, 133, 136], "tqdm_logger": 49, "prepare_batch_fn": 49, "output_transform_fn": 49, "behavior": 49, "beforehand": 49, "finish": 49, "io": 49, "html": [49, 87, 89, 92, 100], "deriv": [50, 54, 69], "seed_offset": 50, "resum": [50, 54, 73, 97, 133], "setup_saved_rng_st": 50, "setup_sampl": 50, "handl": [50, 54, 59, 70, 73, 100, 134], "state_dict_user_kei": [50, 54], "append": [50, 54, 93], "init_user_valu": [50, 54], "save_engin": [50, 54], "batch_sampl": 51, "start_iter": 51, "batchsampl": [51, 53], "update_dataload": 51, "rewind": 51, "setup_batch_indic": 51, "intact": 52, "new_batch_sampl": 53, "emit": 54, "goe": [54, 77], "last_event_nam": 54, "interrupt": [54, 57], "behav": 54, "certain": [54, 134], "corner": 54, "compar": [54, 104], "interrupt_resume_en": 54, "log_train": 54, "batch_loss": 54, "10874069479016124": 54, "1700": 54, "4217900575859437": 54, "predict_on_batch": 54, "eval": [54, 73, 104, 135], "no_grad": [54, 104, 135], "val_acc": [54, 69], "val_dataload": 54, "imag": [54, 104, 108, 116, 122], "compute_mean_std": 54, "reshap": 54, "dtype": [54, 99, 100, 102, 105, 107, 109, 110, 116, 129, 130], "float64": [54, 99, 100, 102, 105, 107, 109, 110, 129, 130], "mean2": 54, "compute_engin": 54, "img_mean": 54, "img_mean2": 54, "sqrt": [54, 104, 117], "invok": 54, "No": 54, "signatur": [54, 103, 124], "bound": [54, 75, 78, 79, 81], "exception_rais": [54, 57], "print_epoch": [54, 59], "events_list": 54, "execute_someth": 54, "relat": [54, 131], "exchang": 54, "dynam": 54, "has_event_handl": 54, "check": [54, 94, 127, 128, 133, 134], "search": [54, 75], "signal": [54, 116], "check_input_data": 54, "call_interrupt": 54, "4rd": 54, "500th": 54, "499": 54, "point": 54, "door": 54, "being": [54, 99, 107, 108, 131], "foo_ev": [54, 57], "bar_ev": [54, 57], "bwd_event": 54, "opt_ev": 54, "trigger_custom_ev": 54, "do_foo_op": 54, "do_bar_op": 54, "enum": [54, 55, 59], "time_iteration_start": 54, "time_iteration_complet": 54, "tbptt_event_to_attr": 54, "time_iter": 54, "kept": [54, 70, 71], "NOT": 54, "repeat": [54, 77], "again": [54, 73, 131], "account": [54, 87, 88, 89, 90, 91, 92, 131], "count": [54, 72, 115, 129, 130], "preprocess": 54, "latter": [54, 111, 121, 127], "switch_batch": 54, "preprocess_batch": 54, "begin": 54, "processing_funct": 54, "newli": [54, 83, 91], "modifi": [54, 100], "switch": [54, 133], "data1": [54, 70], "data2": 54, "switch_iter": 54, "5000": [54, 99, 105, 109, 110, 129, 130], "switch_dataload": 54, "2669": 54, "terminate_epoch": [54, 57], "terminate_single_epoch": [54, 57], "touch": 55, "boolean": 55, "alwai": [55, 70], "static": [55, 70, 95, 96, 125], "default_event_filt": 55, "every_event_filt": 55, "member": [55, 131], "once_event_filt": 55, "get_batch_start": 57, "get_batch_complet": 57, "encount": [57, 125], "tabl": 57, "illustr": [57, 134], "call_everi": 57, "10th": [57, 84], "call_onc": 57, "50th": [57, 106], "combin": [57, 134], "call_on_ev": [57, 58], "stack": 58, "__or__": 58, "weakref": 59, "protocol": 59, "unregist": 59, "atom": [67, 71], "save_on_rank": [67, 70, 71], "destin": [67, 71], "damag": [67, 71], "doesnt": 67, "limit_sec": 68, "28800": 68, "session": 68, "gracefulli": 68, "exce": 68, "hour": 68, "__call__": [69, 88], "treat": 69, "slightli": 69, "stuck": [69, 70], "addition": 69, "basenam": 69, "epoch_checkpoint": 69, "prioriti": [69, 70], "higher": [69, 72], "better": [69, 70, 135], "6554435": 69, "archiv": [70, 71], "filename_pattern": [70, 71], "include_self": [70, 71], "greater_or_equ": [70, 71], "get_default_score_fn": 70, "older": [70, 71], "compress": [70, 71], "latest": [70, 71, 133], "instanti": [70, 71], "suffix": 70, "ext": [70, 136], "constructor": 70, "compos": 70, "neg_val_loss": 70, "_neg_val_loss": 70, "1234": 70, "templat": 70, "30000": 70, "94": 70, "collid": 70, "overwritten": 70, "newer": 70, "expos": 70, "last_checkpoint": [70, 71], "checkpoint_12345": 70, "friendli": 70, "zeroredundancyoptim": 70, "wrong": [70, 134], "checkpoint_it": 70, "checkpoint_": 70, "gst": 70, "checkpoint_7000": 70, "checkpoint_8000": 70, "checkpoint_5": 70, "checkpoint_6": 70, "best_model_9_accuraci": 70, "best_model_10_accuraci": 70, "78": [70, 132], "customis": 70, "field": 70, "score_sign": 70, "sign": 70, "best_acc_scor": 70, "best_model_handl": 70, "val_accuraci": 70, "neg_loss_scor": 70, "val_neg_loss": 70, "filepath": [70, 136], "model_state_dict": 70, "opt_state_dict": 70, "strict": 70, "enabl": [70, 100], "pretrain": [70, 104, 108], "tempfil": 70, "pathlib": 70, "temporarydirectori": 70, "tmpdirnam": 70, "myprefix": [70, 71], "1e": [70, 76, 83, 113, 128, 132], "randn": 70, "checkpoint_fp": 70, "myprefix_checkpoint_40": 70, "obj": 70, "reload_object": 70, "load_kwarg": 70, "filename_compon": 70, "compon": [70, 133, 135], "global_st": 70, "independ": [70, 83, 91], "fold": 70, "data0": 70, "setup_filename_pattern": 70, "with_prefix": 70, "with_scor": 70, "with_score_nam": 70, "with_global_step": 70, "least": [70, 94, 134], "save_interv": 71, "save_as_state_dict": 71, "action": 71, "step_numb": 71, "parent": 71, "pariti": 71, "sort": 71, "listdir": 71, "myprefix_mymodel_20": 71, "myprefix_mymodel_30": 71, "early_stop": 72, "min_delta": 72, "cumulative_delta": 72, "minimum": [72, 75, 116], "val_loss": 72, "best_scor": 72, "ema_handl": 73, "momentum": [73, 132, 135], "0002": 73, "momentum_warmup": 73, "warmup_it": 73, "handle_buff": 73, "exponenti": [73, 75, 87], "ema": 73, "smooth": [73, 75, 100], "theta_": 73, "t": [73, 97, 100, 101, 127], "retriev": [73, 91], "ema_momentum": 73, "warmup": 73, "phase": [73, 86], "buffer": 73, "three": [73, 85, 134], "ema_train": 73, "ema_model": 73, "build": [73, 101], "train_step_fn": 73, "resume_from": 73, "ckpt_handler": 73, "print_ema_momentum": 73, "val_step_fn": 73, "get_val_step_fn": 73, "run_valid": 73, "val_data_load": 73, "warm": [73, 86], "linearli": [73, 77, 81, 84, 90], "002": 73, "afterward": 73, "step_fn": 73, "build_gener": 73, "discrimin": 73, "build_discrimin": 73, "gen_handl": 73, "disc_handl": 73, "get_step_fn": 73, "gen_ema_momentum": 73, "dis_ema_momentum": 73, "disc_ema_momentum": 73, "warn_if_exist": 73, "suppress": 73, "choos": 73, "uniqu": 73, "thrown": 73, "lr_finder": 75, "boundari": 75, "valuabl": 75, "well": [75, 128, 129, 130, 135], "trainer_with_lr_find": 75, "matplotlib": [75, 76, 91, 132], "suggest": [75, 78, 133], "lr_suggest": 75, "exit": 75, "cyclic": [75, 78, 132], "arxiv": 75, "1506": 75, "01186": 75, "fastai": 75, "lr_find": 75, "apply_suggested_lr": 75, "num_it": 75, "start_lr": 75, "end_lr": 75, "step_mod": 75, "smooth_f": 75, "05": [75, 81, 84, 85, 86, 123], "diverge_th": 75, "lower": 75, "upper": 75, "factor": [75, 85, 87, 89, 92, 105, 121, 132], "best_loss": 75, "find": [75, 104, 131], "numer": 75, "skip_start": 75, "skip_end": 75, "log_lr": 75, "display_suggest": 75, "trim": 75, "logarithm": 75, "red": 75, "dot": 75, "pre": 75, "plt": [75, 76, 83, 91, 132], "subplot": [75, 132], "figur": [75, 76, 132], "savefig": 75, "jpg": 75, "param_schedul": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92], "save_histori": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "param_histori": [76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "get_param": [76, 77, 78, 80, 81, 84, 85, 87, 88, 89, 90, 92], "plot_valu": 76, "num_ev": [76, 77, 80, 82, 83, 85, 91, 132], "scheduler_kwarg": [76, 83, 85, 91], "line2d": 76, "pylab": [76, 132], "figsiz": [76, 132], "linearcyclicalschedul": [76, 77, 83], "start_valu": [76, 78, 79, 81, 83, 132], "end_valu": [76, 78, 79, 81, 83, 132], "cycle_s": [76, 78, 79, 81, 83, 132], "simulate_valu": [76, 77, 80, 82, 83, 85, 91, 132], "event_index": [76, 77, 80, 82, 83, 85, 88, 91], "durat": [77, 86, 132], "concat": [77, 132], "default_train": [77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 121], "scheduler_1": [77, 78, 82, 132], "scheduler_2": [77, 78, 82, 132], "cosineannealingschedul": [77, 82], "anneal": [77, 78, 132], "indefinit": 77, "combined_schedul": 77, "print_lr": [77, 78, 80, 81, 82, 84, 86], "8828": 77, "6000": 77, "3171": 77, "value_0": 77, "value_1": 77, "cycle_mult": [78, 79, 81, 132], "start_value_mult": [78, 79, 81, 132], "end_value_mult": [78, 79, 81, 132], "param_group_index": [78, 79, 81, 82, 83, 84, 85], "half": [78, 81], "cosin": [78, 132], "smith17": 78, "ratio": [78, 79, 81, 116], "iteration_": [78, 79, 81], "cosineann": [78, 82], "1464": [78, 82], "4999": [78, 82, 101], "8535": [78, 82], "001": [78, 80, 81, 82, 132], "01464": [78, 82], "04999": [78, 82], "08535": [78, 82], "smith": 78, "lesli": 78, "wacv": 78, "ieee": 78, "winter": 78, "confer": 78, "use_legaci": 80, "steplr": [80, 92, 132], "torch_lr_schedul": [80, 86], "step_siz": [80, 91, 92, 132], "gamma": [80, 86, 87, 88, 89, 91, 92, 132], "010": 80, "adjust": [81, 122], "scheduler1": [81, 84], "scheduler2": [81, 84], "lr_valu": [83, 132], "arrai": [83, 91, 132], "xlabel": [83, 91, 132], "ylabel": [83, 91, 132], "milestones_valu": [84, 90], "piecewis": [84, 90], "mileston": [84, 89, 90], "45": 84, "decreas": [84, 85], "20th": 84, "jump": 84, "21st": 84, "30th": 84, "till": 84, "third": [84, 134], "fifth": 84, "milestones_values1": 84, "08": 84, "02": [84, 136], "milestones_values2": 84, "09": 84, "reducelronplateau": 85, "whose": 85, "monitor": 85, "paramat": 85, "tenth": 85, "multipli": 85, "threshold_mod": [85, 132], "metric_valu": [85, 132], "set_metric_v": 85, "trigger_ev": 85, "init_lr": [85, 132], "warmup_start_valu": 86, "warmup_dur": 86, "warmup_end_valu": 86, "output_simulated_valu": 86, "fill": 86, "concatschedul": 86, "exponentiallr": [86, 87, 132], "98": [86, 121, 132], "098": 86, "09604": 86, "09411": 86, "09223": 86, "09039": 86, "state_param_schedul": [87, 88, 89, 90, 91, 92], "initial_valu": [87, 88, 89, 91, 92], "create_new": [87, 88, 89, 90, 91, 92], "decai": [87, 89, 92, 121], "stabl": [87, 89, 92, 133], "81": [87, 88, 89, 92, 132], "729": [87, 88, 89, 92], "6561": [87, 88, 89, 92], "print_param": [87, 88, 89, 90, 92], "7290": [87, 88, 89, 92], "lambda_obj": 88, "lambdast": 88, "self": [88, 93, 104, 127, 134], "event_endex": 88, "5904": [88, 92], "5314": 88, "4782": 88, "4304": 88, "reach": 89, "multisteplr": 89, "96": 90, "92": 90, "88": 90, "8400": 90, "76": 90, "72": 90, "68": 90, "pyplot": [91, 132], "step_state_param_valu": 91, "stepstateschedul": 91, "step_scheduled_param": 91, "99": 91, "visual": [93, 132], "eo": 93, "y_pred0": 93, "y0": 93, "y_pred1": 93, "y1": 93, "terminate_on_nan": 94, "nan": [94, 107], "infinit": 94, "time_profil": [95, 96], "profil": [95, 96, 133], "train_updat": [95, 96], "write_result": [95, 96], "path_to_dir": [95, 96], "csv": [95, 96], "aggreg": [95, 96, 107, 135], "unaggreg": [95, 96], "awesome_filenam": [95, 96], "processing_stat": [95, 96], "dataflow_stat": [95, 96], "event_start": 95, "252387": [95, 96], "125676": [95, 96], "00029": [95, 96], "252342": [95, 96], "125123": [95, 96], "divid": 97, "step_count": 97, "increment": 97, "forget": 97, "sleep": 97, "idl": 97, "003073937026784": 97, "2003182829997968": 97, "paus": 97, "10016545779653825": 97, "training_update_funct": 97, "callback": 97, "is_multilabel": [98, 101, 129, 130], "multiclass": [98, 101, 105, 129, 130], "multilabel": [98, 101, 129, 130], "tp": [98, 129, 130], "tn": 98, "fp": [98, 129], "num_categori": [98, 101, 105, 129, 130], "greater": 98, "visit": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130], "0266": [98, 101, 105, 129, 130], "1719": [98, 101, 105, 129, 130], "3055": [98, 101, 105, 129, 130], "6886": [98, 101, 105, 129, 130], "3978": [98, 101, 105, 129, 130], "8176": [98, 101, 105, 129, 130], "9230": [98, 101, 105, 129, 130], "0197": [98, 101, 105, 129, 130], "8395": [98, 101, 105, 129, 130], "1785": [98, 101, 105, 129, 130], "2670": [98, 101, 105, 129, 130], "6084": [98, 101, 105, 129, 130], "8448": [98, 101, 105, 129, 130], "7177": [98, 101, 105, 129, 130], "7288": [98, 101, 105, 129, 130], "7748": [98, 101, 105], "9542": [98, 101, 105], "8573": [98, 101, 105], "element": [98, 105, 129, 130, 131], "thresholded_output_transform": [98, 105, 129, 130], "65": [98, 105, 129, 130], "arithmet": [99, 124, 133], "rule": [99, 107, 124], "nd": [99, 107, 124], "seen": [99, 107, 125], "avg": [99, 101, 107, 135], "er": [99, 107], "ngram": [100, 120], "no_smooth": 100, "macro": [100, 101, 129, 130], "b_": 100, "w_": 100, "p_": 100, "gram": 100, "sentenc": 100, "breveti": 100, "penalti": 100, "papineni": 100, "et": [100, 104, 108], "al": [100, 104, 108], "2002": [100, 104], "review": [100, 131, 135], "techniqu": 100, "chen": [100, 104], "2014": [100, 104], "hypothes": 100, "corpu": 100, "remark": [100, 104], "nltk": 100, "smooth1": 100, "nltk_smooth2": 100, "smooth2": 100, "micro": [100, 129, 130], "www": 100, "_modul": 100, "translat": 100, "bleu_scor": 100, "nlp": [100, 133], "m": [100, 115, 118, 119, 120, 134], "cat": [100, 118, 119, 120], "mat": [100, 118, 119, 120], "split": [100, 118, 119, 120], "_y": 100, "0393": 100, "output_dict": 101, "resembl": 101, "classification_report": 101, "underli": 101, "doesn": 101, "harmon": [101, 105, 124], "metricslambda": [101, 102, 105, 109, 110, 126, 134], "cr": 101, "dict_kei": 101, "f1": [101, 128, 134], "3333": [101, 129], "3999": 101, "6111": 101, "5222": [101, 105], "2333": 101, "ignore_index": [102, 109, 110, 126], "dice": 102, "confusionmatrix": [102, 109, 110, 126, 134], "confus": [102, 109, 110, 115, 125, 126], "matrix": [102, 104, 109, 110, 115, 125, 126, 134], "background": [102, 109, 110, 125, 126, 134], "num_class": [102, 109, 110, 115, 125, 126, 134, 136], "6667": [102, 105], "0000": [102, 109, 110, 129, 130], "compute_fn": 103, "n_target": 103, "datatyp": 103, "mse_fn": 103, "y_target": 103, "type_a": 103, "mse": [103, 114, 116], "5729": 103, "epochmetricwarn": 103, "disabl": 103, "num_featur": [104, 108], "feature_extractor": [104, 108], "frechet": 104, "incept": [104, 108], "mu_": 104, "tr": 104, "sigma_": 104, "sigma_1": 104, "sigma_2": 104, "mu_1": 104, "covari": 104, "mu_2": 104, "heusel": 104, "faster": 104, "approach": [104, 133], "pytorch_fid": 104, "scipi": 104, "root": [104, 117], "vector": [104, 123, 125, 134], "2048": 104, "extract": 104, "neither": [104, 108], "nor": [104, 108], "ident": [104, 108], "implicitli": [104, 108], "convert": [104, 108, 136], "mention": [104, 108], "inceptionv3": 104, "wrapperinceptionv3": 104, "fid_incv3": 104, "super": [104, 127, 134], "block_idx": 104, "block_index_by_dim": 104, "wrapper_model": 104, "pytorch_fid_metr": 104, "f_": 105, "real": [105, 108], "unweight": [105, 129, 130], "7499": 105, "wps_metric": 106, "ntoken": 106, "wp": 106, "400": 106, "prod": 107, "8171": 107, "2134": 107, "d_": 108, "kl": 108, "hat": 108, "condit": [108, 134], "margin": 108, "diverg": 108, "barratt": 108, "299": 108, "intersect": [109, 126], "cap": [109, 110], "cup": [109, 110], "jaccard": 110, "iou": [110, 134], "jac": 110, "observ": 111, "extra": [111, 133], "required_output_kei": [111, 121, 124, 127], "criterion_kwarg": 111, "standard": [111, 122, 127, 136], "nllloss": [111, 135], "3499999": 111, "y_": [112, 114, 117], "x_": [112, 114, 117], "pred": [112, 113, 114, 116, 117, 122, 123], "9375": [112, 128], "ep": 113, "pairwisedist": 113, "pairwis": 113, "degre": 113, "small": 113, "divis": 113, "mpd": 113, "5955": 113, "828125": 114, "denot": 115, "uint8": [115, 136], "int8": 115, "int16": 115, "int32": 115, "int64": 115, "mlcm": 115, "data_rang": [116, 122], "peak": 116, "nois": 116, "log_": 116, "8671405": 116, "grayscal": 116, "rgb": 116, "But": 116, "ycbcr": 116, "yuv": 116, "channel": 116, "And": [116, 134], "get_y_channel": 116, "219": 116, "7027966": 116, "rmse": 117, "956559480312316": 117, "variant": 118, "multiref": [118, 119, 120], "lin": [118, 119, 120], "2004": [118, 119, 120], "roug": [119, 120], "longest": 119, "co": 120, "epoch_bound": 121, "hold": 121, "running_avg_accuraci": 121, "log_running_avg_metr": 121, "zip": 121, "98039": 121, "98079": 121, "96117": 121, "96195": 121, "020000": 121, "019600": 121, "039208": 121, "038423": 121, "057655": 121, "_usag": 121, "metricusag": [121, 127, 128], "kernel_s": 122, "sigma": 122, "k1": 122, "k2": 122, "03": [122, 133], "gaussian": 122, "structual": 122, "255": [122, 125], "kernel": 122, "deviat": 122, "uniform": 122, "un": 122, "9218971": 122, "k": [123, 129, 130], "categor": 123, "one_hot_to_binary_output_transform": 123, "argmax": [123, 125, 134], "hot": [123, 125, 136], "top_k_accuraci": 123, "num_exampl": 124, "confusion_matrix": 125, "logit": 125, "schema": 125, "diagon": 125, "row": 125, "were": [125, 129, 130], "correctli": 125, "horizont": 125, "vertic": 125, "neglect": 125, "unit": 125, "binary_one_hot_output_transform": 125, "to_onehot": [125, 133, 136], "24999": 126, "91221": 127, "custommetr": 127, "re": [127, 134], "becam": 127, "conjunct": [127, 128], "expens": [127, 128, 135], "epoch_wis": [127, 128], "batch_wis": [127, 128], "written": [127, 128, 136], "major": [127, 131], "metrics_lambda": 128, "partial": [128, 134], "fed": 128, "fbeta": 128, "f2": 128, "f3": 128, "f4": 128, "8571": 128, "9677": 128, "9807": 128, "ap": 128, "_baseprecisionrecal": [129, 130], "multicalss": [129, 130], "altogeth": [129, 130], "tp_k": [129, 130], "fp_k": 129, "rest": [129, 130], "sens": [129, 130], "tp_n": [129, 130], "fp_n": 129, "incompat": [129, 130], "imbal": [129, 130], "precision_k": 129, "p_k": [129, 130], "weighted_metr": 129, "two_class_metr": [129, 130], "6666666666666666": [129, 130], "7500": [129, 130], "macro_metr": [129, 130], "27777777777777773": 129, "3333333333333333": [129, 130, 134], "num_label": 129, "micro_metr": [129, 130], "samples_metr": [129, 130], "2000": 129, "2222222222222222": 129, "2333333333333333": 129, "175": 129, "fn_k": 130, "fn_n": 130, "recall_k": 130, "formal": 131, "clarifi": 131, "establish": 131, "feedback": 131, "strive": 131, "consensu": 131, "deadlock": 131, "meritocrat": 131, "anyon": 131, "join": 131, "design": 131, "place": 131, "earn": 131, "merit": 131, "concret": 131, "guid": [131, 135], "ongo": 131, "engag": 131, "trust": 131, "maintain": 131, "care": [131, 134], "Being": 131, "carri": 131, "give": [131, 134], "direct": 131, "approv": 131, "vote": 131, "against": 131, "involv": 131, "decid": 131, "nomin": 131, "commit": 131, "comment": 131, "emeritu": 131, "recant": 131, "lr_values_1": 132, "2e": 132, "lr_values_2": 132, "lr_values_3": 132, "lr_values_4": 132, "ylim": 132, "142": 132, "143": 132, "144": 132, "131": 132, "132": 132, "133": 132, "150": 132, "cosineannealinglr": 132, "lr_scheduler_1": 132, "lr_scheduler_2": 132, "lr_scheduler_3": 132, "t_max": 132, "eta_min": 132, "121": 132, "122": 132, "82": 132, "83": 132, "80": 132, "suptitl": 132, "xtick": 132, "flexibli": 133, "click": 133, "pure": 133, "simplic": 133, "program": 133, "invers": 133, "extens": 133, "hub": [133, 136], "v19": 133, "pwd": 133, "workspac": 133, "shm": 133, "16g": 133, "pytorchignit": 133, "hvd": 133, "msdp": 133, "quick": 133, "faq": 133, "question": 133, "classic": 133, "varieti": 133, "eas": 133, "pain": 133, "vari": 133, "optimis": 133, "apply_to_tensor": [133, 136], "apply_to_typ": [133, 136], "hash_checkpoint": [133, 136], "setup_logg": [133, 136], "truncat": 133, "backpropag": 133, "throught": 133, "govern": 133, "respons": 134, "metrics_group": 134, "functool": 134, "ot_func": 134, "snippet": [134, 135], "device_id": 134, "output_devic": 134, "test_sampl": 134, "test_dataset": 134, "becaus": 134, "parti": 134, "dill": 134, "overcom": 134, "fine": 134, "grain": 134, "togeth": 134, "metric1": 134, "metric2": 134, "pow": 134, "unaverag": 134, "iou_metr": 134, "iou_no_bg_metr": 134, "mean_iou_no_bg_metr": 134, "customaccuraci": 134, "ignored_class": 134, "_num_correct": 134, "_num_exampl": 134, "_devic": 134, "mask": 134, "eq": 134, "necessari": 134, "notic": 134, "differenti": 134, "inter": 134, "four": 134, "reinit": 134, "attr": 134, "abil": 134, "welcom": 135, "cover": 135, "essenti": 135, "walk": 135, "net": 135, "get_data_load": 135, "train_batch_s": 135, "val_batch_s": 135, "val_metr": 135, "log_interv": 135, "validation_step": 135, "previous": 135, "footnot": 135, "subset": 135, "encourag": 135, "still": 135, "custom_output_transform": 135, "byte": 136, "input_typ": 136, "relev": 136, "pin": 136, "checkpoint_path": 136, "output_dir": 136, "hash": 136, "check_hash": 136, "load_state_dict_from_url": 136, "digit": 136, "sha256": 136, "manual_seed_al": 136, "set_rng_stat": 136, "stream": 136, "asctim": 136, "levelnam": 136, "distributed_rank": 136, "textio": 136, "sy": 136, "readabl": 136, "07": 136, "356": 136, "358": 136, "my": 136, "torchscript": 136}, "objects": {"": [[133, 0, 0, "-", "ignite"]], "ignite": [[133, 0, 0, "-", "contrib"], [136, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[2, 0, 0, "-", "common"], [2, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[2, 1, 1, "", "add_early_stopping_by_val_score"], [2, 1, 1, "", "gen_save_best_models_by_val_score"], [2, 1, 1, "", "save_best_model_by_val_score"], [2, 1, 1, "", "setup_any_logging"], [2, 1, 1, "", "setup_clearml_logging"], [2, 1, 1, "", "setup_common_distrib_training_handlers"], [2, 1, 1, "", "setup_common_training_handlers"], [2, 1, 1, "", "setup_mlflow_logging"], [2, 1, 1, "", "setup_neptune_logging"], [2, 1, 1, "", "setup_plx_logging"], [2, 1, 1, "", "setup_tb_logging"], [2, 1, 1, "", "setup_trains_logging"], [2, 1, 1, "", "setup_visdom_logging"], [2, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[2, 2, 1, "", "Tbptt_Events"], [2, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.contrib.handlers": [[12, 0, 0, "-", "base_logger"], [13, 0, 0, "-", "clearml_logger"], [14, 0, 0, "-", "mlflow_logger"], [15, 0, 0, "-", "neptune_logger"], [16, 0, 0, "-", "polyaxon_logger"], [17, 0, 0, "-", "tensorboard_logger"], [18, 0, 0, "-", "tqdm_logger"], [19, 0, 0, "-", "trains_logger"], [20, 0, 0, "-", "visdom_logger"], [21, 0, 0, "-", "wandb_logger"]], "ignite.contrib.handlers.base_logger": [[12, 2, 1, "", "BaseHandler"], [12, 2, 1, "", "BaseLogger"], [12, 2, 1, "", "BaseOptimizerParamsHandler"], [12, 2, 1, "", "BaseOutputHandler"], [12, 2, 1, "", "BaseWeightsHandler"], [12, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.contrib.handlers.base_logger.BaseLogger": [[12, 3, 1, "", "attach"], [12, 3, 1, "", "attach_opt_params_handler"], [12, 3, 1, "", "attach_output_handler"]], "ignite.contrib.handlers.clearml_logger": [[13, 2, 1, "", "ClearMLLogger"], [13, 2, 1, "", "ClearMLSaver"], [13, 2, 1, "", "GradsHistHandler"], [13, 2, 1, "", "GradsScalarHandler"], [13, 2, 1, "", "OptimizerParamsHandler"], [13, 2, 1, "", "OutputHandler"], [13, 2, 1, "", "WeightsHistHandler"], [13, 2, 1, "", "WeightsScalarHandler"], [13, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger.ClearMLLogger": [[13, 3, 1, "", "bypass_mode"], [13, 3, 1, "", "set_bypass_mode"]], "ignite.contrib.handlers.clearml_logger.ClearMLSaver": [[13, 3, 1, "", "get_local_copy"], [13, 3, 1, "", "remove"]], "ignite.contrib.handlers.mlflow_logger": [[14, 2, 1, "", "MLflowLogger"], [14, 2, 1, "", "OptimizerParamsHandler"], [14, 2, 1, "", "OutputHandler"], [14, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[15, 2, 1, "", "GradsScalarHandler"], [15, 2, 1, "", "NeptuneLogger"], [15, 2, 1, "", "NeptuneSaver"], [15, 2, 1, "", "OptimizerParamsHandler"], [15, 2, 1, "", "OutputHandler"], [15, 2, 1, "", "WeightsScalarHandler"], [15, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger.NeptuneSaver": [[15, 3, 1, "", "remove"]], "ignite.contrib.handlers.polyaxon_logger": [[16, 2, 1, "", "OptimizerParamsHandler"], [16, 2, 1, "", "OutputHandler"], [16, 2, 1, "", "PolyaxonLogger"], [16, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[17, 2, 1, "", "GradsHistHandler"], [17, 2, 1, "", "GradsScalarHandler"], [17, 2, 1, "", "OptimizerParamsHandler"], [17, 2, 1, "", "OutputHandler"], [17, 2, 1, "", "TensorboardLogger"], [17, 2, 1, "", "WeightsHistHandler"], [17, 2, 1, "", "WeightsScalarHandler"], [17, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tqdm_logger": [[18, 2, 1, "", "ProgressBar"]], "ignite.contrib.handlers.tqdm_logger.ProgressBar": [[18, 3, 1, "", "attach"], [18, 3, 1, "", "attach_opt_params_handler"], [18, 3, 1, "", "log_message"]], "ignite.contrib.handlers.trains_logger": [[19, 4, 1, "", "TrainsLogger"], [19, 4, 1, "", "TrainsSaver"]], "ignite.contrib.handlers.visdom_logger": [[20, 2, 1, "", "GradsScalarHandler"], [20, 2, 1, "", "OptimizerParamsHandler"], [20, 2, 1, "", "OutputHandler"], [20, 2, 1, "", "VisdomLogger"], [20, 2, 1, "", "WeightsScalarHandler"], [20, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[21, 2, 1, "", "OptimizerParamsHandler"], [21, 2, 1, "", "OutputHandler"], [21, 2, 1, "", "WandBLogger"], [21, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.metrics": [[22, 2, 1, "", "AveragePrecision"], [23, 2, 1, "", "CohenKappa"], [24, 2, 1, "", "GpuInfo"], [25, 2, 1, "", "PrecisionRecallCurve"], [26, 2, 1, "", "ROC_AUC"], [27, 2, 1, "", "RocCurve"], [4, 0, 0, "-", "regression"]], "ignite.contrib.metrics.CohenKappa": [[23, 3, 1, "", "get_cohen_kappa_fn"]], "ignite.contrib.metrics.GpuInfo": [[24, 3, 1, "", "attach"], [24, 3, 1, "", "completed"], [24, 3, 1, "", "compute"], [24, 3, 1, "", "reset"], [24, 3, 1, "", "update"]], "ignite.contrib.metrics.PrecisionRecallCurve": [[25, 3, 1, "", "compute"]], "ignite.contrib.metrics.regression": [[28, 2, 1, "", "CanberraMetric"], [29, 2, 1, "", "FractionalAbsoluteError"], [30, 2, 1, "", "FractionalBias"], [31, 2, 1, "", "GeometricMeanAbsoluteError"], [32, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [33, 2, 1, "", "ManhattanDistance"], [34, 2, 1, "", "MaximumAbsoluteError"], [35, 2, 1, "", "MeanAbsoluteRelativeError"], [36, 2, 1, "", "MeanError"], [37, 2, 1, "", "MeanNormalizedBias"], [38, 2, 1, "", "MedianAbsoluteError"], [39, 2, 1, "", "MedianAbsolutePercentageError"], [40, 2, 1, "", "MedianRelativeAbsoluteError"], [41, 2, 1, "", "R2Score"], [42, 2, 1, "", "WaveHedgesDistance"]], "ignite.contrib.metrics.regression.CanberraMetric": [[28, 3, 1, "", "compute"], [28, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalAbsoluteError": [[29, 3, 1, "", "compute"], [29, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalBias": [[30, 3, 1, "", "compute"], [30, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError": [[31, 3, 1, "", "compute"], [31, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError": [[32, 3, 1, "", "compute"], [32, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.ManhattanDistance": [[33, 3, 1, "", "compute"], [33, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MaximumAbsoluteError": [[34, 3, 1, "", "compute"], [34, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError": [[35, 3, 1, "", "compute"], [35, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanError": [[36, 3, 1, "", "compute"], [36, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanNormalizedBias": [[37, 3, 1, "", "compute"], [37, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.R2Score": [[41, 3, 1, "", "compute"], [41, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.WaveHedgesDistance": [[42, 3, 1, "", "compute"], [42, 3, 1, "", "reset"]], "ignite.distributed.auto": [[43, 2, 1, "", "DistributedProxySampler"], [44, 1, 1, "", "auto_dataloader"], [45, 1, 1, "", "auto_model"], [46, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[47, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[47, 3, 1, "", "run"]], "ignite.distributed": [[6, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[6, 1, 1, "", "all_gather"], [6, 1, 1, "", "all_reduce"], [6, 1, 1, "", "available_backends"], [6, 1, 1, "", "backend"], [6, 1, 1, "", "barrier"], [6, 1, 1, "", "broadcast"], [6, 1, 1, "", "device"], [6, 1, 1, "", "finalize"], [6, 1, 1, "", "get_local_rank"], [6, 1, 1, "", "get_nnodes"], [6, 1, 1, "", "get_node_rank"], [6, 1, 1, "", "get_nproc_per_node"], [6, 1, 1, "", "get_rank"], [6, 1, 1, "", "get_world_size"], [6, 4, 1, "", "has_native_dist_support"], [6, 4, 1, "", "has_xla_support"], [6, 1, 1, "", "hostname"], [6, 1, 1, "", "initialize"], [6, 1, 1, "", "model_name"], [6, 1, 1, "", "one_rank_only"], [6, 1, 1, "", "set_local_rank"], [6, 1, 1, "", "show_config"], [6, 1, 1, "", "spawn"], [6, 1, 1, "", "sync"]], "ignite.engine": [[48, 1, 1, "", "create_supervised_evaluator"], [49, 1, 1, "", "create_supervised_trainer"], [61, 1, 1, "", "supervised_evaluation_step"], [62, 1, 1, "", "supervised_evaluation_step_amp"], [63, 1, 1, "", "supervised_training_step"], [64, 1, 1, "", "supervised_training_step_amp"], [65, 1, 1, "", "supervised_training_step_apex"], [66, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[50, 2, 1, "", "DeterministicEngine"], [51, 2, 1, "", "ReproducibleBatchSampler"], [52, 1, 1, "", "keep_random_state"], [53, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[50, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[51, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[54, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[54, 3, 1, "", "add_event_handler"], [54, 3, 1, "", "fire_event"], [54, 3, 1, "", "has_event_handler"], [54, 3, 1, "", "interrupt"], [54, 4, 1, "", "last_event_name"], [54, 3, 1, "", "load_state_dict"], [54, 3, 1, "", "on"], [54, 3, 1, "", "register_events"], [54, 3, 1, "", "remove_event_handler"], [54, 3, 1, "", "run"], [54, 3, 1, "", "set_data"], [54, 4, 1, "", "state"], [54, 3, 1, "", "state_dict"], [54, 3, 1, "", "terminate"], [54, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[55, 2, 1, "", "CallableEventWithFilter"], [56, 2, 1, "", "EventEnum"], [57, 2, 1, "", "Events"], [58, 2, 1, "", "EventsList"], [59, 2, 1, "", "RemovableEventHandle"], [60, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[55, 3, 1, "", "default_event_filter"], [55, 3, 1, "", "every_event_filter"], [55, 4, 1, "", "name"], [55, 3, 1, "", "once_event_filter"], [55, 4, 1, "", "value"]], "ignite.engine.events.Events": [[57, 4, 1, "", "COMPLETED"], [57, 4, 1, "", "DATALOADER_STOP_ITERATION"], [57, 4, 1, "", "EPOCH_COMPLETED"], [57, 4, 1, "", "EPOCH_STARTED"], [57, 4, 1, "", "EXCEPTION_RAISED"], [57, 4, 1, "", "GET_BATCH_COMPLETED"], [57, 4, 1, "", "GET_BATCH_STARTED"], [57, 4, 1, "", "INTERRUPT"], [57, 4, 1, "", "ITERATION_COMPLETED"], [57, 4, 1, "", "ITERATION_STARTED"], [57, 4, 1, "", "STARTED"], [57, 4, 1, "", "TERMINATE"], [57, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[59, 3, 1, "", "remove"]], "ignite.engine.events.State": [[60, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[9, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[67, 2, 1, "", "DiskSaver"], [68, 2, 1, "", "TimeLimit"], [74, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.DiskSaver": [[67, 3, 1, "", "remove"]], "ignite.handlers.checkpoint": [[69, 2, 1, "", "BaseSaveHandler"], [70, 2, 1, "", "Checkpoint"], [71, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[69, 3, 1, "", "__call__"], [69, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[70, 2, 1, "", "Item"], [70, 3, 1, "", "get_default_score_fn"], [70, 3, 1, "", "load_objects"], [70, 3, 1, "", "load_state_dict"], [70, 3, 1, "", "reload_objects"], [70, 3, 1, "", "reset"], [70, 3, 1, "", "setup_filename_pattern"], [70, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[70, 4, 1, "", "filename"], [70, 4, 1, "", "priority"]], "ignite.handlers.early_stopping": [[72, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[72, 3, 1, "", "load_state_dict"], [72, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[73, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[73, 3, 1, "", "attach"], [73, 4, 1, "", "ema_model"], [73, 4, 1, "", "handle_buffers"], [73, 4, 1, "", "model"], [73, 4, 1, "", "momentum"]], "ignite.handlers.lr_finder": [[75, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[75, 3, 1, "", "apply_suggested_lr"], [75, 3, 1, "", "attach"], [75, 3, 1, "", "get_results"], [75, 3, 1, "", "lr_suggestion"], [75, 3, 1, "", "plot"]], "ignite.handlers.param_scheduler": [[76, 2, 1, "", "BaseParamScheduler"], [77, 2, 1, "", "ConcatScheduler"], [78, 2, 1, "", "CosineAnnealingScheduler"], [79, 2, 1, "", "CyclicalScheduler"], [80, 2, 1, "", "LRScheduler"], [81, 2, 1, "", "LinearCyclicalScheduler"], [82, 2, 1, "", "ParamGroupScheduler"], [83, 2, 1, "", "ParamScheduler"], [84, 2, 1, "", "PiecewiseLinear"], [85, 2, 1, "", "ReduceLROnPlateauScheduler"], [86, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[76, 3, 1, "", "get_param"], [76, 3, 1, "", "load_state_dict"], [76, 3, 1, "", "plot_values"], [76, 3, 1, "", "simulate_values"], [76, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[77, 3, 1, "", "get_param"], [77, 3, 1, "", "load_state_dict"], [77, 3, 1, "", "simulate_values"], [77, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[78, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[80, 3, 1, "", "get_param"], [80, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[81, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[82, 3, 1, "", "load_state_dict"], [82, 3, 1, "", "simulate_values"], [82, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[83, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[84, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[85, 3, 1, "", "get_param"], [85, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler": [[87, 2, 1, "", "ExpStateScheduler"], [88, 2, 1, "", "LambdaStateScheduler"], [89, 2, 1, "", "MultiStepStateScheduler"], [90, 2, 1, "", "PiecewiseLinearStateScheduler"], [91, 2, 1, "", "StateParamScheduler"], [92, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[87, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[88, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[89, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[90, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[91, 3, 1, "", "attach"], [91, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[92, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[93, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[93, 3, 1, "", "attach"], [93, 4, 1, "", "data"], [93, 3, 1, "", "reset"], [93, 3, 1, "", "store"], [93, 3, 1, "", "update"]], "ignite.handlers.terminate_on_nan": [[94, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[95, 2, 1, "", "BasicTimeProfiler"], [96, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[95, 3, 1, "", "attach"], [95, 3, 1, "", "get_results"], [95, 3, 1, "", "print_results"], [95, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[96, 3, 1, "", "attach"], [96, 3, 1, "", "get_results"], [96, 3, 1, "", "print_results"], [96, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[97, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[97, 3, 1, "", "attach"], [97, 3, 1, "", "pause"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "resume"], [97, 4, 1, "", "running"], [97, 3, 1, "", "step"], [97, 4, 1, "", "step_count"], [97, 4, 1, "", "total"], [97, 3, 1, "", "value"]], "ignite.metrics": [[98, 2, 1, "", "Accuracy"], [99, 2, 1, "", "Average"], [100, 2, 1, "", "Bleu"], [101, 1, 1, "", "ClassificationReport"], [102, 1, 1, "", "DiceCoefficient"], [103, 2, 1, "", "EpochMetric"], [104, 2, 1, "", "FID"], [105, 1, 1, "", "Fbeta"], [106, 2, 1, "", "Frequency"], [107, 2, 1, "", "GeometricAverage"], [108, 2, 1, "", "InceptionScore"], [109, 1, 1, "", "IoU"], [110, 1, 1, "", "JaccardIndex"], [111, 2, 1, "", "Loss"], [112, 2, 1, "", "MeanAbsoluteError"], [113, 2, 1, "", "MeanPairwiseDistance"], [114, 2, 1, "", "MeanSquaredError"], [115, 2, 1, "", "MultiLabelConfusionMatrix"], [116, 2, 1, "", "PSNR"], [117, 2, 1, "", "RootMeanSquaredError"], [118, 2, 1, "", "Rouge"], [119, 2, 1, "", "RougeL"], [120, 2, 1, "", "RougeN"], [121, 2, 1, "", "RunningAverage"], [122, 2, 1, "", "SSIM"], [123, 2, 1, "", "TopKCategoricalAccuracy"], [124, 2, 1, "", "VariableAccumulation"], [126, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[98, 3, 1, "", "compute"], [98, 3, 1, "", "reset"], [98, 3, 1, "", "update"]], "ignite.metrics.Average": [[99, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[103, 3, 1, "", "compute"], [103, 3, 1, "", "reset"], [103, 3, 1, "", "update"]], "ignite.metrics.FID": [[104, 3, 1, "", "compute"], [104, 3, 1, "", "reset"], [104, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[106, 3, 1, "", "attach"], [106, 3, 1, "", "completed"], [106, 3, 1, "", "compute"], [106, 3, 1, "", "reset"], [106, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[107, 3, 1, "", "compute"]], "ignite.metrics.InceptionScore": [[108, 3, 1, "", "compute"], [108, 3, 1, "", "reset"], [108, 3, 1, "", "update"]], "ignite.metrics.Loss": [[111, 3, 1, "", "compute"], [111, 4, 1, "", "required_output_keys"], [111, 3, 1, "", "reset"], [111, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[112, 3, 1, "", "compute"], [112, 3, 1, "", "reset"], [112, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[113, 3, 1, "", "compute"], [113, 3, 1, "", "reset"], [113, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[114, 3, 1, "", "compute"], [114, 3, 1, "", "reset"], [114, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[115, 3, 1, "", "compute"], [115, 3, 1, "", "reset"], [115, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[116, 3, 1, "", "compute"], [116, 3, 1, "", "reset"], [116, 3, 1, "", "update"]], "ignite.metrics.RootMeanSquaredError": [[117, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[118, 3, 1, "", "compute"], [118, 3, 1, "", "reset"], [118, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[121, 3, 1, "", "attach"], [121, 3, 1, "", "compute"], [121, 4, 1, "", "required_output_keys"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[122, 3, 1, "", "compute"], [122, 3, 1, "", "reset"], [122, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[123, 3, 1, "", "compute"], [123, 3, 1, "", "reset"], [123, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[124, 3, 1, "", "compute"], [124, 4, 1, "", "required_output_keys"], [124, 3, 1, "", "reset"], [124, 3, 1, "", "update"]], "ignite.metrics.confusion_matrix": [[125, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[125, 3, 1, "", "compute"], [125, 3, 1, "", "normalize"], [125, 3, 1, "", "reset"], [125, 3, 1, "", "update"]], "ignite.metrics.metric": [[134, 2, 1, "", "BatchFiltered"], [134, 2, 1, "", "BatchWise"], [134, 2, 1, "", "EpochWise"], [127, 2, 1, "", "Metric"], [134, 2, 1, "", "MetricUsage"], [134, 1, 1, "", "reinit__is_reduced"], [134, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[134, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[134, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[127, 3, 1, "", "attach"], [127, 3, 1, "", "completed"], [127, 3, 1, "", "compute"], [127, 3, 1, "", "detach"], [127, 3, 1, "", "is_attached"], [127, 3, 1, "", "iteration_completed"], [127, 4, 1, "", "required_output_keys"], [127, 3, 1, "", "reset"], [127, 3, 1, "", "started"], [127, 3, 1, "", "update"]], "ignite.metrics.metrics_lambda": [[128, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[128, 3, 1, "", "attach"], [128, 3, 1, "", "compute"], [128, 3, 1, "", "detach"], [128, 3, 1, "", "is_attached"], [128, 3, 1, "", "reset"], [128, 3, 1, "", "update"]], "ignite.metrics.precision": [[129, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[129, 3, 1, "", "update"]], "ignite.metrics.recall": [[130, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[130, 3, 1, "", "update"]], "ignite.utils": [[136, 1, 1, "", "apply_to_tensor"], [136, 1, 1, "", "apply_to_type"], [136, 1, 1, "", "convert_tensor"], [136, 1, 1, "", "hash_checkpoint"], [136, 1, 1, "", "manual_seed"], [136, 1, 1, "", "setup_logger"], [136, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": 0, "u": 0, "histori": 0, "govern": [0, 131], "author": 0, "emeritu": 0, "core": [0, 131], "develop": [0, 131], "join": 0, "team": [0, 133], "cite": 0, "pytorch": [0, 131], "ignit": [0, 2, 3, 4, 6, 7, 9, 131, 132, 133, 134, 136], "acknowledg": 0, "concept": 1, "engin": [1, 2, 7, 10, 54, 134], "event": [1, 7, 10, 57], "handler": [1, 3, 10, 132], "custom": [1, 10, 134], "timelin": 1, "state": [1, 60, 132], "metric": [1, 4, 127, 134], "contrib": [2, 3, 4, 133], "truncat": 2, "backpropag": 2, "throught": 2, "time": [2, 3, 10], "helper": [2, 6, 7, 134], "method": [2, 7], "setup": 2, "trainer": [2, 7], "evalu": [2, 7], "paramet": [3, 132], "schedul": [3, 132], "deprec": 3, "lr": 3, "finder": 3, "profil": [3, 10], "logger": 3, "modul": 4, "regress": 4, "distribut": [6, 8, 134], "launcher": 6, "auto": 6, "util": [6, 136], "determinist": 7, "defin": 7, "supervis": 7, "resum": 7, "train": [7, 8, 10], "dataflow": 7, "synchron": 7, "exampl": [8, 132], "mnist": 8, "other": [8, 10], "notebook": 8, "reproduc": 8, "except": 9, "faq": 10, "each": 10, "ha": 10, "its": [10, 134], "own": 10, "creat": [10, 134], "base": 10, "forward": 10, "backward": 10, "pass": 10, "gradient": 10, "accumul": 10, "work": 10, "iter": 10, "infinit": 10, "finit": 10, "unknown": 10, "length": 10, "known": 10, "switch": 10, "data": 10, "provid": 10, "dure": 10, "singl": 10, "epoch": 10, "total": 10, "basic": 10, "measur": 10, "question": 10, "base_logg": 12, "clearml_logg": 13, "mlflow_logg": 14, "neptune_logg": 15, "polyaxon_logg": 16, "tensorboard_logg": 17, "tqdm_logger": 18, "trains_logg": 19, "visdom_logg": 20, "wandb_logg": 21, "averageprecis": 22, "cohenkappa": 23, "gpuinfo": 24, "precisionrecallcurv": 25, "roc_auc": 26, "roccurv": 27, "canberrametr": 28, "fractionalabsoluteerror": 29, "fractionalbia": 30, "geometricmeanabsoluteerror": 31, "geometricmeanrelativeabsoluteerror": 32, "manhattandist": 33, "maximumabsoluteerror": 34, "meanabsoluterelativeerror": 35, "meanerror": 36, "meannormalizedbia": 37, "medianabsoluteerror": 38, "medianabsolutepercentageerror": 39, "medianrelativeabsoluteerror": 40, "r2score": 41, "wavehedgesdist": 42, "distributedproxysampl": 43, "auto_dataload": 44, "auto_model": 45, "auto_optim": 46, "parallel": 47, "create_supervised_evalu": 48, "create_supervised_train": 49, "deterministicengin": 50, "reproduciblebatchsampl": 51, "keep_random_st": 52, "update_dataload": 53, "callableeventwithfilt": 55, "eventenum": 56, "eventslist": 58, "removableeventhandl": 59, "supervised_evaluation_step": 61, "supervised_evaluation_step_amp": 62, "supervised_training_step": 63, "supervised_training_step_amp": 64, "supervised_training_step_apex": 65, "supervised_training_step_tpu": 66, "disksav": 67, "timelimit": 68, "basesavehandl": 69, "checkpoint": 70, "modelcheckpoint": 71, "earlystop": 72, "emahandl": 73, "global_step_from_engin": 74, "fastailrfind": 75, "baseparamschedul": 76, "concatschedul": [77, 132], "cosineannealingschedul": [78, 132], "cyclicalschedul": 79, "lrschedul": [80, 132], "linearcyclicalschedul": [81, 132], "paramgroupschedul": 82, "paramschedul": 83, "piecewiselinear": 84, "reducelronplateauschedul": [85, 132], "create_lr_scheduler_with_warmup": 86, "expstateschedul": 87, "lambdastateschedul": 88, "multistepstateschedul": 89, "piecewiselinearstateschedul": 90, "stateparamschedul": 91, "stepstateschedul": 92, "epochoutputstor": 93, "terminateonnan": 94, "basictimeprofil": 95, "handlerstimeprofil": 96, "timer": 97, "accuraci": 98, "averag": 99, "bleu": 100, "classificationreport": 101, "dicecoeffici": 102, "epochmetr": 103, "fid": 104, "fbeta": 105, "frequenc": 106, "geometricaverag": 107, "inceptionscor": 108, "iou": 109, "jaccardindex": 110, "loss": 111, "meanabsoluteerror": 112, "meanpairwisedist": 113, "meansquarederror": 114, "multilabelconfusionmatrix": 115, "psnr": 116, "rootmeansquarederror": 117, "roug": 118, "rougel": 119, "rougen": 120, "runningaverag": 121, "ssim": 122, "topkcategoricalaccuraci": 123, "variableaccumul": 124, "confusionmatrix": 125, "miou": 126, "metricslambda": 128, "precis": 129, "recal": 130, "role": 131, "And": 131, "respons": 131, "contributor": 131, "complet": [132, 134], "list": [132, 134], "more": 132, "param_schedul": 132, "piecewis": 132, "linear": 132, "concaten": 132, "torch": 132, "your": 133, "network": 133, "featur": 133, "instal": 133, "nightli": 133, "releas": 133, "docker": 133, "imag": 133, "us": 133, "pre": 133, "built": 133, "document": 133, "note": 133, "librari": 133, "structur": 133, "packag": 133, "refer": 133, "attach": 134, "api": 134, "reset": 134, "updat": 134, "comput": 134, "arithmet": 134, "how": 134, "usag": 134, "metricusag": 134, "epochwis": 134, "batchwis": 134, "batchfilt": 134, "reinit__is_reduc": 134, "sync_all_reduc": 134, "quick": 135, "start": 135, "code": 135, "explan": 135}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About us": [[0, "about-us"]], "History": [[0, "history"]], "Governance": [[0, "governance"]], "Authors": [[0, "authors"]], "Emeritus Core Developers": [[0, "emeritus-core-developers"]], "Join Core Team": [[0, "join-core-team"]], "Citing PyTorch-Ignite": [[0, "citing-pytorch-ignite"]], "Acknowledgements": [[0, "acknowledgements"]], "Concepts": [[1, "concepts"]], "Engine:": [[1, "engine"]], "Events and Handlers:": [[1, "events-and-handlers"]], "Custom events": [[1, "custom-events"]], "Handlers": [[1, "handlers"]], "Timeline and events": [[1, "timeline-and-events"]], "State:": [[1, "state"]], "Metrics:": [[1, "metrics"]], "ignite.contrib.engines": [[2, "ignite-contrib-engines"]], "Truncated Backpropagation Throught Time": [[2, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[2, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[3, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[3, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[3, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[3, "time-profilers-deprecated"]], "Loggers": [[3, "loggers"]], "ignite.contrib.metrics": [[4, "ignite-contrib-metrics"]], "Contrib module metrics": [[4, "contrib-module-metrics"]], "Regression metrics": [[4, "module-ignite.contrib.metrics.regression"]], "ignite.distributed": [[6, "ignite-distributed"]], "Distributed launcher and auto helpers": [[6, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[6, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[6, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[6, "ignite-distributed-utils"]], "ignite.engine": [[7, "ignite-engine"]], "ignite.engine.engine": [[7, "ignite-engine-engine"]], "ignite.engine.events": [[7, "ignite-engine-events"]], "ignite.engine.deterministic": [[7, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[7, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[7, "resuming-the-training"]], "Deterministic training": [[7, "deterministic-training"]], "Dataflow synchronization": [[7, "dataflow-synchronization"]], "Examples": [[8, "examples"]], "MNIST example": [[8, "mnist-example"]], "Distributed examples": [[8, "distributed-examples"]], "Other examples": [[8, "other-examples"]], "Notebooks": [[8, "notebooks"]], "Reproducible trainings": [[8, "reproducible-trainings"]], "ignite.exceptions": [[9, "ignite-exceptions"]], "FAQ": [[10, "faq"]], "Each engine has its own Events": [[10, "each-engine-has-its-own-events"]], "Creating Custom Events based on Forward/Backward Pass": [[10, "creating-custom-events-based-on-forward-backward-pass"]], "Gradients accumulation": [[10, "gradients-accumulation"]], "Working with iterators": [[10, "working-with-iterators"]], "Infinite iterator for training": [[10, "infinite-iterator-for-training"]], "Finite iterator with unknown length": [[10, "finite-iterator-with-unknown-length"]], "Finite iterator with known length": [[10, "finite-iterator-with-known-length"]], "Switching data provider during the training": [[10, "switching-data-provider-during-the-training"]], "Time profiling during training": [[10, "time-profiling-during-training"]], "Single epoch and total time": [[10, "single-epoch-and-total-time"]], "Basic time profiling": [[10, "basic-time-profiling"]], "Event handlers time profiling": [[10, "event-handlers-time-profiling"]], "Custom time measures": [[10, "custom-time-measures"]], "Other questions": [[10, "other-questions"]], "base_logger": [[12, "module-ignite.contrib.handlers.base_logger"]], "clearml_logger": [[13, "module-ignite.contrib.handlers.clearml_logger"]], "mlflow_logger": [[14, "module-ignite.contrib.handlers.mlflow_logger"]], "neptune_logger": [[15, "module-ignite.contrib.handlers.neptune_logger"]], "polyaxon_logger": [[16, "module-ignite.contrib.handlers.polyaxon_logger"]], "tensorboard_logger": [[17, "module-ignite.contrib.handlers.tensorboard_logger"]], "tqdm_logger": [[18, "module-ignite.contrib.handlers.tqdm_logger"]], "trains_logger": [[19, "module-ignite.contrib.handlers.trains_logger"]], "visdom_logger": [[20, "module-ignite.contrib.handlers.visdom_logger"]], "wandb_logger": [[21, "module-ignite.contrib.handlers.wandb_logger"]], "AveragePrecision": [[22, "averageprecision"]], "CohenKappa": [[23, "cohenkappa"]], "GpuInfo": [[24, "gpuinfo"]], "PrecisionRecallCurve": [[25, "precisionrecallcurve"]], "ROC_AUC": [[26, "roc-auc"]], "RocCurve": [[27, "roccurve"]], "CanberraMetric": [[28, "canberrametric"]], "FractionalAbsoluteError": [[29, "fractionalabsoluteerror"]], "FractionalBias": [[30, "fractionalbias"]], "GeometricMeanAbsoluteError": [[31, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[32, "geometricmeanrelativeabsoluteerror"]], "ManhattanDistance": [[33, "manhattandistance"]], "MaximumAbsoluteError": [[34, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[35, "meanabsoluterelativeerror"]], "MeanError": [[36, "meanerror"]], "MeanNormalizedBias": [[37, "meannormalizedbias"]], "MedianAbsoluteError": [[38, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[39, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[40, "medianrelativeabsoluteerror"]], "R2Score": [[41, "r2score"]], "WaveHedgesDistance": [[42, "wavehedgesdistance"]], "DistributedProxySampler": [[43, "distributedproxysampler"]], "auto_dataloader": [[44, "auto-dataloader"]], "auto_model": [[45, "auto-model"]], "auto_optim": [[46, "auto-optim"]], "Parallel": [[47, "parallel"]], "create_supervised_evaluator": [[48, "create-supervised-evaluator"]], "create_supervised_trainer": [[49, "create-supervised-trainer"]], "DeterministicEngine": [[50, "deterministicengine"]], "ReproducibleBatchSampler": [[51, "reproduciblebatchsampler"]], "keep_random_state": [[52, "keep-random-state"]], "update_dataloader": [[53, "update-dataloader"]], "Engine": [[54, "engine"]], "CallableEventWithFilter": [[55, "callableeventwithfilter"]], "EventEnum": [[56, "eventenum"]], "Events": [[57, "events"]], "EventsList": [[58, "eventslist"]], "RemovableEventHandle": [[59, "removableeventhandle"]], "State": [[60, "state"]], "supervised_evaluation_step": [[61, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[62, "supervised-evaluation-step-amp"]], "supervised_training_step": [[63, "supervised-training-step"]], "supervised_training_step_amp": [[64, "supervised-training-step-amp"]], "supervised_training_step_apex": [[65, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[66, "supervised-training-step-tpu"]], "DiskSaver": [[67, "disksaver"]], "TimeLimit": [[68, "timelimit"]], "BaseSaveHandler": [[69, "basesavehandler"]], "Checkpoint": [[70, "checkpoint"]], "ModelCheckpoint": [[71, "modelcheckpoint"]], "EarlyStopping": [[72, "earlystopping"]], "EMAHandler": [[73, "emahandler"]], "global_step_from_engine": [[74, "global-step-from-engine"]], "FastaiLRFinder": [[75, "fastailrfinder"]], "BaseParamScheduler": [[76, "baseparamscheduler"]], "ConcatScheduler": [[77, "concatscheduler"]], "CosineAnnealingScheduler": [[78, "cosineannealingscheduler"]], "CyclicalScheduler": [[79, "cyclicalscheduler"]], "LRScheduler": [[80, "lrscheduler"]], "LinearCyclicalScheduler": [[81, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[82, "paramgroupscheduler"]], "ParamScheduler": [[83, "paramscheduler"]], "PiecewiseLinear": [[84, "piecewiselinear"]], "ReduceLROnPlateauScheduler": [[85, "reducelronplateauscheduler"]], "create_lr_scheduler_with_warmup": [[86, "create-lr-scheduler-with-warmup"]], "ExpStateScheduler": [[87, "expstatescheduler"]], "LambdaStateScheduler": [[88, "lambdastatescheduler"]], "MultiStepStateScheduler": [[89, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[90, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[91, "stateparamscheduler"]], "StepStateScheduler": [[92, "stepstatescheduler"]], "EpochOutputStore": [[93, "epochoutputstore"]], "TerminateOnNan": [[94, "terminateonnan"]], "BasicTimeProfiler": [[95, "basictimeprofiler"]], "HandlersTimeProfiler": [[96, "handlerstimeprofiler"]], "Timer": [[97, "timer"]], "Accuracy": [[98, "accuracy"]], "Average": [[99, "average"]], "Bleu": [[100, "bleu"]], "ClassificationReport": [[101, "classificationreport"]], "DiceCoefficient": [[102, "dicecoefficient"]], "EpochMetric": [[103, "epochmetric"]], "FID": [[104, "fid"]], "Fbeta": [[105, "fbeta"]], "Frequency": [[106, "frequency"]], "GeometricAverage": [[107, "geometricaverage"]], "InceptionScore": [[108, "inceptionscore"]], "IoU": [[109, "iou"]], "JaccardIndex": [[110, "jaccardindex"]], "Loss": [[111, "loss"]], "MeanAbsoluteError": [[112, "meanabsoluteerror"]], "MeanPairwiseDistance": [[113, "meanpairwisedistance"]], "MeanSquaredError": [[114, "meansquarederror"]], "MultiLabelConfusionMatrix": [[115, "multilabelconfusionmatrix"]], "PSNR": [[116, "psnr"]], "RootMeanSquaredError": [[117, "rootmeansquarederror"]], "Rouge": [[118, "rouge"]], "RougeL": [[119, "rougel"]], "RougeN": [[120, "rougen"]], "RunningAverage": [[121, "runningaverage"]], "SSIM": [[122, "ssim"]], "TopKCategoricalAccuracy": [[123, "topkcategoricalaccuracy"]], "VariableAccumulation": [[124, "variableaccumulation"]], "ConfusionMatrix": [[125, "confusionmatrix"]], "mIoU": [[126, "miou"]], "Metric": [[127, "metric"]], "MetricsLambda": [[128, "metricslambda"]], "Precision": [[129, "precision"]], "Recall": [[130, "recall"]], "PyTorch-Ignite governance": [[131, "pytorch-ignite-governance"]], "Roles And Responsibilities": [[131, "roles-and-responsibilities"]], "Contributors": [[131, "contributors"]], "Core developers": [[131, "core-developers"]], "ignite.handlers": [[132, "ignite-handlers"]], "Complete list of handlers": [[132, "complete-list-of-handlers"]], "Parameter scheduler": [[132, "parameter-scheduler"]], "State Parameter scheduler": [[132, "state-parameter-scheduler"]], "More on parameter scheduling": [[132, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[132, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[132, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[132, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[132, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[132, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[132, "concatenate-with-torch-schedulers"]], "Example with ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[132, "example-with-ignite-handlers-param-scheduler-reducelronplateauscheduler"]], "Ignite Your Networks!": [[133, "ignite-your-networks"]], "Features": [[133, "features"]], "Installation": [[133, "installation"]], "Nightly releases": [[133, "nightly-releases"]], "Docker Images": [[133, "docker-images"]], "Using pre-built images": [[133, "using-pre-built-images"]], "Documentation": [[133, "documentation"]], "Notes": [[133, null]], "Library structure": [[133, "library-structure"]], "Package Reference": [[133, null]], "Contrib Package Reference": [[133, null]], "Team": [[133, null]], "ignite.metrics": [[134, "ignite-metrics"]], "Attach Engine API": [[134, "attach-engine-api"]], "Reset, Update, Compute API": [[134, "reset-update-compute-api"]], "Metric arithmetics": [[134, "metric-arithmetics"]], "How to create a custom metric": [[134, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[134, "metrics-and-its-usages"]], "Complete list of usages": [[134, "complete-list-of-usages"]], "Metrics and distributed computations": [[134, "metrics-and-distributed-computations"]], "Complete list of metrics": [[134, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[134, "helpers-for-customizing-metrics"]], "MetricUsage": [[134, "metricusage"]], "EpochWise": [[134, "epochwise"]], "BatchWise": [[134, "batchwise"]], "BatchFiltered": [[134, "batchfiltered"]], "reinit__is_reduced": [[134, "reinit-is-reduced"]], "sync_all_reduce": [[134, "sync-all-reduce"]], "Quick start": [[135, "quick-start"]], "Code": [[135, "code"]], "Explanation": [[135, "explanation"]], "ignite.utils": [[136, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[2, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[2, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[2, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[2, "module-ignite.contrib.engines.tbptt"]], "module": [[2, "module-ignite.contrib.engines.common"], [2, "module-ignite.contrib.engines.tbptt"], [4, "module-ignite.contrib.metrics.regression"], [6, "module-ignite.distributed.utils"], [12, "module-ignite.contrib.handlers.base_logger"], [13, "module-ignite.contrib.handlers.clearml_logger"], [14, "module-ignite.contrib.handlers.mlflow_logger"], [15, "module-ignite.contrib.handlers.neptune_logger"], [16, "module-ignite.contrib.handlers.polyaxon_logger"], [17, "module-ignite.contrib.handlers.tensorboard_logger"], [18, "module-ignite.contrib.handlers.tqdm_logger"], [19, "module-ignite.contrib.handlers.trains_logger"], [20, "module-ignite.contrib.handlers.visdom_logger"], [21, "module-ignite.contrib.handlers.wandb_logger"], [133, "module-ignite"], [133, "module-ignite.contrib"], [136, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_wandb_logging"]], "ignite.contrib.metrics.regression": [[4, "module-ignite.contrib.metrics.regression"]], "all_gather() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.all_gather"]], "all_reduce() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[6, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.model_name"]], "one_rank_only() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[6, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[9, "ignite.exceptions.NotComputableError"]], "basehandler (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseOutputHandler"]], "baseweightshandler (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseWeightsHandler"]], "baseweightsscalarhandler (class in ignite.contrib.handlers.base_logger)": [[12, "ignite.contrib.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.contrib.handlers.base_logger.baselogger method)": [[12, "ignite.contrib.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[12, "ignite.contrib.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[12, "ignite.contrib.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.contrib.handlers.base_logger": [[12, "module-ignite.contrib.handlers.base_logger"]], "clearmllogger (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "global_step_from_engine() (in module ignite.contrib.handlers.clearml_logger)": [[13, "ignite.contrib.handlers.clearml_logger.global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger": [[13, "module-ignite.contrib.handlers.clearml_logger"]], "remove() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[13, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "mlflowlogger (class in ignite.contrib.handlers.mlflow_logger)": [[14, "ignite.contrib.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.contrib.handlers.mlflow_logger)": [[14, "ignite.contrib.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.mlflow_logger)": [[14, "ignite.contrib.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.mlflow_logger)": [[14, "ignite.contrib.handlers.mlflow_logger.global_step_from_engine"]], "ignite.contrib.handlers.mlflow_logger": [[14, "module-ignite.contrib.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.neptune_logger)": [[15, "ignite.contrib.handlers.neptune_logger.global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[15, "module-ignite.contrib.handlers.neptune_logger"]], "remove() (ignite.contrib.handlers.neptune_logger.neptunesaver method)": [[15, "ignite.contrib.handlers.neptune_logger.NeptuneSaver.remove"]], "optimizerparamshandler (class in ignite.contrib.handlers.polyaxon_logger)": [[16, "ignite.contrib.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.polyaxon_logger)": [[16, "ignite.contrib.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.contrib.handlers.polyaxon_logger)": [[16, "ignite.contrib.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.polyaxon_logger)": [[16, "ignite.contrib.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.contrib.handlers.polyaxon_logger": [[16, "module-ignite.contrib.handlers.polyaxon_logger"]], "gradshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.tensorboard_logger)": [[17, "ignite.contrib.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[17, "module-ignite.contrib.handlers.tensorboard_logger"]], "progressbar (class in ignite.contrib.handlers.tqdm_logger)": [[18, "ignite.contrib.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[18, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[18, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.contrib.handlers.tqdm_logger": [[18, "module-ignite.contrib.handlers.tqdm_logger"]], "log_message() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[18, "ignite.contrib.handlers.tqdm_logger.ProgressBar.log_message"]], "trainslogger (in module ignite.contrib.handlers.trains_logger)": [[19, "ignite.contrib.handlers.trains_logger.TrainsLogger"]], "trainssaver (in module ignite.contrib.handlers.trains_logger)": [[19, "ignite.contrib.handlers.trains_logger.TrainsSaver"]], "ignite.contrib.handlers.trains_logger": [[19, "module-ignite.contrib.handlers.trains_logger"]], "gradsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.visdom_logger)": [[20, "ignite.contrib.handlers.visdom_logger.global_step_from_engine"]], "ignite.contrib.handlers.visdom_logger": [[20, "module-ignite.contrib.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.contrib.handlers.wandb_logger)": [[21, "ignite.contrib.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.wandb_logger)": [[21, "ignite.contrib.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.contrib.handlers.wandb_logger)": [[21, "ignite.contrib.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.wandb_logger)": [[21, "ignite.contrib.handlers.wandb_logger.global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[21, "module-ignite.contrib.handlers.wandb_logger"]], "averageprecision (class in ignite.contrib.metrics)": [[22, "ignite.contrib.metrics.AveragePrecision"]], "cohenkappa (class in ignite.contrib.metrics)": [[23, "ignite.contrib.metrics.CohenKappa"]], "get_cohen_kappa_fn() (ignite.contrib.metrics.cohenkappa method)": [[23, "ignite.contrib.metrics.CohenKappa.get_cohen_kappa_fn"]], "gpuinfo (class in ignite.contrib.metrics)": [[24, "ignite.contrib.metrics.GpuInfo"]], "attach() (ignite.contrib.metrics.gpuinfo method)": [[24, "ignite.contrib.metrics.GpuInfo.attach"]], "completed() (ignite.contrib.metrics.gpuinfo method)": [[24, "ignite.contrib.metrics.GpuInfo.completed"]], "compute() (ignite.contrib.metrics.gpuinfo method)": [[24, "ignite.contrib.metrics.GpuInfo.compute"]], "reset() (ignite.contrib.metrics.gpuinfo method)": [[24, "ignite.contrib.metrics.GpuInfo.reset"]], "update() (ignite.contrib.metrics.gpuinfo method)": [[24, "ignite.contrib.metrics.GpuInfo.update"]], "precisionrecallcurve (class in ignite.contrib.metrics)": [[25, "ignite.contrib.metrics.PrecisionRecallCurve"]], "compute() (ignite.contrib.metrics.precisionrecallcurve method)": [[25, "ignite.contrib.metrics.PrecisionRecallCurve.compute"]], "roc_auc (class in ignite.contrib.metrics)": [[26, "ignite.contrib.metrics.ROC_AUC"]], "roccurve (class in ignite.contrib.metrics)": [[27, "ignite.contrib.metrics.RocCurve"]], "canberrametric (class in ignite.contrib.metrics.regression)": [[28, "ignite.contrib.metrics.regression.CanberraMetric"]], "compute() (ignite.contrib.metrics.regression.canberrametric method)": [[28, "ignite.contrib.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.contrib.metrics.regression.canberrametric method)": [[28, "ignite.contrib.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.contrib.metrics.regression)": [[29, "ignite.contrib.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.contrib.metrics.regression)": [[30, "ignite.contrib.metrics.regression.FractionalBias"]], "compute() (ignite.contrib.metrics.regression.fractionalbias method)": [[30, "ignite.contrib.metrics.regression.FractionalBias.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalbias method)": [[30, "ignite.contrib.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.contrib.metrics.regression)": [[31, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[31, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[31, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[32, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[32, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[32, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "manhattandistance (class in ignite.contrib.metrics.regression)": [[33, "ignite.contrib.metrics.regression.ManhattanDistance"]], "compute() (ignite.contrib.metrics.regression.manhattandistance method)": [[33, "ignite.contrib.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.contrib.metrics.regression.manhattandistance method)": [[33, "ignite.contrib.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.contrib.metrics.regression)": [[34, "ignite.contrib.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[34, "ignite.contrib.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[34, "ignite.contrib.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.contrib.metrics.regression)": [[35, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[35, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[35, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.contrib.metrics.regression)": [[36, "ignite.contrib.metrics.regression.MeanError"]], "compute() (ignite.contrib.metrics.regression.meanerror method)": [[36, "ignite.contrib.metrics.regression.MeanError.compute"]], "reset() (ignite.contrib.metrics.regression.meanerror method)": [[36, "ignite.contrib.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.contrib.metrics.regression)": [[37, "ignite.contrib.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[37, "ignite.contrib.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[37, "ignite.contrib.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.contrib.metrics.regression)": [[38, "ignite.contrib.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.contrib.metrics.regression)": [[39, "ignite.contrib.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[40, "ignite.contrib.metrics.regression.MedianRelativeAbsoluteError"]], "r2score (class in ignite.contrib.metrics.regression)": [[41, "ignite.contrib.metrics.regression.R2Score"]], "compute() (ignite.contrib.metrics.regression.r2score method)": [[41, "ignite.contrib.metrics.regression.R2Score.compute"]], "reset() (ignite.contrib.metrics.regression.r2score method)": [[41, "ignite.contrib.metrics.regression.R2Score.reset"]], "wavehedgesdistance (class in ignite.contrib.metrics.regression)": [[42, "ignite.contrib.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[42, "ignite.contrib.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[42, "ignite.contrib.metrics.regression.WaveHedgesDistance.reset"]], "distributedproxysampler (class in ignite.distributed.auto)": [[43, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[44, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[45, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[46, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[47, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[47, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[48, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[49, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[50, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[50, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[51, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[51, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[52, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[53, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[54, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.has_event_handler"]], "interrupt() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.interrupt"]], "last_event_name (ignite.engine.engine.engine attribute)": [[54, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[54, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[54, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[55, "ignite.engine.events.CallableEventWithFilter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[55, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[55, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[55, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[55, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[55, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[56, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[57, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "interrupt (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.INTERRUPT"]], "iteration_completed (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[57, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[58, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[59, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[59, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[60, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[60, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[61, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[62, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[63, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[64, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[65, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[66, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[67, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[67, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[68, "ignite.handlers.TimeLimit"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[69, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[69, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[69, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[70, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[70, "ignite.handlers.checkpoint.Checkpoint.Item"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[70, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[70, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[70, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[70, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[70, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reload_objects() (ignite.handlers.checkpoint.checkpoint method)": [[70, "ignite.handlers.checkpoint.Checkpoint.reload_objects"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[70, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[70, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[70, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[71, "ignite.handlers.checkpoint.ModelCheckpoint"]], "earlystopping (class in ignite.handlers.early_stopping)": [[72, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[72, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[72, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[73, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[73, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[73, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "handle_buffers (ignite.handlers.ema_handler.emahandler attribute)": [[73, "ignite.handlers.ema_handler.EMAHandler.handle_buffers"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[73, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[73, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "global_step_from_engine() (in module ignite.handlers)": [[74, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[75, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[76, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[77, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[77, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[77, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[77, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[77, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[78, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[78, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[79, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[80, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[80, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[80, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[81, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[81, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[82, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[82, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[82, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[82, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[83, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[83, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[84, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[84, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "reducelronplateauscheduler (class in ignite.handlers.param_scheduler)": [[85, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler"]], "get_param() (ignite.handlers.param_scheduler.reducelronplateauscheduler method)": [[85, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.reducelronplateauscheduler class method)": [[85, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.simulate_values"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[86, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[87, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[87, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[88, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[88, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[89, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[89, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[90, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[90, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[91, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[91, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[91, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[92, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[92, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[93, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[93, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[93, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[93, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[93, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[93, "ignite.handlers.stores.EpochOutputStore.update"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[94, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[95, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[95, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[95, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[95, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[95, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[96, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[96, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[96, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[96, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[96, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[97, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[97, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[97, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[97, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[97, "ignite.handlers.timing.Timer.value"]], "accuracy (class in ignite.metrics)": [[98, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[98, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[98, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[98, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[99, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[99, "ignite.metrics.Average.compute"]], "bleu (class in ignite.metrics)": [[100, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[100, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[100, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[100, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[101, "ignite.metrics.ClassificationReport"]], "dicecoefficient() (in module ignite.metrics)": [[102, "ignite.metrics.DiceCoefficient"]], "epochmetric (class in ignite.metrics)": [[103, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[103, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[103, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[103, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[104, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[104, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[104, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[104, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[105, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[106, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[106, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[106, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[106, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[106, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[106, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[107, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[107, "ignite.metrics.GeometricAverage.compute"]], "inceptionscore (class in ignite.metrics)": [[108, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[108, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[108, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[108, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[109, "ignite.metrics.IoU"]], "jaccardindex() (in module ignite.metrics)": [[110, "ignite.metrics.JaccardIndex"]], "loss (class in ignite.metrics)": [[111, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[111, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[111, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[111, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[111, "ignite.metrics.Loss.update"]], "meanabsoluteerror (class in ignite.metrics)": [[112, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[112, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[112, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[112, "ignite.metrics.MeanAbsoluteError.update"]], "meanpairwisedistance (class in ignite.metrics)": [[113, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[113, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[113, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[113, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[114, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[114, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[114, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[114, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[115, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[115, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[115, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[115, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "psnr (class in ignite.metrics)": [[116, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[116, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[116, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[116, "ignite.metrics.PSNR.update"]], "rootmeansquarederror (class in ignite.metrics)": [[117, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[117, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[118, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[118, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[118, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[118, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[119, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[120, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[121, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[121, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[121, "ignite.metrics.RunningAverage.compute"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[121, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[121, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[121, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[122, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[122, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[122, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[122, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[123, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[123, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[123, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[123, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[124, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[124, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[124, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[124, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[124, "ignite.metrics.VariableAccumulation.update"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[125, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[125, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[125, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[125, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[125, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[126, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[127, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.iteration_completed"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[127, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.started"]], "update() (ignite.metrics.metric.metric method)": [[127, "ignite.metrics.metric.Metric.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[128, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[129, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[129, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[130, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[130, "ignite.metrics.recall.Recall.update"]], "ignite": [[133, "module-ignite"]], "ignite.contrib": [[133, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[134, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[134, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[134, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[134, "ignite.metrics.metric.MetricUsage"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[134, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[134, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[134, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[134, "ignite.metrics.metric.EpochWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[136, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[136, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[136, "ignite.utils.convert_tensor"]], "hash_checkpoint() (in module ignite.utils)": [[136, "ignite.utils.hash_checkpoint"]], "ignite.utils": [[136, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[136, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[136, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[136, "ignite.utils.to_onehot"]]}})