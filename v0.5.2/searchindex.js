Search.setIndex({"docnames": ["contrib/engines", "contrib/handlers", "contrib/metrics", "defaults", "distributed", "engine", "exceptions", "generated/defaults", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.base_logger", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.clearml_logger", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.fbresearch_logger", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.mlflow_logger", "generated/ignite.handlers.neptune_logger", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.polyaxon_logger", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.tensorboard_logger", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.handlers.tqdm_logger", "generated/ignite.handlers.visdom_logger", "generated/ignite.handlers.wandb_logger", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.AveragePrecision", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.CohenKappa", "generated/ignite.metrics.CommonObjectDetectionMetrics", "generated/ignite.metrics.CosineSimilarity", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.Entropy", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.GpuInfo", "generated/ignite.metrics.HSIC", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JSDivergence", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.KLDivergence", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MaximumMeanDiscrepancy", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanAveragePrecision", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.MutualInformation", "generated/ignite.metrics.ObjectDetectionAvgPrecisionRecall", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.PrecisionRecallCurve", "generated/ignite.metrics.ROC_AUC", "generated/ignite.metrics.RocCurve", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.clustering.CalinskiHarabaszScore", "generated/ignite.metrics.clustering.DaviesBouldinScore", "generated/ignite.metrics.clustering.SilhouetteScore", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metric_group.MetricGroup", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "generated/ignite.metrics.regression.CanberraMetric", "generated/ignite.metrics.regression.FractionalAbsoluteError", "generated/ignite.metrics.regression.FractionalBias", "generated/ignite.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.metrics.regression.KendallRankCorrelation", "generated/ignite.metrics.regression.ManhattanDistance", "generated/ignite.metrics.regression.MaximumAbsoluteError", "generated/ignite.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.metrics.regression.MeanError", "generated/ignite.metrics.regression.MeanNormalizedBias", "generated/ignite.metrics.regression.MedianAbsoluteError", "generated/ignite.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.metrics.regression.PearsonCorrelation", "generated/ignite.metrics.regression.R2Score", "generated/ignite.metrics.regression.SpearmanRankCorrelation", "generated/ignite.metrics.regression.WaveHedgesDistance", "generated/ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list", "handlers", "index", "metrics", "utils"], "filenames": ["contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "defaults.rst", "distributed.rst", "engine.rst", "exceptions.rst", "generated/defaults.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.base_logger.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.clearml_logger.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.fbresearch_logger.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.mlflow_logger.rst", "generated/ignite.handlers.neptune_logger.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.polyaxon_logger.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.tensorboard_logger.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.handlers.tqdm_logger.rst", "generated/ignite.handlers.visdom_logger.rst", "generated/ignite.handlers.wandb_logger.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.AveragePrecision.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.CohenKappa.rst", "generated/ignite.metrics.CommonObjectDetectionMetrics.rst", "generated/ignite.metrics.CosineSimilarity.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.Entropy.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.GpuInfo.rst", "generated/ignite.metrics.HSIC.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JSDivergence.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.KLDivergence.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MaximumMeanDiscrepancy.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanAveragePrecision.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.MutualInformation.rst", "generated/ignite.metrics.ObjectDetectionAvgPrecisionRecall.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.PrecisionRecallCurve.rst", "generated/ignite.metrics.ROC_AUC.rst", "generated/ignite.metrics.RocCurve.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.clustering.CalinskiHarabaszScore.rst", "generated/ignite.metrics.clustering.DaviesBouldinScore.rst", "generated/ignite.metrics.clustering.SilhouetteScore.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metric_group.MetricGroup.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "generated/ignite.metrics.regression.CanberraMetric.rst", "generated/ignite.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.metrics.regression.FractionalBias.rst", "generated/ignite.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.metrics.regression.KendallRankCorrelation.rst", "generated/ignite.metrics.regression.ManhattanDistance.rst", "generated/ignite.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.metrics.regression.MeanError.rst", "generated/ignite.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.metrics.regression.PearsonCorrelation.rst", "generated/ignite.metrics.regression.R2Score.rst", "generated/ignite.metrics.regression.SpearmanRankCorrelation.rst", "generated/ignite.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list.rst", "handlers.rst", "index.rst", "metrics.rst", "utils.rst"], "titles": ["ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "&lt;no title&gt;", "ignite.distributed", "ignite.engine", "ignite.exceptions", "&lt;no title&gt;", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "base_logger", "BaseSaveHandler", "Checkpoint", "ModelCheckpoint", "clearml_logger", "EarlyStopping", "EMAHandler", "fbresearch_logger", "global_step_from_engine", "FastaiLRFinder", "mlflow_logger", "neptune_logger", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "ReduceLROnPlateauScheduler", "create_lr_scheduler_with_warmup", "polyaxon_logger", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "tensorboard_logger", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "tqdm_logger", "visdom_logger", "wandb_logger", "Accuracy", "Average", "AveragePrecision", "Bleu", "ClassificationReport", "CohenKappa", "CommonObjectDetectionMetrics", "CosineSimilarity", "DiceCoefficient", "Entropy", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "GpuInfo", "HSIC", "InceptionScore", "IoU", "JSDivergence", "JaccardIndex", "KLDivergence", "Loss", "MaximumMeanDiscrepancy", "MeanAbsoluteError", "MeanAveragePrecision", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "MutualInformation", "ObjectDetectionAvgPrecisionRecall", "PSNR", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "CalinskiHarabaszScore", "DaviesBouldinScore", "SilhouetteScore", "ConfusionMatrix", "mIoU", "Metric", "MetricGroup", "MetricsLambda", "Precision", "Recall", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "KendallRankCorrelation", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "PearsonCorrelation", "R2Score", "SpearmanRankCorrelation", "WaveHedgesDistance", "coco_tensor_list_to_dict_list", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "ignite.utils"], "terms": {"contribut": [0, 1, 119], "modul": [0, 1, 4, 5, 10, 12, 13, 14, 26, 27, 28, 29, 30, 31, 34, 36, 38, 40, 45, 65, 71, 72, 84, 90, 121, 146, 147, 148], "tool": [0, 4, 12], "tbptt": 0, "common": [0, 4, 38, 44, 45, 57, 65, 71, 72, 79, 110, 147], "class": [0, 5, 6, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "tbptt_event": [0, 19], "valu": [0, 4, 12, 13, 14, 15, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 75, 80, 84, 85, 86, 88, 89, 90, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147], "sourc": [0, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "adit": 0, "event": [0, 15, 19, 20, 21, 23, 24, 25, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 86, 88, 112, 145, 146, 147], "addit": [0, 4, 5, 10, 15, 19, 36, 56, 76, 84, 95, 98, 118, 124], "dedic": 0, "create_supervised_tbptt_train": 0, "model": [0, 3, 4, 5, 7, 10, 13, 14, 19, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "optim": [0, 3, 4, 5, 7, 10, 11, 13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "loss_fn": [0, 14, 28, 29, 30, 31, 95], "tbtt_step": 0, "dim": [0, 19, 74, 75, 84, 87, 98, 114, 147], "0": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "devic": [0, 4, 9, 10, 13, 14, 19, 26, 27, 28, 29, 30, 31, 35, 36, 40, 44, 57, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "none": [0, 4, 5, 8, 12, 13, 14, 16, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148], "non_block": [0, 13, 14, 19, 26, 27, 28, 29, 30, 31, 121, 148], "fals": [0, 4, 10, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 82, 83, 85, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 147, 148], "prepare_batch": [0, 13, 14, 19, 26, 27, 28, 29, 30, 31, 121], "function": [0, 4, 5, 12, 13, 14, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 57, 58, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "_prepare_batch": [0, 13, 14, 26, 27, 28, 29, 30, 31], "creat": [0, 3, 4, 7, 9, 11, 13, 14, 19, 21, 26, 27, 32, 33, 36, 37, 38, 40, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148], "backprop": 0, "supervis": [0, 13, 14, 26, 27, 28, 29, 30, 31, 43, 146], "train": [0, 4, 8, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 33, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 53, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 70, 71, 72, 84, 88, 112, 121, 123, 146, 148], "recurr": 0, "long": [0, 83, 95, 103, 119], "sequenc": [0, 4, 38, 44, 45, 48, 49, 51, 53, 54, 57, 65, 71, 72, 73, 76, 79, 80, 82, 84, 89, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 109, 110, 111, 113, 114, 119, 122, 123, 124, 125, 148], "i": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148], "computation": 0, "intens": 0, "requir": [0, 4, 14, 19, 28, 29, 30, 31, 36, 43, 44, 46, 57, 71, 76, 80, 82, 84, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 102, 108, 114, 116, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "process": [0, 4, 8, 9, 10, 11, 12, 14, 35, 36, 38, 41, 67, 68, 69, 72, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 104, 109, 112, 113, 114, 115, 119, 121, 122, 123, 125, 130, 131, 142, 147, 148], "whole": [0, 46, 47, 52], "befor": [0, 4, 10, 13, 14, 19, 20, 22, 26, 27, 33, 36, 43, 48, 49, 51, 73, 74, 75, 78, 80, 82, 83, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 130, 131, 137, 138, 139, 142, 147], "get": [0, 4, 14, 25, 35, 36, 38, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 58, 59, 60, 61, 63, 65, 84, 112, 119, 147], "gradient": [0, 14, 28, 29, 30, 31, 34, 38, 43, 45, 65, 71, 72], "howev": [0, 5, 70, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "when": [0, 4, 5, 15, 19, 22, 33, 36, 38, 40, 43, 45, 55, 62, 65, 69, 70, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148], "loss": [0, 14, 19, 21, 28, 29, 30, 31, 36, 38, 41, 43, 44, 45, 55, 57, 64, 65, 70, 71, 72, 121, 122], "comput": [0, 4, 5, 6, 19, 33, 36, 40, 48, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146], "over": [0, 19, 38, 43, 45, 47, 48, 49, 51, 52, 54, 65, 71, 79, 91, 95, 98, 103, 120, 147], "mani": 0, "output": [0, 13, 14, 19, 25, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 41, 42, 43, 44, 45, 55, 56, 57, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "x": [0, 4, 13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 41, 57, 64, 70, 74, 84, 86, 87, 88, 89, 90, 95, 96, 102, 112, 115, 116, 117, 118, 121, 142, 147, 148], "an": [0, 4, 5, 13, 14, 15, 16, 19, 22, 25, 26, 27, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 78, 83, 84, 87, 90, 95, 103, 104, 105, 106, 107, 112, 116, 117, 118, 119, 121, 131, 142, 147, 148], "opportun": 0, "subsequ": [0, 110], "thi": [0, 4, 5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 57, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "known": [0, 134], "appli": [0, 9, 10, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 36, 38, 40, 43, 45, 48, 49, 51, 65, 71, 75, 78, 105, 106, 107, 123, 147, 148], "step": [0, 4, 5, 11, 14, 19, 21, 28, 29, 30, 31, 36, 37, 38, 40, 42, 44, 45, 57, 58, 60, 63, 65, 69, 71, 72], "everi": [0, 4, 5, 19, 20, 22, 23, 36, 37, 38, 40, 41, 44, 45, 57, 58, 59, 63, 64, 65, 69, 70, 71, 72, 86, 112, 121, 123, 147, 148], "while": [0, 5, 9, 17, 36, 38, 42, 43, 44, 45, 57, 65, 71, 72, 82, 102], "same": [0, 4, 5, 12, 15, 16, 36, 40, 43, 55, 73, 74, 76, 80, 82, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "paramet": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148], "us": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "int": [0, 4, 8, 12, 14, 16, 19, 20, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 69, 71, 72, 76, 77, 79, 81, 84, 86, 90, 91, 93, 99, 101, 103, 104, 109, 111, 113, 114, 119, 120, 148], "length": [0, 19, 25, 48, 49, 51, 103, 110], "chunk": 0, "last": [0, 5, 19, 36, 37, 39, 47, 48, 49, 51, 112, 147], "one": [0, 5, 10, 12, 19, 36, 39, 43, 51, 52, 60, 66, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "mai": [0, 4, 13, 14, 19, 24, 26, 27, 28, 29, 30, 31, 43, 70, 119], "smaller": [0, 36], "axi": [0, 119], "repres": [0, 41, 54, 61, 119], "dimens": [0, 4, 74, 87, 95, 98, 101, 113, 115, 124, 144], "option": [0, 4, 5, 8, 12, 13, 14, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 64, 65, 69, 70, 71, 72, 75, 76, 77, 78, 81, 83, 84, 85, 90, 91, 93, 95, 98, 103, 106, 107, 109, 112, 115, 118, 119, 120, 121, 124, 125, 137, 138, 139, 148], "str": [0, 4, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "type": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "specif": [0, 4, 5, 11, 12, 13, 14, 16, 22, 26, 27, 28, 29, 30, 31, 36, 38, 45, 65, 75, 77, 78, 83, 106, 107, 137, 138, 139, 147], "default": [0, 3, 4, 5, 7, 9, 10, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "batch": [0, 3, 4, 5, 7, 9, 13, 14, 15, 16, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 36, 37, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "bool": [0, 4, 10, 13, 14, 19, 20, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 148], "true": [0, 3, 4, 5, 7, 9, 10, 13, 14, 15, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "copi": [0, 13, 14, 26, 27, 28, 29, 30, 31, 38, 40, 46, 47, 52], "between": [0, 5, 13, 14, 19, 25, 26, 27, 28, 29, 30, 31, 41, 43, 54, 69, 89, 98, 102, 103, 104, 109, 110, 111, 118, 119], "cpu": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 36, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "gpu": [0, 4, 12, 13, 14, 26, 27, 28, 29, 30, 31, 41, 88, 147], "occur": [0, 13, 14, 26, 27, 28, 29, 30, 31, 32, 37, 69, 111], "asynchron": [0, 13, 14, 26, 27, 28, 29, 30, 31, 148], "respect": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 40, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148], "host": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 148], "For": [0, 4, 5, 11, 12, 13, 14, 15, 17, 26, 27, 28, 29, 30, 31, 36, 38, 43, 44, 45, 57, 65, 66, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 125, 147], "other": [0, 4, 10, 11, 12, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 36, 38, 40, 43, 45, 95, 103, 104, 118, 119, 121, 123, 147], "case": [0, 4, 5, 13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 40, 73, 74, 75, 77, 78, 85, 87, 88, 98, 103, 105, 106, 107, 112, 119, 122, 124, 125, 147], "argument": [0, 4, 9, 10, 12, 13, 14, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 44, 45, 50, 51, 55, 57, 64, 65, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148], "ha": [0, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 36, 37, 38, 40, 76, 101, 109, 119, 147], "effect": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31], "callabl": [0, 4, 12, 13, 14, 15, 17, 19, 20, 24, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 57, 59, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "receiv": [0, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 36, 73, 74, 76, 80, 82, 83, 85, 87, 89, 92, 94, 96, 97, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "tupl": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 38, 44, 45, 47, 52, 54, 57, 61, 65, 68, 71, 72, 76, 83, 88, 95, 98, 103, 109, 112, 115, 121, 124, 131, 142, 144, 148], "tensor": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 34, 38, 44, 45, 57, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148], "batch_x": [0, 13, 14, 26, 27, 28, 29, 30, 31], "batch_i": [0, 13, 14, 26, 27, 28, 29, 30, 31], "return": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "updat": [0, 9, 14, 21, 28, 29, 30, 31, 40, 46, 48, 49, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146], "The": [0, 4, 11, 13, 14, 19, 20, 22, 26, 27, 32, 36, 38, 40, 41, 43, 47, 48, 58, 60, 66, 77, 78, 80, 82, 84, 85, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "intern": [0, 5, 9, 10, 11, 13, 14, 15, 16, 19, 20, 25, 26, 27, 36, 37, 39, 53, 62, 69, 75, 77, 78, 83, 106, 107, 121, 137, 138, 139, 147, 148], "chang": [0, 4, 10, 11, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 44, 45, 48, 49, 50, 51, 55, 57, 58, 60, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 86, 87, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 141, 143, 147, 148], "now": [0, 4, 12, 13, 14, 24, 26, 27, 64, 70, 76, 109, 148], "onli": [0, 4, 10, 12, 13, 14, 20, 26, 27, 36, 37, 38, 45, 51, 65, 83, 84, 85, 89, 90, 103, 104, 112, 119, 130], "move": [0, 1, 2, 13, 14, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 146, 148], "input": [0, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 26, 27, 32, 36, 37, 38, 44, 45, 57, 59, 65, 71, 72, 74, 76, 83, 84, 87, 90, 95, 98, 102, 109, 112, 113, 115, 121, 124, 125, 130, 137, 138, 139, 144, 148], "data": [0, 4, 5, 8, 9, 13, 14, 15, 16, 19, 22, 24, 25, 26, 27, 36, 38, 39, 41, 64, 67, 68, 71, 73, 74, 75, 78, 82, 83, 84, 86, 87, 88, 90, 98, 101, 102, 104, 105, 106, 107, 112, 116, 117, 118, 119, 121, 123, 124, 125, 130, 131, 137, 138, 139, 142, 147, 148], "correct": [0, 13, 14, 20, 26, 27, 36, 70, 147], "should": [0, 4, 10, 12, 13, 14, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 48, 49, 50, 51, 54, 55, 57, 61, 65, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 131, 142], "user": [0, 4, 5, 8, 9, 12, 13, 14, 19, 21, 22, 25, 26, 27, 36, 37, 40, 44, 45, 59, 75, 78, 83, 105, 106, 107, 113, 116, 117, 118, 122, 131, 142, 147], "more": [0, 4, 5, 10, 12, 13, 14, 15, 17, 19, 22, 37, 38, 43, 44, 45, 53, 55, 62, 65, 70, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 147], "inform": [0, 4, 13, 14, 38, 41, 43, 45, 65, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125], "see": [0, 4, 5, 12, 13, 14, 15, 17, 19, 34, 36, 37, 38, 44, 69, 70, 72, 83, 95, 119, 121, 145, 147], "pytorch": [0, 4, 5, 8, 12, 13, 14, 19, 38, 44, 45, 57, 58, 60, 63, 65, 71, 72, 121, 146, 147], "document": [0, 13, 14, 72, 146], "": [0, 4, 5, 8, 10, 11, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "explan": [0, 13, 14], "add_early_stopping_by_val_scor": 0, "patienc": [0, 39, 55, 145], "metric_nam": [0, 34, 36, 38, 44, 45, 55, 57, 65, 70, 71, 72, 86, 88], "score_sign": [0, 36], "1": [0, 3, 4, 5, 7, 10, 12, 14, 15, 19, 22, 25, 28, 29, 30, 31, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "earli": 0, "stop": [0, 39, 43, 55, 66], "handler": [0, 3, 4, 5, 7, 14, 15, 19, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148], "base": [0, 3, 5, 7, 8, 19, 21, 25, 34, 35, 36, 37, 38, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "score": [0, 35, 36, 37, 39, 76, 77, 85, 90, 103, 109, 110, 111, 116, 117, 118], "name": [0, 4, 12, 13, 14, 19, 20, 24, 25, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 79, 86, 88, 112, 121, 122, 123, 147, 148], "provid": [0, 4, 5, 9, 10, 11, 12, 15, 16, 19, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 56, 57, 65, 71, 72, 85, 86, 88, 95, 99, 103, 121, 123, 147], "metric": [0, 3, 5, 6, 7, 13, 19, 25, 26, 27, 34, 36, 38, 39, 41, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "increas": [0, 39, 43, 48, 51, 52, 54, 55, 60, 61, 103], "order": [0, 5, 76, 111], "keep": [0, 4, 5, 17, 36, 38, 40, 43, 45, 65, 144, 147, 148], "number": [0, 4, 8, 9, 12, 14, 19, 25, 28, 29, 30, 31, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 62, 65, 66, 70, 71, 72, 74, 84, 86, 87, 90, 98, 101, 103, 113, 115, 119, 121, 124, 125, 131, 144, 148], "wait": [0, 39], "improv": [0, 39, 55, 148], "run": [0, 4, 5, 12, 14, 15, 19, 20, 22, 24, 25, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "present": [0, 19, 101], "state": [0, 5, 10, 11, 13, 14, 15, 17, 19, 24, 26, 27, 28, 29, 30, 31, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148], "float": [0, 4, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 71, 72, 80, 83, 85, 89, 96, 98, 99, 103, 104, 109, 110, 111, 112, 113, 115, 121, 140], "sign": [0, 36], "error": [0, 36, 38, 64, 83, 97, 100, 104, 108, 127, 129, 130, 133, 134, 135, 137, 138, 139, 148], "like": [0, 4, 5, 12, 36, 70, 86, 88, 95, 98, 121, 124, 125, 147, 148], "e": [0, 5, 15, 19, 22, 35, 36, 37, 38, 39, 41, 44, 45, 56, 57, 64, 65, 69, 70, 71, 72, 81, 82, 91, 92, 93, 94, 96, 98, 102, 112, 116, 117, 118, 119, 120, 121, 123, 147, 148], "g": [0, 5, 19, 35, 36, 37, 38, 41, 44, 45, 56, 57, 64, 65, 69, 70, 71, 72, 81, 82, 90, 91, 92, 93, 94, 102, 112, 119, 120, 121, 123, 147, 148], "better": [0, 35, 36], "neg": [0, 4, 36, 73, 89, 101, 117, 125], "object": [0, 19, 20, 25, 34, 36, 37, 38, 39, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 57, 59, 65, 67, 68, 69, 70, 71, 72, 79, 85, 90, 103, 112, 121, 123, 148], "larger": [0, 9, 10, 12, 19, 36, 49, 64, 83, 130, 137, 138, 139], "ar": [0, 4, 5, 10, 15, 19, 22, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 57, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148], "retain": [0, 36, 37], "A": [0, 4, 15, 19, 20, 24, 36, 37, 39, 41, 50, 88, 91, 93, 98, 104, 113, 116, 122, 130, 139, 140, 141, 142, 147], "earlystop": 0, "gen_save_best_models_by_val_scor": 0, "save_handl": [0, 36], "n_save": [0, 36, 37, 38, 45, 72], "3": [0, 4, 5, 10, 19, 22, 23, 33, 34, 36, 37, 40, 41, 46, 50, 53, 54, 55, 56, 58, 59, 60, 67, 68, 70, 74, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 97, 99, 100, 101, 104, 107, 108, 113, 114, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "tag": [0, 34, 38, 44, 45, 57, 65, 71, 72, 88], "val": 0, "kwarg": [0, 4, 9, 10, 11, 12, 19, 25, 32, 34, 36, 37, 38, 43, 44, 45, 46, 50, 52, 53, 55, 57, 62, 65, 70, 71, 72, 95, 121, 123, 147], "add": [0, 4, 19, 40], "save": [0, 5, 14, 15, 19, 32, 35, 36, 37, 38, 39, 45, 52, 55, 64, 72, 121], "best": [0, 36, 38, 45, 55, 72, 109, 110, 111], "highest": [0, 36, 37], "logic": [0, 19], "how": [0, 40, 43, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125, 146], "store": [0, 5, 15, 16, 19, 24, 36, 37, 38, 64, 67, 68, 83, 115, 130, 137, 138, 139, 147, 148], "deleg": 0, "union": [0, 4, 9, 13, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "basesavehandl": [0, 36], "two": [0, 5, 36, 37, 40, 43, 83, 103, 115, 131], "checkpoint": [0, 5, 32, 35, 37, 38, 40, 45, 72, 148], "dictionari": [0, 15, 19, 25, 35, 36, 38, 43, 44, 45, 46, 47, 52, 57, 65, 70, 71, 72, 86, 88, 95, 103, 112, 121, 122, 123, 144], "filenam": [0, 32, 35, 36, 37, 38, 45, 67, 68, 148], "If": [0, 4, 9, 12, 13, 14, 15, 19, 26, 27, 32, 36, 37, 38, 40, 44, 45, 48, 49, 51, 55, 56, 57, 64, 65, 70, 71, 72, 75, 77, 78, 80, 82, 83, 84, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 121, 123, 131, 142, 147, 148], "can": [0, 4, 5, 10, 12, 13, 14, 15, 19, 21, 22, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 51, 57, 59, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "inherit": [0, 11, 21, 22, 36, 37, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "implement": [0, 11, 19, 34, 36, 43, 76, 77, 83, 84, 93, 95, 116, 117, 118, 121, 126, 130, 131, 137, 138, 139, 142, 147], "remov": [0, 1, 19, 20, 24, 32, 34, 35, 36, 37, 38, 43, 45], "fix": [0, 36, 126, 132], "In": [0, 4, 5, 10, 19, 35, 36, 38, 40, 59, 73, 76, 83, 84, 88, 95, 98, 103, 112, 119, 121, 124, 125, 130, 145, 147], "need": [0, 19, 20, 36, 37, 40, 43, 45, 65, 70, 71, 72, 78, 80, 82, 89, 92, 94, 96, 97, 98, 99, 100, 102, 104, 108, 112, 113, 114, 116, 117, 118, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "disk": [0, 32, 36, 37], "defin": [0, 3, 4, 7, 13, 14, 15, 19, 21, 22, 25, 26, 27, 34, 36, 37, 39, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 70, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147], "disksav": [0, 5, 36, 37, 40], "dict": [0, 13, 19, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 52, 57, 65, 67, 71, 72, 77, 86, 88, 95, 103, 118, 121, 122, 144], "have": [0, 4, 5, 8, 14, 19, 36, 38, 40, 44, 45, 57, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "state_dict": [0, 5, 15, 19, 36, 37, 39, 43, 46, 47, 52, 121], "load_state_dict": [0, 5, 19, 36, 39, 43, 46, 47, 52, 121], "fetch": [0, 4, 5, 22, 25, 67, 68], "epoch": [0, 5, 15, 19, 22, 24, 25, 36, 37, 38, 39, 41, 42, 44, 45, 48, 49, 51, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148], "prefix": [0, 35, 36, 37], "_": [0, 4, 15, 19, 36, 37, 41, 69, 72, 96, 137, 138, 139], "By": [0, 4, 5, 19, 25, 36, 47, 65, 70, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "ani": [0, 4, 9, 10, 11, 12, 13, 14, 15, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148], "keyword": [0, 9, 12, 19, 25, 32, 36, 37, 38, 55, 57, 65, 72, 95, 123, 147], "arg": [0, 4, 12, 19, 34, 37, 38, 44, 45, 51, 57, 65, 69, 70, 71, 72, 83, 106, 107, 121, 123, 147], "pass": [0, 4, 14, 19, 21, 22, 25, 33, 35, 36, 37, 43, 45, 52, 55, 64, 70, 71, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 104, 109, 112, 113, 114, 115, 118, 119, 121, 122, 123, 125, 131, 142, 147], "construct": [0, 14, 38, 45, 52, 55, 65, 122], "save_best_model_by_val_scor": 0, "output_path": [0, 67, 68], "path": [0, 32, 36, 37, 38, 65, 67, 68, 72, 148], "indic": [0, 5, 16, 20, 22, 37, 60, 69, 77, 116, 117, 119, 147, 148], "where": [0, 4, 32, 33, 36, 37, 38, 40, 44, 45, 47, 52, 57, 65, 70, 71, 72, 73, 76, 80, 82, 84, 85, 89, 90, 92, 94, 95, 96, 97, 98, 100, 102, 104, 108, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "setup_any_log": 0, "logger": [0, 34, 38, 41, 44, 45, 57, 65, 70, 71, 72, 146, 148], "logger_modul": 0, "log_every_it": 0, "deprec": [0, 20, 146], "sinc": [0, 1, 2, 14, 19, 22, 37, 38, 39, 40, 44, 45, 57, 65, 71, 72, 147], "version": [0, 1, 2, 4, 5, 10, 11, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 141, 142, 143, 147, 148], "4": [0, 1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "pleas": [0, 4, 5, 9, 10, 12, 15, 17, 19, 20, 35, 36, 37, 38, 43, 44, 45, 57, 65, 70, 71, 72, 84, 90, 104, 147], "instead": [0, 1, 14, 20, 37, 38, 44, 45, 57, 65, 70, 71, 72], "setup_tb_log": 0, "setup_visdom_log": 0, "setup_mlflow_log": 0, "etc": [0, 5, 12, 19, 36, 38, 72, 148], "baselogg": [0, 34], "setup_clearml_log": 0, "100": [0, 5, 19, 22, 40, 41, 56, 79, 86, 103, 138, 145], "clearml": [0, 38, 145], "log": [0, 4, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 76, 82, 86, 87, 88, 92, 94, 102, 148], "list": [0, 2, 4, 19, 20, 34, 36, 38, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 76, 77, 103, 109, 110, 111, 121, 144, 146], "averag": [0, 4, 19, 40, 69, 75, 76, 79, 85, 87, 89, 95, 96, 98, 99, 103, 104, 109, 110, 111, 112, 115, 119, 123, 124, 125, 147], "learn": [0, 36, 38, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 62, 65, 71, 72, 77, 124, 125, 126, 132, 145], "rate": [0, 38, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 62, 65, 71, 72, 101, 145], "singl": [0, 4, 12, 20, 24, 25, 35, 36, 37, 39, 66, 69, 70, 74, 87, 115, 119, 147], "torch": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 27, 29, 32, 36, 37, 38, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "kei": [0, 12, 19, 25, 36, 37, 38, 39, 43, 44, 45, 57, 65, 71, 72, 77, 86, 88, 95, 103, 121, 144], "interv": [0, 41], "attach": [0, 3, 7, 14, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146], "iter": [0, 5, 13, 14, 15, 16, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 54, 55, 57, 65, 67, 70, 71, 72, 86, 88, 147], "To": [0, 36, 37, 38, 44, 45, 57, 65, 71, 72, 75, 78, 80, 82, 83, 84, 86, 89, 92, 94, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 113, 114, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "set": [0, 4, 5, 9, 19, 22, 25, 36, 37, 38, 40, 45, 47, 53, 54, 56, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 74, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "clearmllogg": [0, 38], "setup_common_distrib_training_handl": 0, "train_sampl": 0, "to_sav": [0, 5, 36, 37, 38, 40, 43, 45], "save_every_it": 0, "1000": [0, 36, 84, 90], "lr_schedul": [0, 5, 36, 50, 52, 55, 56, 58, 60, 63, 145], "with_gpu_stat": 0, "output_nam": 0, "with_pbar": 0, "with_pbar_on_it": 0, "stop_on_nan": 0, "clear_cuda_cach": 0, "also": [0, 4, 5, 15, 19, 21, 22, 36, 37, 38, 43, 44, 45, 57, 65, 68, 70, 71, 72, 84, 112, 122, 134, 147], "support": [0, 4, 9, 10, 11, 12, 13, 14, 19, 28, 36, 38, 45, 98, 124, 125, 147], "distribut": [0, 5, 8, 9, 10, 11, 12, 32, 35, 36, 37, 38, 83, 121, 130, 146, 148], "configur": [0, 4, 8, 9, 10, 11, 12, 19, 32, 35, 36, 37, 38, 41, 46, 53, 62, 83, 121, 130, 147, 148], "terminateonnan": [0, 67], "schedul": [0, 5, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 146], "modelcheckpoint": [0, 36, 72], "runningaverag": [0, 70], "update_funct": 0, "progress": [0, 41, 70, 86, 88], "bar": [0, 70, 86, 88, 130, 139, 140, 141], "distributedsampl": [0, 9, 147], "sampler": [0, 4, 8, 9, 15, 16, 18, 147], "call": [0, 4, 5, 10, 14, 19, 22, 35, 36, 38, 44, 45, 50, 65, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "set_epoch": 0, "start": [0, 13, 14, 15, 16, 19, 22, 23, 26, 27, 28, 29, 30, 31, 33, 36, 37, 41, 43, 47, 48, 49, 51, 55, 56, 58, 60, 63, 67, 69, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141, 143, 147, 148], "map": [0, 4, 13, 19, 35, 36, 37, 39, 43, 46, 47, 52, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 148], "instanc": [0, 14, 29, 36, 38, 40, 45, 52, 55, 67, 68, 78, 80, 81, 82, 89, 91, 92, 93, 94, 96, 97, 99, 100, 102, 104, 108, 112, 113, 114, 116, 117, 118, 120, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "each": [0, 3, 4, 7, 12, 13, 14, 15, 19, 25, 26, 27, 28, 29, 30, 31, 38, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "mutual": [0, 83, 102, 130], "exclus": 0, "paramschedul": [0, 1, 47, 52, 56], "lrschedul": [0, 56], "nativ": [0, 4, 10, 11, 12], "gpuinfo": 0, "pynvml": [0, 88], "12": [0, 4, 5, 13, 19, 26, 27, 35, 41, 44, 60, 65, 70, 86, 88, 89, 145, 148], "packag": [0, 4, 12, 43, 44, 46, 57, 65, 71, 84, 88], "instal": [0, 12, 38, 43, 44, 45, 46, 57, 65, 70, 71, 72, 84, 90], "associ": [0, 19, 32, 35, 38, 45, 147], "wise": [0, 147], "ad": [0, 4, 10, 11, 12, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 45, 48, 49, 50, 51, 56, 65, 73, 74, 75, 76, 78, 80, 82, 83, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 119, 121, 122, 124, 125, 147, 148], "cuda": [0, 4, 9, 10, 13, 14, 19, 27, 28, 29, 30, 40, 44, 57, 84, 113, 147, 148], "empty_cach": 0, "end": [0, 5, 19, 22, 43, 48, 49, 51, 54, 56, 57, 72, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "detail": [0, 4, 15, 17, 19, 36, 37, 44, 70, 72, 76, 84, 90, 96, 109, 110, 111, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 147], "setup_common_training_handl": 0, "mlflow": [0, 44], "mlflowlogg": [0, 34, 44], "setup_neptune_log": 0, "neptun": [0, 45, 145], "neptunelogg": [0, 45], "setup_plx_log": 0, "polyaxon": [0, 57], "polyaxonlogg": [0, 34, 57], "tensorboard": [0, 65, 88], "directori": [0, 32, 36, 37, 38, 65, 148], "tensorboardlogg": [0, 34, 65], "setup_trains_log": 0, "wa": [0, 1, 12, 19, 32, 69, 112], "renam": 0, "visdom": [0, 71, 145], "visdomlogg": [0, 34, 71], "setup_wandb_log": 0, "wandb": [0, 72, 145], "wandblogg": [0, 72], "6": [1, 4, 5, 14, 19, 36, 37, 40, 43, 54, 60, 61, 67, 68, 73, 84, 85, 89, 90, 99, 109, 110, 124, 125, 131, 140, 142, 144, 145], "fastailrfind": 1, "basictimeprofil": 1, "handlerstimeprofil": 1, "5": [1, 2, 4, 5, 12, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 36, 40, 41, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 61, 62, 63, 64, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148], "all": [2, 4, 9, 10, 11, 14, 19, 21, 31, 35, 36, 37, 38, 41, 43, 44, 45, 55, 57, 65, 70, 71, 72, 83, 85, 88, 95, 98, 103, 118, 121, 123, 130, 137, 138, 139, 146, 147], "complet": [2, 4, 5, 15, 19, 22, 23, 25, 36, 39, 41, 45, 55, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 146, 148], "from": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148], "collect": [3, 4, 7, 19, 23, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 66, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "import": [3, 4, 5, 7, 9, 10, 11, 12, 14, 16, 19, 21, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148], "ordereddict": [3, 7, 15, 19, 36, 39, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "nn": [3, 7, 10, 36, 37, 40, 41, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "ignit": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "engin": [3, 4, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148], "cluster": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "regress": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147], "util": [3, 5, 7, 14, 16, 41, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146], "evalu": [3, 7, 13, 19, 26, 27, 36, 38, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148], "doctest": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "def": [3, 4, 5, 7, 12, 14, 15, 19, 21, 22, 23, 24, 38, 39, 40, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "eval_step": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "default_evalu": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "param_tensor": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "zero": [3, 7, 19, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "requires_grad": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "default_optim": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "sgd": [3, 4, 7, 36, 41, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "lr": [3, 4, 5, 7, 19, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146], "trainer": [3, 7, 14, 19, 21, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148], "could": [3, 7, 37, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "test": [3, 7, 43, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "must": [3, 4, 7, 14, 36, 37, 43, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "hi": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "own": [3, 7, 45, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "testsetup": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "get_default_train": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "train_step": [3, 7, 19, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "default_model": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "sequenti": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "linear": [3, 7, 36, 37, 40, 41, 43, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "2": [3, 4, 5, 7, 10, 11, 12, 19, 22, 29, 32, 36, 37, 38, 40, 41, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147], "fc": [3, 7, 38, 45, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 65, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "manual_se": [3, 5, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148], "666": [3, 7, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "multipl": [4, 5, 12, 36, 37, 40, 52, 58, 60, 63, 66, 109, 147], "backend": [4, 9, 10, 11, 12, 15, 147], "nccl": [4, 12], "gloo": [4, 12], "mpi": [4, 12], "xla": [4, 9, 11, 12, 31, 35, 36], "tpu": [4, 12, 14, 31, 36, 147], "via": [4, 12, 24], "horovod": [4, 10, 11, 12], "framework": [4, 10, 12], "we": [4, 5, 9, 10, 11, 38, 43, 44, 45, 57, 59, 65, 71, 72, 84, 90, 95, 121, 122, 147], "context": [4, 10, 12, 24, 38, 43, 45, 65, 71], "manag": [4, 12, 24, 43, 45, 65, 71, 122], "simplifi": [4, 12], "code": [4, 5, 8, 12, 44, 45, 65, 147], "setup": [4, 5, 9, 12, 16, 19, 36, 37, 38, 42, 44, 45, 57, 65, 71, 72, 95, 121, 146, 147, 148], "abov": [4, 36, 90, 101, 112, 147], "method": [4, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148], "auto_model": 4, "auto_optim": 4, "auto_dataload": 4, "help": [4, 16, 38, 42, 44, 45, 57, 65, 71, 72, 146, 147], "adapt": [4, 8, 9, 10, 11, 147], "transpar": [4, 146], "wai": [4, 5, 10, 16, 43, 103, 147], "loader": 4, "exist": [4, 32, 37, 40, 43, 58, 59, 60, 61, 62, 63, 83, 116, 117, 118, 131, 142, 148], "main": [4, 5, 12, 71, 77], "py": [4, 12], "idist": [4, 9, 10, 11, 12, 36], "local_rank": [4, 12, 147], "config": [4, 12, 72], "print": [4, 5, 12, 19, 24, 36, 37, 40, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "get_rank": [4, 12, 36], "train_load": [4, 5, 9, 19, 64], "dataset": [4, 9, 19, 38, 39, 44, 45, 57, 65, 71, 72, 103], "batch_siz": [4, 5, 9, 44, 57, 73, 74, 77, 83, 84, 85, 87, 90, 95, 101, 104, 115, 119, 124, 125, 147], "32": [4, 5, 9, 19, 89], "num_work": [4, 9, 15, 71, 147], "shuffl": [4, 5, 9], "size": [4, 5, 8, 9, 10, 12, 41, 49, 63, 74, 84, 87, 89, 95, 96, 113, 115, 147], "automat": [4, 9, 13, 14, 19, 36, 38, 70, 72, 86, 88, 98, 121, 123], "resnet50": 4, "ddp": [4, 126, 127, 128, 129, 132, 133, 134, 136, 141, 143], "dp": 4, "just": [4, 5, 72], "itself": [4, 9], "accord": [4, 5, 12, 36, 95, 101, 147], "01": [4, 19, 48, 51, 52, 103, 113, 145, 148], "except": [4, 22, 32, 37, 98, 104, 124, 125, 146, 147], "overrid": [4, 11, 15, 19, 35, 58, 59, 60, 61, 62, 63, 147], "safe": 4, "behind": [4, 44, 65], "xm": [4, 11, 32, 35, 37], "optimizer_step": [4, 11], "optimizi": 4, "perform": [4, 10, 40, 70, 106, 107], "dist_config": [4, 12], "nproc_per_nod": [4, 12], "specifi": [4, 12, 19, 20, 32, 36, 37, 43, 44, 70, 71, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "launch": [4, 12], "python": [4, 12, 71, 147], "start_method": 4, "fork": 4, "jupyt": [4, 70], "notebook": [4, 70, 145], "parallel": [4, 8, 90, 147, 148], "b": [4, 12, 19, 22, 36, 82, 88, 89, 91, 92, 93, 94, 96, 102, 104, 116, 117, 118, 131, 147], "execut": [4, 5, 12, 17, 19, 20, 22, 34, 43, 56, 69, 83, 147], "exampl": [4, 5, 9, 10, 11, 12, 14, 16, 19, 21, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "cifar10": [4, 5], "found": [4, 5, 10, 19, 43, 45, 76, 84, 90, 95, 96, 109, 110, 111, 116, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143], "here": [4, 5, 19, 45, 84, 98, 116, 117, 118, 131, 147], "group": [4, 12, 48, 49, 51, 52, 53, 54, 55, 122], "initi": [4, 5, 10, 12, 14, 19, 34, 38, 40, 55, 56, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141, 143, 147, 148], "wrap": [4, 9, 10, 11, 36, 50, 52, 55, 145], "about": [4, 15, 22], "final": [4, 32, 37, 83, 130, 147], "spawn": [4, 12], "has_native_dist_support": 4, "avail": [4, 9, 10, 11, 12, 38, 44, 45, 57, 64, 65, 70, 71, 72, 83, 98, 122, 124, 125, 130, 137, 138, 139], "has_xla_support": 4, "torch_xla": [4, 31, 148], "all_gath": 4, "gather": [4, 83, 121, 130], "oper": [4, 22, 23, 70, 83, 106, 107, 130, 147], "across": [4, 14, 28, 29, 30, 31, 83, 85, 98, 103, 112, 124, 125, 130, 147], "particip": [4, 8, 12, 147], "shape": [4, 19, 38, 65, 73, 74, 77, 80, 82, 83, 84, 85, 87, 89, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 113, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148], "integ": [4, 36, 37, 38, 44, 45, 47, 54, 57, 61, 65, 71, 72, 109, 124, 147], "world_siz": [4, 9], "string": [4, 36, 38, 44, 45, 57, 65, 70, 71, 72, 78, 86, 88, 112, 121, 123, 147], "current": [4, 8, 10, 12, 15, 18, 19, 20, 22, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 69, 70, 83, 86, 88, 112, 121, 123, 130, 137, 138, 139, 147], "doe": [4, 5, 19, 37, 38, 40, 44, 45, 57, 60, 63, 65, 71, 72], "belong": [4, 38, 45, 65, 82, 124, 125], "veri": [4, 98], "11": [4, 5, 14, 19, 22, 28, 29, 30, 31, 52, 60, 68, 80, 89, 97, 99, 100, 107, 108, 113], "all_gather_tensors_with_shap": 4, "possibli": [4, 144], "differ": [4, 5, 9, 19, 35, 56, 78, 84, 98, 105, 112, 121, 123, 147], "so": [4, 19, 32, 37, 63, 112, 119, 122, 124, 125, 147], "you": [4, 13, 14, 19, 26, 27, 45, 57, 66, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "know": 4, "them": [4, 45, 66, 98, 103, 122, 124, 125, 144, 147], "beforehand": [4, 14], "your": [4, 5, 14, 38, 45, 73, 74, 76, 80, 82, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "don": [4, 98], "t": [4, 40, 69, 76, 77, 98, 112, 121], "all_gather_object": 4, "otherwis": [4, 14, 35, 36, 37, 39, 43, 55, 65, 70, 77, 85, 104, 112, 147], "quit": 4, "faster": [4, 84], "rank": [4, 8, 9, 10, 11, 32, 36, 37, 38, 83, 121, 130, 131, 142, 148], "w": [4, 70, 76, 104], "get_world_s": 4, "randn": [4, 36], "r": [4, 76, 85, 109, 110, 111, 123, 140, 141, 142], "rang": [4, 5, 15, 19, 40, 41, 43, 69, 103, 104, 113, 118, 121], "contain": [4, 5, 15, 19, 20, 25, 35, 36, 43, 46, 47, 52, 66, 67, 68, 73, 74, 75, 78, 80, 82, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 131, 142, 144], "all_reduc": 4, "op": [4, 11, 115], "sum": [4, 19, 74, 76, 98, 101, 147], "reduc": [4, 38, 45, 54, 55, 61, 65, 71, 84, 109, 110, 111, 147], "reduct": [4, 34, 38, 45, 65, 71, 147], "possibl": [4, 5, 36, 37, 45, 65, 71, 72, 104, 124, 148], "product": [4, 147], "min": [4, 55, 67, 68, 147], "max": [4, 19, 55, 67, 68, 80, 103, 118, 140, 143, 145, 147], "AND": 4, "OR": 4, "adasum": 4, "available_backend": [4, 9, 10, 11], "barrier": 4, "synchron": [4, 15, 17, 72, 146], "broadcast": [4, 10, 11, 83, 130], "src": [4, 112], "safe_mod": 4, "make": [4, 5, 9, 10, 19, 35, 36, 112], "sure": [4, 9, 10, 35], "crash": [4, 5], "non": [4, 9, 10, 11, 73, 74, 76, 78, 80, 82, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "anyth": [4, 14], "discard": 4, "mind": [4, 5, 36, 43], "mode": [4, 38, 40, 55, 76, 145], "work": [4, 36, 53, 62, 69, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 141, 143], "dens": 4, "It": [4, 5, 19, 37, 39, 40, 43, 45, 65, 71, 72, 84, 85, 86, 88, 90, 98, 112, 121, 147], "lead": [4, 64, 83, 84, 130, 137, 138, 139], "some": [4, 5, 15, 19, 49, 124, 125, 147], "slower": 4, "than": [4, 10, 12, 19, 39, 43, 45, 49, 55, 64, 70, 73, 79, 83, 84, 89, 121, 130, 137, 138, 139, 148], "without": [4, 5, 9, 12, 36, 119, 147], "y": [4, 13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 41, 73, 75, 76, 78, 80, 82, 83, 84, 85, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "t1": [4, 145], "rand": [4, 5, 41, 90, 104, 113, 121, 147], "s1": 4, "abc": 4, "3456": 4, "els": [4, 19, 36, 123], "empti": [4, 64, 70], "assert": [4, 15, 19, 86, 88, 112, 121, 123], "isinst": [4, 112], "those": [4, 5], "do": [4, 19, 20, 22, 23, 64, 69, 119], "placehold": 4, "new": [4, 11, 18, 19, 26, 27, 28, 29, 30, 31, 33, 36, 40, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 76, 79, 84, 89, 90, 98, 101, 103, 104, 109, 110, 111, 113, 116, 117, 118, 123, 124, 125, 131, 142, 147, 148], "index": [4, 12, 54, 59, 61, 67, 68, 81, 91, 93, 101, 113, 114, 119, 120, 147], "dist": [4, 12], "destroy_process_group": 4, "get_local_rank": 4, "local": [4, 9, 12, 38, 67, 68, 72], "within": [4, 8], "get_nnod": 4, "node": [4, 12, 147], "get_node_rank": 4, "get_nproc_per_nod": 4, "task": [4, 5, 38, 98, 105, 107, 147], "per": [4, 12, 19, 25, 86, 98, 103, 124, 125], "world": [4, 9, 10, 12], "hostnam": 4, "accept": [4, 10, 12, 22, 32, 36, 37, 38, 44, 45, 57, 64, 65, 70, 71, 72, 103, 104, 113, 121, 131], "timeout": 4, "timedelta": 4, "minut": 4, "30": [4, 5, 19, 22, 54, 75, 89, 145, 147], "init_method": [4, 12], "env": [4, 12, 38], "info": [4, 12, 41, 148], "torch_init": 4, "comm": 4, "hvd_init": 4, "multi": [4, 12, 60, 66, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "torchrun": [4, 12], "train_fn": 4, "c": [4, 19, 22, 44, 65, 82, 92, 94, 98, 102, 124, 125, 131], "is_avail": 4, "is_initi": 4, "f": [4, 19, 24, 40, 85, 96, 109, 110, 111, 121, 123, 124, 125, 147], "window": [4, 45, 71], "file": [4, 12, 32, 35, 36, 37, 38, 67, 68, 70, 72, 148], "tmp": [4, 5, 12, 15, 19, 36, 37], "share": [4, 45, 72], "model_nam": 4, "given": [4, 5, 10, 12, 19, 25, 36, 38, 39, 41, 43, 45, 47, 65, 67, 68, 81, 88, 90, 103, 112, 119], "serial": [4, 5, 32, 37, 147], "new_group": 4, "subset": 4, "pg_option": 4, "one_rank_first": 4, "ensur": [4, 5, 38, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "first": [4, 5, 12, 19, 25, 36, 37, 40, 47, 48, 54, 56, 74, 75, 78, 83, 87, 95, 105, 106, 107, 115, 116, 117, 118, 124, 125, 131, 142, 148], "environ": [4, 5, 33, 45, 71], "block": [4, 73, 74, 76, 80, 82, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "insid": [4, 70], "flag": [4, 19, 22, 41, 69, 71, 73, 124, 125], "global": [4, 36, 37, 38, 42, 44, 45, 57, 65, 71, 72], "download_dataset": 4, "d": [4, 12, 22, 44, 65, 116, 117, 118], "13": [4, 5, 13, 14, 19, 26, 27, 28, 29, 30, 31, 44, 48, 49, 51, 65, 67, 89, 116, 117, 118], "one_rank_onli": 4, "with_barri": 4, "decor": [4, 5, 17, 19, 147], "filter": [4, 19, 20, 22, 119, 147], "wrt": 4, "synchronis": 4, "mean": [4, 14, 19, 28, 29, 30, 31, 36, 40, 67, 68, 72, 77, 80, 82, 83, 84, 85, 92, 94, 96, 97, 98, 99, 100, 103, 104, 108, 115, 118, 120, 123, 124, 125, 129, 130, 134, 135, 136, 141, 147], "some_handl": 4, "set_local_rank": 4, "hint": 4, "up": [4, 5, 40, 45, 48, 49, 51, 56, 74, 147], "init_process_group": [4, 12], "dist_info": 4, "show_config": 4, "displai": [4, 70], "fn": [4, 73, 125], "kwargs_dict": 4, "entrypoint": 4, "top": [4, 89, 103, 114], "level": [4, 41, 98, 103, 146, 148], "pickl": [4, 147], "impos": 4, "multiprocess": 4, "through": [4, 14, 47, 48, 49, 51, 146, 147], "nnode": [4, 12], "node_rank": [4, 12], "master_addr": [4, 12], "127": 4, "master_port": [4, 12], "2222": [4, 127], "mp": [4, 13, 14, 28], "start_process": 4, "xmp": 4, "hvd_run": 4, "toler": 4, "ignor": [4, 14, 38, 43, 81, 91, 93, 98, 120, 147], "rais": [4, 6, 19, 32, 36, 37, 38, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "23": [4, 5, 19, 44, 65, 66, 86, 88, 89, 148], "8": [4, 5, 12, 19, 22, 33, 47, 50, 52, 54, 55, 56, 60, 61, 80, 89, 126, 127, 128, 129, 131, 140, 142, 147, 148], "master": [4, 12], "7": [4, 5, 11, 14, 19, 28, 29, 30, 31, 36, 38, 44, 45, 46, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 72, 73, 76, 85, 89, 95, 109, 114, 124, 125, 145], "googl": 4, "colab": 4, "core": [4, 19, 148], "xla_model": [4, 148], "sync": [4, 72], "temporari": [4, 32, 37, 38], "forc": 4, "manual": [4, 38, 57, 112], "destroi": 4, "done": [4, 5, 15, 19, 45, 65, 71, 72, 73, 85, 98, 104, 112, 121, 123, 124, 125, 147], "get_": 4, "impact": [4, 5, 70], "librari": [5, 84, 146, 147], "approxim": 5, "reproduc": [5, 16], "origin": 5, "behaviour": [5, 19, 37], "easili": 5, "deseri": 5, "its": [5, 11, 12, 15, 19, 34, 36, 37, 38, 40, 41, 44, 45, 55, 56, 57, 65, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 146], "data_load": [5, 19, 36], "create_dir": [5, 32, 36, 37], "add_event_handl": [5, 19, 24, 33, 36, 37, 38, 39, 40, 45, 47, 48, 50, 51, 52, 54, 55, 56, 66, 72], "epoch_complet": [5, 19, 22, 24, 25, 36, 37, 38, 40, 44, 45, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 147], "max_epoch": [5, 14, 15, 19, 25, 36, 37, 38, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 148], "l": [5, 79, 89, 109, 110], "checkpoint_50000": 5, "pt": [5, 15, 19, 36, 37], "restor": [5, 19, 43], "to_load": [5, 36, 40], "load": [5, 14, 19, 36, 40, 67, 68], "checkpoint_fil": 5, "load_object": [5, 36, 40], "n": [5, 19, 38, 45, 48, 65, 74, 76, 80, 82, 87, 88, 90, 97, 100, 102, 103, 108, 109, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148], "continu": [5, 19], "mnist": [5, 38, 45, 72, 145], "gener": [5, 38, 40, 41, 44, 45, 57, 58, 60, 63, 65, 71, 72, 90, 146], "rather": [5, 45, 84, 148], "difficult": 5, "achiev": [5, 145], "reli": 5, "aspect": 5, "softwar": 5, "hardwar": 5, "note": [5, 10, 19, 36, 37, 39, 45, 84, 90, 119, 125], "random": [5, 17, 148], "take": [5, 20, 36, 37, 38, 39, 44, 45, 48, 57, 58, 59, 60, 61, 62, 63, 65, 69, 71, 72, 95, 96, 98], "problem": 5, "platform": 5, "releas": 5, "seed": [5, 25, 44, 57, 148], "cudnn": [5, 15], "applic": [5, 10, 13, 14, 26, 27, 28, 29, 30, 31, 35, 36, 48, 112, 121], "enough": 5, "rerun": 5, "experi": [5, 44, 57, 65], "deterministicengin": [5, 14], "reproduciblebatchsampl": [5, 15], "control": [5, 33, 69, 109, 110, 111], "precis": [5, 13, 14, 15, 53, 62, 75, 76, 77, 79, 85, 98, 103, 105, 109, 110, 111, 119, 122, 123, 147], "roughli": 5, "look": [5, 70, 86, 88, 148], "num_epoch": [5, 15], "set_se": [5, 15], "do_single_epoch_iter": [5, 15], "dataload": [5, 9, 14, 15, 16, 18, 19, 22, 25, 43, 67, 68, 147], "made": 5, "trivial": 5, "usag": [5, 17, 36, 41, 86, 88, 112, 121, 123, 145, 146], "random_train_data_load": 5, "arang": 5, "print_train_data": 5, "tolist": [5, 19, 105, 107], "56": [5, 116, 117, 118], "40": [5, 36, 41, 54, 89, 116, 117, 118], "epoch_length": [5, 15, 19, 25, 43], "2nd": 5, "rng_state": 5, "31": [5, 19, 89], "18": [5, 19, 41, 45, 89], "16": [5, 12, 19, 68, 75, 89, 104, 113], "10": [5, 12, 19, 22, 29, 32, 36, 37, 39, 41, 43, 45, 46, 53, 54, 55, 59, 61, 62, 63, 69, 70, 72, 79, 84, 86, 88, 89, 90, 104, 116, 117, 118, 121, 124, 125, 145, 147, 148], "33": [5, 19, 44, 65, 89, 116, 117, 118], "36": [5, 89], "37": [5, 41, 89], "19": [5, 19, 22, 41, 68, 89], "9": [5, 19, 22, 37, 38, 45, 48, 50, 51, 54, 55, 58, 59, 60, 63, 65, 73, 85, 89, 109, 124, 125, 126, 127, 128, 129, 131, 140, 142, 147], "20": [5, 12, 19, 41, 54, 62, 63, 89, 116, 117, 118, 119, 123, 145, 148], "14": [5, 19, 22, 63, 89], "26": [5, 19, 89, 116, 117, 118], "29": [5, 19, 22, 89, 116, 117, 118], "35": [5, 86, 89, 116, 117, 118], "38": [5, 41, 89], "34": [5, 19, 70, 89, 116, 117, 118], "22": [5, 19, 41, 68, 89], "17": [5, 19, 41, 67, 70, 86, 88, 89], "25": [5, 19, 22, 47, 63, 89, 116, 117, 118, 133, 134, 136, 138, 143, 145], "21": [5, 19, 54, 75, 89, 148], "24": [5, 19, 22, 86, 88, 89, 116, 117, 118], "15": [5, 19, 61, 63, 89, 145], "39": [5, 41, 89], "28": [5, 19, 89, 116, 117, 118], "27": [5, 19, 89], "sampl": [5, 9, 13, 14, 26, 27, 28, 29, 30, 31, 74, 87, 89, 96, 98, 101, 103, 115, 118, 119, 124, 125], "exactli": [5, 15], "simul": [5, 46, 47, 50, 52, 53, 55, 56, 62], "previou": [5, 19, 38, 43, 44, 45, 57, 65, 71, 72], "skip": [5, 38, 40, 89], "correspond": [5, 36, 38, 44, 45, 47, 52, 57, 65, 71, 72, 88, 101, 112], "after": [5, 13, 14, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 38, 39, 40, 43, 44, 45, 55, 56, 57, 64, 65, 67, 68, 70, 71, 72, 112, 147], "datapoint": 5, "augment": 5, "middl": [5, 49, 51], "thu": 5, "remain": [5, 54, 70], "until": [5, 19, 54], "issu": [5, 8, 19, 75, 78, 83, 105, 106, 107, 116, 117, 118, 131, 142], "period": [5, 36, 37, 63, 112, 121, 123], "dure": [5, 19, 22, 32, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 52, 53, 55, 57, 58, 59, 60, 62, 63, 65, 71, 72, 75, 78, 105, 106, 107, 112, 119, 121, 123, 147], "random_train_data_gener": 5, "yield": 5, "randint": [5, 41, 147], "iteration_complet": [5, 19, 22, 33, 36, 38, 40, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 86, 88, 112, 121, 147], "user_handl": 5, "77": [5, 36, 41, 116, 117, 118, 145], "randomli": 5, "intend": 5, "alter": 5, "produc": [5, 9, 15, 38, 44, 45, 57, 65, 71, 72], "keep_random_st": 5, "numpi": [5, 17, 62, 145, 148], "therefor": [5, 147], "deal": 5, "describ": 5, "notcomputableerror": [6, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 146, 147], "cannot": [6, 43, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "auto": [8, 9, 10, 11, 146], "num_replica": 8, "proxi": 8, "http": [8, 14, 19, 43, 45, 58, 60, 63, 71, 76, 102, 121], "github": [8, 14, 19, 43, 71], "com": [8, 19, 43, 71], "23430": 8, "issuecom": 8, "562350407": 8, "assum": [8, 77, 147], "constant": [8, 40], "helper": [9, 10, 11, 17, 18, 34, 36, 38, 41, 42, 44, 45, 52, 56, 57, 65, 71, 72, 74, 86, 87, 88, 115, 121, 146, 148], "follow": [9, 10, 19, 21, 25, 36, 38, 40, 44, 45, 57, 65, 71, 72, 73, 74, 79, 84, 85, 87, 98, 101, 103, 112, 113, 115, 119, 121, 124, 125, 147], "scale": [9, 14, 29, 43], "equal": [9, 36, 37, 39, 54, 69, 103, 119, 148], "worker": [9, 71, 148], "nproc": 9, "anoth": [9, 36, 37, 38, 40, 42, 44, 45, 53, 57, 62, 65, 71, 72, 112, 121, 123], "distributedproxysampl": 9, "pin_memori": [9, 147], "custom": [9, 13, 14, 19, 21, 22, 26, 27, 28, 29, 30, 31, 68, 70, 121, 146], "compat": [9, 124, 125, 132], "iterabledataset": 9, "mpdeviceload": 9, "_mpdeviceload": 9, "distribt": [9, 10], "train_dataset": 9, "drop_last": 9, "sync_bn": 10, "send": [10, 14, 19, 71], "distributeddataparallel": [10, 14, 36, 40, 147], "dataparallel": [10, 36, 40], "variabl": [10, 45, 71, 74, 87, 115, 147], "convert_sync_batchnorm": 10, "nvidia": [10, 14], "apex": [10, 14, 30], "batchnorm": 10, "convers": 10, "amp": [10, 13, 14, 27, 29], "opt_level": 10, "goal": 11, "distributedoptim": 11, "launcher": [12, 146, 148], "spawn_kwarg": 12, "child": 12, "standalon": [12, 38], "script": 12, "horovodrun": 12, "total": [12, 19, 25, 41, 67, 68, 69], "machin": 12, "mandatori": 12, "tcp": 12, "ip": 12, "address": 12, "port": [12, 71], "np": [12, 53, 62, 145], "3344": 12, "h": [12, 82, 102, 104], "hostname1": 12, "hostname2": 12, "both": [12, 101, 124, 125, 131], "some_fil": 12, "23456": 12, "15000": 12, "func": [12, 17, 19, 147, 148], "posit": [12, 57, 65, 72, 73, 76, 85, 87, 98, 101, 124, 125, 147], "model_transform": [13, 14, 26, 27, 28, 29, 30, 31], "lambda": [13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 37, 38, 40, 41, 43, 44, 45, 57, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "output_transform": [13, 14, 19, 26, 27, 28, 29, 30, 31, 34, 38, 41, 43, 44, 45, 57, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "amp_mod": [13, 14], "model_fn": [13, 14, 26, 27, 28, 29, 30, 31], "factori": [13, 14, 26, 27, 28, 29, 30, 31], "convert": [13, 14, 26, 27, 28, 29, 30, 31, 84, 90, 144, 148], "predict": [13, 26, 27, 64, 70, 73, 75, 78, 80, 82, 83, 84, 85, 90, 92, 94, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "y_pred": [13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 41, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "assign": [13, 14, 26, 27, 28, 29, 30, 31, 84, 90, 119], "which": [13, 19, 20, 22, 26, 27, 32, 34, 36, 37, 38, 40, 42, 43, 44, 45, 48, 49, 51, 57, 62, 65, 69, 70, 71, 72, 73, 74, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 147], "fit": [13, 26, 27], "expect": [13, 26, 27, 37, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "cast": [13, 14], "float16": [13, 14, 113], "infer": [13, 26, 27, 101], "batch_pr": [13, 26, 27], "mix": [13, 14, 22], "transform": [13, 14, 26, 27, 28, 29, 30, 31, 36, 37, 38, 43, 44, 45, 57, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "determinist": [14, 15, 16, 17, 18, 146], "scaler": [14, 29], "gradient_accumulation_step": [14, 28, 29, 30, 31], "form": [14, 28, 29, 30, 31, 45, 48, 58, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "item": [14, 19, 28, 29, 30, 31, 36, 41, 83, 103, 112, 123, 147], "gradscal": [14, 29], "accumul": [14, 28, 29, 30, 31, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "convert_tensor": [14, 146, 148], "tqdm_logger": 14, "progressbar": [14, 70, 86, 88], "prepare_batch_fn": 14, "directli": [14, 36, 70, 147], "output_transform_fn": 14, "actual": [14, 20, 37, 73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "behavior": 14, "want": [14, 66, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "pbar": [14, 70], "attribut": [14, 19, 22, 25, 36, 37, 38, 40, 41, 44, 45, 48, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 121, 147], "finish": 14, "wrapper": [14, 20, 50, 55, 72, 84], "io": 14, "html": [14, 58, 60, 63, 76, 102], "process_funct": [15, 19, 25, 64, 66, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "deriv": [15, 19, 35], "dataflow": [15, 17, 67, 68, 146], "seed_offset": 15, "resum": [15, 19, 40, 69, 146], "setup_saved_rng_st": 15, "replac": [15, 18, 36, 37, 39, 70, 121], "setup_sampl": 15, "benchmark": 15, "restart": [15, 19], "handl": [15, 19, 24, 36, 38, 40, 44, 45, 57, 65, 71, 72, 73, 74, 75, 76, 78, 80, 82, 86, 87, 89, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142, 147, 148], "state_dict_user_kei": [15, 19], "append": [15, 19, 64], "alpha": [15, 19, 38, 44, 45, 57, 65, 70, 71, 72, 109, 110, 111, 112], "beta": [15, 19, 38, 44, 45, 57, 65, 70, 71, 72, 77, 85, 123, 147], "init_user_valu": [15, 19], "save_engin": [15, 19], "batch_sampl": 16, "start_iter": 16, "batchsampl": [16, 18], "update_dataload": 16, "rewind": 16, "setup_batch_indic": 16, "intact": 17, "new_batch_sampl": 18, "emit": 19, "goe": [19, 47, 48, 49, 51], "reset": [19, 36, 39, 43, 64, 69, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141, 143, 146, 148], "last_event_nam": 19, "trigger": [19, 20, 22, 41, 62, 67, 68, 70, 147], "v0": [19, 22, 37, 57], "interrupt": [19, 22], "featur": [19, 84, 89, 90, 96, 102, 116, 117, 118, 147], "behav": 19, "certain": [19, 147], "corner": 19, "compar": [19, 84], "interrupt_resume_en": 19, "basic": 19, "criterion": [19, 21, 41, 89, 95], "target": [19, 24, 64, 80, 83, 95, 97, 98, 99, 100, 103, 104, 108, 113, 114, 119, 121, 124, 130, 131, 137, 138, 139, 144], "zero_grad": 19, "backward": [19, 21, 124, 125], "update_model": 19, "log_train": 19, "batch_loss": 19, "param_group": [19, 38, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 65, 71, 72], "10874069479016124": 19, "1700": 19, "4217900575859437": 19, "accuraci": [19, 36, 38, 44, 45, 55, 57, 65, 70, 71, 72, 95, 98, 112, 114, 121, 122, 124, 125, 147], "predict_on_batch": 19, "eval": [19, 40, 84], "no_grad": [19, 84], "val_acc": [19, 35], "val_dataload": 19, "imag": [19, 82, 84, 90, 92, 94, 102, 103, 104, 113, 144], "std": [19, 67, 68], "compute_mean_std": 19, "reshap": 19, "dtype": [19, 74, 76, 81, 85, 87, 91, 93, 103, 104, 113, 124, 125], "float64": [19, 74, 76, 81, 85, 87, 91, 93, 113, 124, 125], "mean2": 19, "compute_engin": 19, "img_mean": 19, "img_mean2": 19, "sqrt": [19, 84, 108, 140], "len": [19, 95], "500": [19, 38, 44, 45, 57, 65, 71, 72], "event_nam": [19, 24, 25, 34, 36, 37, 38, 44, 45, 57, 65, 70, 71, 72, 86, 88], "fire": [19, 22], "valid": [19, 34, 36, 38, 39, 40, 41, 44, 45, 57, 65, 70, 71, 72, 76, 86, 88, 109, 110, 111, 112, 113, 121, 123, 147], "register_ev": [19, 21, 34], "invok": 19, "No": 19, "restrict": [19, 83], "signatur": [19, 115], "bound": [19, 43, 48, 49, 51, 103, 144], "removableeventhandl": [19, 34, 70], "exception_rais": [19, 22], "print_epoch": [19, 24], "events_list": 19, "execute_someth": 19, "thing": 19, "relat": 19, "becom": [19, 22, 89, 118], "flexibl": [19, 22], "allow": [19, 22, 82, 92, 94, 102], "fire_ev": [19, 21], "thei": [19, 95, 101, 113, 144], "been": [19, 37, 38, 70], "regist": [19, 24, 38, 42, 44, 45, 57, 65, 69, 71, 72], "exchang": 19, "dynam": 19, "among": 19, "has_event_handl": 19, "check": [19, 66, 121, 123, 147], "search": [19, 43], "signal": [19, 104], "check_input_data": 19, "call_interrupt": 19, "4rd": 19, "500th": 19, "499": 19, "shortcut": [19, 34], "event_to_attr": 19, "let": [19, 36, 95, 104, 121], "point": [19, 118], "open": [19, 70, 148], "door": 19, "loop": [19, 41], "even": [19, 22], "eventenum": [19, 22, 88], "being": [19, 73, 74, 75, 78, 80, 82, 86, 87, 89, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "below": [19, 22, 69, 73, 75, 83, 85, 95, 105, 106, 107, 121, 124, 125, 145, 147], "customev": [19, 22], "foo_ev": [19, 22], "bar_ev": [19, 22], "bwd_event": 19, "opt_ev": 19, "trigger_custom_ev": 19, "do_foo_op": 19, "do_bar_op": 19, "enum": [19, 20, 24], "time_iteration_start": 19, "time_iteration_complet": 19, "tbptt_event_to_attr": 19, "time_iter": 19, "access": [19, 38, 44, 45, 57, 65, 71, 72, 121], "remove_event_handl": 19, "At": [19, 36], "timer": [19, 33], "time": [19, 25, 33, 36, 38, 41, 43, 44, 45, 57, 65, 67, 68, 69, 71, 72, 146, 148], "alreadi": [19, 36, 38, 40, 58, 59, 60, 61, 62, 63, 70, 103, 144], "kept": [19, 36, 37], "NOT": 19, "repeat": [19, 47], "again": [19, 40], "taken": [19, 47, 98, 119, 148], "account": [19, 58, 59, 60, 61, 62, 63, 98], "count": [19, 39, 98, 101, 124, 125, 131], "determin": [19, 38, 45, 65, 89, 98, 112, 119, 141], "stopiter": 19, "preprocess": 19, "iteration_start": [19, 22, 23, 38, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 65, 67, 69, 71, 72, 147], "latter": [19, 95, 98, 112, 121], "usual": [19, 48, 49, 51, 95], "switch_batch": 19, "preprocess_batch": 19, "begin": [19, 92, 96, 102, 131], "weight": [19, 34, 36, 38, 40, 45, 65, 71, 72, 76, 77, 78, 85, 98, 124, 125], "set_data": 19, "next": [19, 22, 47, 48, 49, 51, 54, 55, 61, 118], "processing_funct": 19, "newli": [19, 53, 62], "modifi": [19, 76], "switch": 19, "data1": [19, 36], "data2": 19, "switch_iter": 19, "5000": [19, 74, 85, 91, 93, 124, 125], "onc": [19, 20, 22, 60, 62, 73, 76, 79, 80, 82, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 104, 109, 112, 113, 114, 115, 119, 121, 122, 123, 125, 131, 142, 147], "switch_dataload": 19, "termin": [19, 22, 33], "skip_complet": [19, 22], "unless": [19, 22, 38], "2669": 19, "terminate_epoch": [19, 22], "skip_epoch_complet": [19, 22], "terminate_single_epoch": [19, 22], "epoch_start": [19, 22, 64, 67, 147], "event_filt": [20, 22], "whether": [20, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "touch": 20, "boolean": 20, "result": [20, 43, 67, 68, 83, 84, 86, 88, 116, 117, 118, 121, 122, 123, 130, 147], "alwai": [20, 36], "static": [20, 36, 67, 68, 119], "before_and_after_event_filt": 20, "default_event_filt": 20, "every_before_and_after_event_filt": 20, "every_event_filt": 20, "member": [20, 98, 124, 144], "once_event_filt": 20, "calcul": [21, 73, 76, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "backpropev": 21, "backward_start": 21, "backward_complet": 21, "optim_step_complet": 21, "function_before_backprop": 21, "built": [22, 95], "get_batch_start": 22, "get_batch_complet": 22, "dataloader_stop_iter": 22, "encount": [22, 119], "tabl": [22, 112, 124], "illustr": [22, 147], "variou": [22, 34, 41, 98, 145, 147], "custom_event_filt": 22, "50": [22, 46, 53, 70, 79, 86, 88, 89, 116, 117, 118, 145], "call_on_special_ev": 22, "someth": [22, 23, 64, 123], "call_everi": 22, "10th": [22, 54], "call_onc": 22, "50th": [22, 86], "call_befor": 22, "call_every_itr_before_aft": 22, "depend": [22, 84, 113, 123], "combin": [22, 147], "call_on_ev": [22, 23], "stack": 23, "__or__": 23, "weakref": 24, "statement": [24, 34], "protocol": 24, "callableeventwithfilt": [24, 25, 34, 40, 62, 70, 147], "eventslist": [24, 34, 40, 62], "unregist": 24, "get_event_attrib_valu": [25, 38, 44, 45, 57, 65, 71, 72], "update_fn": [28, 29, 30, 31, 45, 65, 71], "dirnam": [32, 37, 38], "atom": [32, 37], "require_empti": [32, 37, 72], "save_on_rank": [32, 36, 37], "destin": [32, 37], "guarante": [32, 37, 70], "damag": [32, 37], "doesnt": 32, "limit_sec": 33, "28800": 33, "session": [33, 38], "limit": [33, 147], "gracefulli": 33, "exce": 33, "maximum": [33, 79, 96, 103, 104, 133], "second": [33, 67, 69, 86, 144, 148], "hour": 33, "basehandl": 34, "log_handl": [34, 38, 44, 45, 57, 65, 71, 72, 88], "forward": [34, 84, 121], "attach_opt_params_handl": [34, 38, 44, 45, 57, 65, 70, 71, 72], "optimizerparamshandl": [34, 38, 44, 45, 57, 65, 71, 72], "miss": [34, 98], "attach_output_handl": [34, 38, 44, 45, 57, 65, 71, 72], "outputhandl": [34, 38, 44, 45, 57, 65, 71, 72, 88], "baseoptimizerparamshandl": 34, "param_nam": [34, 38, 44, 45, 46, 47, 48, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 71, 72, 145], "baseoutputhandl": 34, "global_step_transform": [34, 36, 37, 38, 42, 44, 45, 57, 65, 71, 72], "state_attribut": [34, 38, 41, 44, 45, 57, 65, 70, 71, 72], "baseweightshandl": 34, "whitelist": [34, 38, 45, 65], "baseweightsscalarhandl": 34, "norm": [34, 38, 45, 65, 71, 99], "scalar": [34, 38, 44, 45, 46, 47, 54, 55, 57, 58, 59, 60, 61, 63, 65, 70, 71, 72, 83, 147], "__call__": [35, 59], "overridden": [35, 38], "treat": 35, "slightli": 35, "stuck": [35, 36], "abstract": [35, 46, 49, 53, 62, 121], "metadata": 35, "addition": 35, "basenam": 35, "epoch_checkpoint": 35, "score_nam": [35, 36, 37, 38, 45, 72], "prioriti": [35, 36], "higher": [35, 39, 116], "6554435": 35, "filename_prefix": [36, 37, 38, 45, 72], "score_funct": [36, 37, 38, 39, 45, 72], "filename_pattern": [36, 37], "include_self": [36, 37], "greater_or_equ": [36, 37], "cloud": [36, 72], "storag": [36, 37, 38, 75, 77, 78, 83, 106, 107, 137, 138, 139], "write": 36, "avoid": [36, 71, 80, 99, 140, 148], "alon": 36, "get_default_score_fn": 36, "older": [36, 37], "desir": [36, 37, 38, 44, 45, 57, 65, 71, 72], "global_step": [36, 37, 38, 44, 45, 57, 65, 71, 72], "global_step_from_engin": [36, 37, 38, 44, 45, 57, 65, 71, 72], "pattern": [36, 37], "render": [36, 37, 70], "would": [36, 37, 44, 55, 65, 103, 123, 147], "includ": [36, 37, 38, 41, 45, 65, 77, 79], "latest": [36, 37], "instanti": [36, 37], "structur": [36, 113], "suffix": 36, "ext": [36, 148], "constructor": 36, "compos": 36, "neg_val_loss": 36, "_neg_val_loss": 36, "1234": 36, "templat": 36, "30000": 36, "94": 36, "warn": [36, 40, 75, 78, 83, 105, 106, 107, 116, 117, 118, 131, 142, 148], "collid": 36, "overwritten": 36, "newer": 36, "expos": 36, "last_checkpoint": [36, 37], "checkpoint_12345": 36, "friendli": 36, "zeroredundancyoptim": 36, "wrong": [36, 147], "checkpoint_it": 36, "checkpoint_": 36, "gst": 36, "checkpoint_7000": 36, "checkpoint_8000": 36, "checkpoint_5": 36, "checkpoint_6": 36, "best_model_9_accuraci": 36, "best_model_10_accuraci": 36, "78": [36, 41, 145], "customis": 36, "alia": 36, "field": 36, "best_acc_scor": 36, "best_model_handl": 36, "val_accuraci": 36, "neg_loss_scor": 36, "val_neg_loss": 36, "filepath": [36, 148], "model_state_dict": 36, "opt_state_dict": 36, "strict": 36, "enabl": [36, 41, 76], "part": [36, 43], "pretrain": [36, 84, 90], "transfer": 36, "tempfil": 36, "pathlib": 36, "temporarydirectori": 36, "tmpdirnam": 36, "myprefix": [36, 37], "1e": [36, 46, 53, 80, 99, 123, 140, 145], "checkpoint_fp": 36, "myprefix_checkpoint_40": 36, "obj": 36, "pair": [36, 105, 131], "reload_object": 36, "load_kwarg": 36, "filename_compon": 36, "compon": 36, "global_st": 36, "independ": [36, 53, 62, 89], "fold": 36, "data0": 36, "setup_filename_pattern": 36, "with_prefix": 36, "with_scor": 36, "with_score_nam": 36, "with_global_step": 36, "least": [36, 66, 89, 147], "activ": [36, 75, 105, 106, 107, 121], "consid": [37, 39, 82, 98, 102, 103, 123, 124, 125], "show": [37, 40, 43, 71, 77, 95, 121, 147], "further": 37, "There": [37, 40], "counter": [37, 39, 69, 147], "action": 37, "step_numb": 37, "parent": 37, "pariti": 37, "o": [37, 45], "mymodel": [37, 121], "sort": [37, 98], "listdir": 37, "myprefix_mymodel_20": 37, "myprefix_mymodel_30": 37, "text": [38, 40, 73, 76, 77, 80, 84, 85, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 108, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143], "plot": [38, 43, 44, 45, 46, 53, 57, 62, 64, 65, 70, 71, 72, 119, 145], "upload": 38, "solut": 38, "choic": 38, "server": [38, 45, 71], "s3": 38, "bucket": 38, "pip": [38, 43, 44, 45, 46, 57, 65, 71, 72], "init": [38, 72], "project_nam": [38, 45], "integr": [38, 45, 72], "task_nam": 38, "cnn": [38, 45, 72], "nll": [38, 39, 44, 45, 57, 65, 70, 71, 72], "train_evalu": [38, 44, 45, 57, 64, 65, 71, 72, 121], "weightsscalarhandl": [38, 45, 65, 71], "format": [38, 44, 45, 57, 65, 70, 71, 72, 78, 80, 82, 89, 92, 94, 96, 97, 99, 100, 102, 103, 104, 108, 113, 114, 116, 117, 118, 119, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "0d": [38, 44, 45, 57, 65, 70, 71, 72], "1d": [38, 44, 45, 57, 65, 70, 71, 72, 74, 87, 115], "classmethod": [38, 46, 47, 50, 52, 53, 55, 62], "bypass_mod": 38, "bypass": 38, "github_act": 38, "set_bypass_mod": 38, "refer": [38, 43, 45, 65, 72, 76, 84, 90, 109, 110, 111, 134, 135, 136], "doc": [38, 44, 45, 58, 60, 63, 65, 70, 147], "offlin": 38, "outsid": 38, "commun": 38, "get_task": 38, "report": [38, 77, 88], "equival": [38, 44, 45, 57, 65, 71, 72, 98, 112, 124, 125], "current_task": 38, "Will": 38, "folder": 38, "clearmlsav": 38, "output_uri": 38, "artifact": 38, "runtim": 38, "locat": 38, "123": [38, 44, 65, 70], "acc": [38, 122], "validation_evalu": [38, 45], "event_complet": 38, "get_local_copi": 38, "download": [38, 45], "gradshisthandl": [38, 65], "histogram": [38, 65], "titl": [38, 44, 45, 57, 65, 71, 72, 145], "submodul": [38, 45, 65], "along": [38, 44, 45, 57, 65, 70, 71, 72], "fulli": [38, 45, 65, 123], "qualifi": [38, 39, 45, 65], "bia": [38, 45, 65, 128, 136], "has_shape_2_1": [38, 65], "p": [38, 45, 65, 76, 85, 90, 92, 94, 96, 98, 99, 102, 109, 110, 111, 123, 140, 142], "gradsscalarhandl": [38, 45, 65, 71], "upon": [38, 45, 65, 122], "ones": [38, 45, 65, 84, 103], "permit": [38, 45, 65], "Then": [38, 40, 45, 47, 54, 55, 62, 65], "layer": [38, 45, 65], "is_in_fc_lay": [38, 45, 65], "prepar": [38, 44, 45, 57, 65, 71, 72], "loss1": [38, 44, 45, 57, 65, 71, 72], "another_loss": [38, 44, 45, 57, 65, 71, 72], "loss2": [38, 44, 45, 57, 65, 71, 72], "label": [38, 44, 45, 53, 57, 62, 65, 71, 72, 77, 98, 101, 103, 114, 116, 117, 118, 119, 124, 125, 145], "validation_set": [38, 44, 45, 57, 65, 71, 72], "weightshisthandl": [38, 65], "conv": [38, 65], "weight_selector": [38, 65], "has_bias_in_nam": [38, 45, 65], "custom_event_nam": [38, 42, 44, 45, 57, 65, 71, 72], "early_stop": 39, "min_delta": 39, "cumulative_delta": 39, "minimum": [39, 43, 104], "less": [39, 71, 89], "val_loss": 39, "best_scor": 39, "ema_handl": 40, "momentum": [40, 145], "0002": 40, "momentum_warmup": 40, "warmup_it": 40, "handle_buff": 40, "exponenti": [40, 43, 58], "ema": 40, "smooth": [40, 43, 76], "theta_": 40, "cdot": [40, 76, 80, 138], "onlin": [40, 84, 147], "th": [40, 52, 82, 101, 102, 112, 121, 123], "retriev": [40, 62, 112, 122], "ema_momentum": 40, "warmup": 40, "phase": [40, 56], "left": [40, 76, 85, 89, 102, 103, 104, 131, 133, 134, 137, 138, 139], "right": [40, 76, 85, 89, 102, 103, 104, 131, 133, 134, 137, 138, 139], "buffer": 40, "three": [40, 55, 147], "ema_train": 40, "ema_model": 40, "track": [40, 44, 45, 57], "recommend": [40, 70], "build": [40, 77], "train_step_fn": 40, "resume_from": 40, "ckpt_handler": 40, "print_ema_momentum": 40, "val_step_fn": 40, "get_val_step_fn": 40, "run_valid": 40, "val_data_load": 40, "warm": [40, 48, 49, 51, 56], "linearli": [40, 47, 48, 49, 51, 54, 61], "002": 40, "afterward": 40, "step_fn": 40, "build_gener": 40, "discrimin": 40, "build_discrimin": 40, "gen_handl": 40, "disc_handl": 40, "get_step_fn": 40, "gen_ema_momentum": 40, "dis_ema_momentum": 40, "disc_ema_momentum": 40, "warn_if_exist": 40, "suppress": 40, "messag": [40, 41, 70, 148], "choos": 40, "uniqu": 40, "thrown": 40, "fbresearch": 41, "fbresearchlogg": 41, "delimit": 41, "show_output": 41, "research": 41, "purpos": [41, 64, 147], "design": 41, "system": 41, "stat": [41, 67, 98, 124, 125, 131, 142], "memori": [41, 64, 83, 88, 130, 137, 138, 139, 148], "create_supervised_train": [41, 64, 70], "setup_logg": [41, 146, 148], "opt": 41, "001": [41, 48, 50, 51, 52, 145], "crossentropyloss": 41, "total_loss": 41, "2024": 41, "04": [41, 116, 117, 118], "05": [41, 43, 51, 54, 55, 56, 114], "47": [41, 89, 116, 117, 118], "843": 41, "eta": 41, "00": [41, 86, 88, 148], "00100": 41, "5999": 41, "0008": 41, "prep": 41, "9297": 41, "60": [41, 116, 117, 118], "9985": 41, "80": [41, 79, 103, 116, 117, 118, 145], "9785": 41, "6211": 41, "5981": 41, "0009": 41, "9013": 41, "59": [41, 88], "9811": 41, "79": [41, 75, 88], "9434": 41, "99": [41, 62], "6116": 41, "5972": 41, "8753": 41, "58": 41, "9657": 41, "9112": 41, "98": [41, 56, 112, 145], "6035": 41, "5969": 41, "8516": 41, "57": [41, 116, 117, 118], "9521": 41, "8816": 41, "97": 41, "5966": 41, "frequenc": 41, "select": [41, 70, 103, 104], "log_complet": 41, "log_epoch_complet": 41, "log_epoch_start": 41, "log_everi": 41, "regular": 41, "lr_finder": 43, "finder": [43, 146], "boundari": 43, "manner": [43, 112], "valuabl": 43, "well": [43, 102, 116, 117, 118, 123, 124, 125], "network": [43, 48, 119], "what": [43, 70], "trainer_with_lr_find": 43, "get_result": [43, 67, 68], "matplotlib": [43, 46, 62, 145], "suggest": [43, 48], "lr_suggest": 43, "exit": 43, "cyclic": [43, 48, 49, 51, 145], "neural": [43, 48, 146], "arxiv": 43, "org": [43, 45, 58, 60, 63, 76, 121], "ab": [43, 55, 126, 145], "1506": 43, "01186": 43, "fastai": 43, "lr_find": 43, "apply_suggested_lr": 43, "num_it": 43, "start_lr": 43, "end_lr": 43, "step_mod": 43, "exp": [43, 76, 82, 90, 96, 129, 130], "smooth_f": 43, "diverge_th": 43, "lower": [43, 103], "upper": 43, "factor": [43, 55, 58, 60, 63, 85, 112, 145], "best_loss": 43, "find": [43, 84], "numer": 43, "curv": [43, 98, 106], "skip_start": 43, "skip_end": 43, "log_lr": 43, "display_suggest": 43, "ax": 43, "trim": 43, "logarithm": 43, "red": 43, "dot": 43, "pre": 43, "plt": [43, 46, 53, 62, 145], "subplot": [43, 145], "figur": [43, 46, 145], "savefig": 43, "jpg": 43, "tracking_uri": 44, "client": [44, 57], "uri": 44, "log_param": 44, "__class__": [44, 57], "__name__": [44, 57], "__version__": [44, 57], "get_device_nam": [44, 57], "runnabl": [44, 65], "evalut": [44, 65], "dict_valu": [44, 65], "111": [44, 65], "234": [44, 65], "list_valu": [44, 65], "aa": [44, 65], "bb": [44, 65], "44": [44, 65, 89], "tuple_valu": [44, 65], "112": [44, 65], "113": [44, 65], "aaa": [44, 65], "bbb": [44, 65], "log_metr": 44, "mlflow_tracking_uri": 44, "api_token": 45, "anonym": 45, "npt_logger": 45, "experiment_nam": 45, "param": [45, 46, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 63], "minst": [45, 72], "project": [45, 72], "api": [45, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125, 146], "token": [45, 86, 109, 110, 111], "ai": [45, 146], "menu": 45, "neptune_api_token": 45, "secur": 45, "workspac": 45, "tom": 45, "classif": [45, 77, 82, 83, 92, 94, 98, 102, 105, 107, 119], "neptune_project": 45, "init_run": 45, "leav": 45, "out": [45, 119, 147], "explor": 45, "app": 45, "neptunesav": 45, "validation_accuraci": [45, 72], "create_supervised_evalu": [45, 64, 95, 121, 147], "neptuneserv": 45, "close": [45, 57, 58, 65, 70, 71, 72, 118], "ui": 45, "pytor1": 45, "chart": 45, "neptuneml": 45, "param_schedul": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63], "save_histori": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "param_histori": [46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "get_param": [46, 47, 48, 50, 51, 52, 54, 55, 58, 59, 60, 61, 63], "plot_valu": 46, "num_ev": [46, 47, 50, 52, 53, 55, 62, 145], "scheduler_kwarg": [46, 53, 55, 62], "line": 46, "line2d": 46, "pylab": [46, 145], "figsiz": [46, 145], "linearcyclicalschedul": [46, 47, 53], "start_valu": [46, 48, 49, 51, 53, 145], "end_valu": [46, 48, 49, 51, 53, 145], "cycle_s": [46, 48, 49, 51, 53, 145], "simulate_valu": [46, 47, 50, 52, 53, 55, 62, 145], "event_index": [46, 47, 50, 52, 53, 55, 59, 62], "durat": [47, 48, 49, 51, 56, 145], "concat": [47, 145], "default_train": [47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 112], "scheduler_1": [47, 48, 52, 145], "scheduler_2": [47, 48, 52, 145], "cosineannealingschedul": [47, 52], "anneal": [47, 48, 145], "cycl": [47, 48, 49, 51, 52], "indefinit": 47, "combined_schedul": 47, "print_lr": [47, 48, 50, 51, 52, 54, 56], "75": [47, 79, 83, 97, 99, 100, 104, 108, 113, 114, 124, 125, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145], "8828": 47, "6000": 47, "3171": 47, "value_0": 47, "value_1": 47, "cycle_mult": [48, 49, 51, 145], "start_value_mult": [48, 49, 51, 145], "end_value_mult": [48, 49, 51, 145], "warmup_dur": [48, 49, 51, 56], "param_group_index": [48, 49, 51, 52, 53, 54, 55], "half": [48, 51], "cosin": [48, 80, 145], "wave": [48, 143], "smith17": 48, "ratio": [48, 49, 51, 104], "iteration_": [48, 49, 51], "cosineann": [48, 52], "1464": [48, 52], "4999": [48, 52, 77], "8535": [48, 52], "01464": [48, 52], "04999": [48, 52], "08535": [48, 52], "smith": 48, "lesli": 48, "vision": [48, 144], "wacv": 48, "2017": [48, 84], "ieee": 48, "winter": 48, "confer": 48, "use_legaci": 50, "steplr": [50, 63, 145], "torch_lr_schedul": [50, 56], "step_siz": [50, 62, 63, 145], "gamma": [50, 56, 58, 59, 60, 62, 63, 145], "010": 50, "monoton": 51, "kwagr": 51, "adjust": [51, 113], "back": [51, 65], "descend": 51, "ascend": 51, "togeth": [51, 147], "scheduler1": [51, 54], "scheduler2": [51, 54], "histori": [52, 55, 64, 83, 147], "scheduler_0_valu": 52, "scheduler_1_valu": 52, "scheduler_i_valu": 52, "whatev": [53, 62, 72], "absolut": [53, 62, 97, 127, 129, 130, 133, 134, 137, 138, 139], "lr_valu": [53, 145], "arrai": [53, 62, 131, 145], "xlabel": [53, 62, 145], "ylabel": [53, 62, 145], "legend": [53, 62, 71, 145], "milestones_valu": [54, 61], "piecewis": [54, 61], "mileston": [54, 60, 61], "45": [54, 89], "decreas": [54, 55], "20th": 54, "jump": 54, "21st": 54, "30th": 54, "till": 54, "third": [54, 147], "fifth": 54, "milestones_values1": 54, "08": [54, 80, 140], "02": [54, 103, 148], "milestones_values2": 54, "09": 54, "reducelronplateau": 55, "whose": [55, 103, 124, 144], "monitor": 55, "paramat": 55, "unit": [55, 119], "most": [55, 103, 147], "multipli": 55, "threshold_mod": [55, 145], "threshold": [55, 73, 79, 85, 98, 103, 105, 107, 124, 125, 145], "rel": [55, 130, 134, 139], "metric_valu": [55, 145], "set_metric_v": 55, "trigger_ev": 55, "init_lr": [55, 145], "warmup_start_valu": 56, "warmup_end_valu": 56, "output_simulated_valu": 56, "fill": 56, "concatschedul": 56, "normal": [56, 101, 113, 119, 136, 147], "exponentiallr": [56, 58, 145], "098": 56, "09604": 56, "09411": 56, "09223": 56, "09039": 56, "plx_logger": 57, "log_input": 57, "state_param_schedul": [58, 59, 60, 61, 62, 63], "initial_valu": [58, 59, 60, 62, 63], "create_new": [58, 59, 60, 61, 62, 63], "decai": [58, 60, 63, 112], "stabl": [58, 60, 63], "81": [58, 59, 60, 63, 145], "729": [58, 59, 60, 63], "6561": [58, 59, 60, 63], "print_param": [58, 59, 60, 61, 63], "7290": [58, 59, 60, 63], "lambda_obj": 59, "lambdast": 59, "__init__": [59, 84, 116, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "self": [59, 64, 84, 121, 147], "event_endex": 59, "5904": [59, 63], "5314": 59, "4782": 59, "4304": 59, "reach": 60, "multisteplr": 60, "96": [61, 116, 117, 118], "92": [61, 116, 117, 118], "88": [61, 116, 117, 118], "8400": 61, "76": 61, "72": [61, 116, 117, 118], "68": [61, 116, 117, 118], "64": [61, 70], "pyplot": [62, 145], "step_state_param_valu": 62, "stepstateschedul": 62, "step_scheduled_param": 62, "visual": [64, 145], "potenti": [64, 83, 130, 137, 138, 139], "ram": [64, 83, 130, 137, 138, 139], "eo": 64, "log_training_result": [64, 68], "y_pred0": 64, "y0": 64, "y_pred1": 64, "y1": [64, 103, 144], "under": [64, 86, 88, 98, 106, 121, 123], "tb_logger": [65, 88], "log_dir": 65, "tb_log": 65, "favor": [65, 112], "tensorboardx": [65, 145], "fall": 65, "summarywrit": 65, "v1": 65, "writer": 65, "add_scalar": 65, "terminate_on_nan": 66, "nan": [66, 87], "infinit": 66, "time_profil": [67, 68], "profil": [67, 68, 146], "train_updat": [67, 68], "log_intermediate_result": [67, 68], "print_result": [67, 68], "write_result": [67, 68], "path_to_dir": [67, 68], "csv": [67, 68], "aggreg": [67, 68, 87], "157": 67, "46292": 67, "01452": 67, "1501": 67, "26905": 67, "07730": 67, "01258": 67, "11384": 67, "00008": 67, "1935": 67, "28461": 67, "1551": 67, "00300": 67, "02693": 67, "82721": 67, "00000": 67, "00006": 67, "piecewiselinear": 67, "03482": 67, "00001": 67, "188": 67, "00018": 67, "679": 67, "00002": 67, "20037": 67, "866": 67, "00089": 67, "1943": 67, "00010": 67, "00003": [67, 68], "empty_cuda_cach": 67, "log_elapsed_tim": [67, 68], "57860": 67, "11529": 67, "14977": 67, "12893": 67, "00790": 67, "yet": 67, "unaggreg": [67, 68], "awesome_filenam": [67, 68], "processing_stat": [67, 68], "dataflow_stat": [67, 68], "event_start": 67, "252387": [67, 68], "125676": [67, 68], "00029": [67, 68], "252342": [67, 68], "125123": [67, 68], "43245": 68, "log_validation_result": 68, "55271": 68, "log_tim": 68, "00049": 68, "00106": 68, "log_training_loss": 68, "059": 68, "04571": 68, "took": 68, "29543": 68, "00393": 68, "1875": 68, "00784": 68, "00602": 68, "00034": 68, "24365": 68, "00533": 68, "1874": 68, "01129": 68, "937": 68, "00866": 68, "00113": 68, "measur": [69, 88, 89, 98, 102, 113, 124, 125, 147], "divid": 69, "elaps": [69, 70], "step_count": 69, "increment": 69, "forget": 69, "sleep": 69, "idl": 69, "003073937026784": 69, "2003182829997968": 69, "paus": 69, "10016545779653825": 69, "training_update_funct": 69, "callback": 69, "tqdm": [70, 86, 88, 145], "persist": [70, 86, 88], "bar_format": 70, "desc": 70, "n_fmt": 70, "total_fmt": 70, "percentag": [70, 88, 134, 138], "0f": 70, "postfix": 70, "tqdm_kwarg": 70, "l_bar": 70, "r_bar": 70, "rate_fmt": 70, "descript": [70, 79, 103, 112], "simpli": [70, 78, 80, 82, 89, 92, 94, 96, 97, 99, 100, 102, 104, 108, 113, 114, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "simpl": [70, 147], "128": 70, "06": [70, 99], "stderr": [70, 148], "log_fil": 70, "log_messag": 70, "stdout": 70, "tqdm_notebook": 70, "ipywidget": 70, "due": 70, "bug": 70, "closing_event_nam": 70, "either": [70, 71, 75, 105, 106, 107, 144], "entri": [70, 89], "advanc": 70, "intention": 70, "preserv": 70, "wish": 70, "show_legend": 71, "vd_logger": 71, "vb_logger": 71, "raise_except": 71, "git": 71, "fossasia": 71, "url": 71, "visdom_server_url": 71, "visdom_port": 71, "concurr": 71, "futur": 71, "threadpoolexecutor": 71, "post": 71, "thread": [71, 72], "usernam": 71, "password": 71, "visdom_usernam": 71, "visdom_password": 71, "frequent": 71, "slow": 71, "down": 71, "situat": 71, "seper": 72, "entiti": 72, "bias": 72, "graph": 72, "watch": 72, "dir": 72, "model_checkpoint": 72, "is_multilabel": [73, 77, 98, 124, 125], "skip_unrol": [73, 74, 75, 78, 79, 80, 82, 83, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143], "binari": [73, 85, 98, 105, 107, 119, 124, 125], "multiclass": [73, 77, 85, 98, 124, 125], "multilabel": [73, 77, 98, 124, 125], "frac": [73, 80, 82, 85, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 104, 108, 118, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143], "tp": [73, 103, 124, 125], "tn": 73, "fp": [73, 124], "num_categori": [73, 77, 85, 124, 125], "greater": [73, 79, 103], "unrol": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "fed": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 131, 142], "ouput": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "y_pred_a": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "y_pred_b": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "altern": [73, 74, 75, 78, 80, 82, 86, 87, 89, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 131, 142], "visit": [73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125], "y_true": [73, 75, 77, 78, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 101, 102, 105, 106, 107, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "6666": [73, 77, 106], "0266": [73, 77, 85, 124, 125], "1719": [73, 77, 85, 124, 125], "3055": [73, 77, 85, 124, 125], "6886": [73, 77, 85, 124, 125], "3978": [73, 77, 85, 124, 125], "8176": [73, 77, 85, 124, 125], "9230": [73, 77, 85, 124, 125], "0197": [73, 77, 85, 124, 125], "8395": [73, 77, 85, 124, 125], "1785": [73, 77, 85, 124, 125], "2670": [73, 77, 85, 124, 125], "6084": [73, 77, 85, 124, 125], "8448": [73, 77, 85, 124, 125], "7177": [73, 77, 85, 124, 125], "7288": [73, 77, 85, 124, 125], "7748": [73, 77, 85], "9542": [73, 77, 85], "8573": [73, 77, 85], "element": [73, 85, 124, 125], "thresholded_output_transform": [73, 85, 124, 125], "round": [73, 85, 105, 107, 119, 124, 125], "65": [73, 85, 124, 125], "quantiti": [73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "interest": [73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147], "shallow": [73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "flatten": [73, 74, 76, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143], "arithmet": [74, 115, 146], "rule": [74, 87, 98, 115], "nd": [74, 87, 115], "seen": [74, 87, 119], "output_tranform": [74, 78, 80, 82, 87, 89, 92, 94, 96, 97, 99, 100, 102, 104, 108, 113, 114], "avg": [74, 77, 87], "er": [74, 87], "check_compute_fn": [75, 78, 83, 105, 106, 107, 116, 117, 118, 131, 142], "ground": [75, 78, 80, 92, 94, 97, 98, 100, 101, 103, 105, 106, 107, 108, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "truth": [75, 78, 92, 94, 98, 101, 103, 105, 106, 107, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "sklearn": [75, 77, 78, 105, 106, 107, 116, 117, 118, 132], "average_precision_scor": 75, "compris": [75, 98, 105, 106, 107], "probabl": [75, 82, 90, 92, 94, 98, 102, 105, 106, 107, 124], "estim": [75, 89, 105, 106, 107], "confid": [75, 103, 105, 106, 107, 144], "shown": [75, 105, 106, 107], "activated_output_transform": 75, "softmax": 75, "avg_precis": [75, 105, 106, 107], "70": 75, "46": [75, 89, 148], "54": 75, "84": [75, 145], "average_precis": 75, "9166": 75, "ngram": [76, 111], "no_smooth": 76, "macro": [76, 77, 98, 124, 125], "b_": 76, "sum_": [76, 80, 82, 90, 92, 94, 96, 97, 98, 100, 102, 103, 108, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 140, 141, 143], "w_": 76, "p_": [76, 82, 92, 94, 103], "gram": [76, 89], "sentenc": 76, "breveti": 76, "penalti": 76, "papineni": 76, "et": [76, 84, 89, 90, 96], "al": [76, 84, 89, 90, 96], "2002": 76, "review": 76, "techniqu": 76, "chen": 76, "2014": 76, "hypothes": 76, "corpu": 76, "remark": [76, 84], "inspir": [76, 84], "nltk": 76, "smooth1": 76, "nltk_smooth2": 76, "smooth2": 76, "micro": [76, 98, 124, 125], "www": 76, "_modul": 76, "translat": 76, "bleu_scor": 76, "nlp": 76, "m": [76, 79, 92, 101, 109, 110, 111, 147], "cat": [76, 109, 110, 111], "mat": [76, 109, 110, 111], "split": [76, 109, 110, 111], "_y": 76, "0393": 76, "output_dict": 77, "resembl": 77, "scikit": [77, 124, 125, 126, 132], "classification_report": 77, "underli": 77, "doesn": [77, 112], "harmon": [77, 85, 115], "metricslambda": [77, 81, 85, 91, 93, 120, 147], "cr": 77, "dict_kei": 77, "recal": [77, 79, 85, 98, 103, 105, 109, 110, 111, 119, 123, 147], "f1": [77, 123, 147], "3333": [77, 124], "3999": 77, "6111": 77, "5222": [77, 85], "2333": 77, "cohen": 78, "kappa": 78, "wieght": 78, "quadrat": 78, "cohen_kappa_scor": 78, "ck": 78, "4285": 78, "num_class": [79, 81, 91, 93, 101, 103, 119, 120, 147, 148], "detect": [79, 103], "ap": [79, 98, 123], "95": [79, 103], "iou": [79, 93, 103, 147], "small": [79, 80, 99, 103, 140], "32px": 79, "medium": [79, 103], "96px": 79, "larg": [79, 103], "1e5px": 79, "ep": [80, 99, 140], "similar": [80, 113, 147], "_similar": 80, "x_i": 80, "y_i": 80, "_2": 80, "epsilon": [80, 140], "y_": [80, 97, 100, 108], "x_": [80, 97, 100, 108], "divis": [80, 99, 140], "cosine_similar": 80, "pred": [80, 97, 99, 100, 104, 108, 113, 114], "5080491304397583": 80, "cm": [81, 91, 93, 119, 120, 126, 147], "ignore_index": [81, 91, 93, 120], "dice": 81, "coeffici": [81, 131, 140, 141, 142], "confusionmatrix": [81, 91, 93, 120, 147], "confus": [81, 91, 93, 101, 119, 120], "matrix": [81, 84, 91, 93, 101, 119, 120, 147], "background": [81, 91, 93, 119, 120, 147], "6667": [81, 85, 105], "0000": [81, 82, 91, 92, 93, 94, 102, 124, 125], "quad": [82, 140], "z_": 82, "unnorm": [82, 92, 94, 102], "logit": [82, 84, 92, 94, 102, 119], "segment": [82, 92, 94, 102], "6931": [82, 92, 94, 102], "0986": [82, 92, 94, 102], "3863": [82, 92, 94, 102], "6094": [82, 92, 94, 102], "3026": [82, 92, 94, 102], "8902875582377116": 82, "compute_fn": [83, 116, 117, 118, 131, 142], "entir": [83, 147], "n_target": 83, "datatyp": 83, "float32": [83, 113, 137, 138, 139, 141], "might": [83, 113, 116, 117, 118, 131, 142], "mse_fn": 83, "y_target": 83, "type_a": 83, "mse": [83, 100, 104], "5729": 83, "epochmetricwarn": 83, "disabl": 83, "num_featur": [84, 90], "feature_extractor": [84, 90], "frechet": 84, "incept": [84, 90], "distanc": [84, 89, 99, 104, 118, 126, 132, 143], "mu_": 84, "tr": [84, 89], "sigma_": [84, 142], "sigma_1": 84, "sigma_2": 84, "mu_1": 84, "covari": 84, "mu_2": 84, "heusel": 84, "approach": 84, "mathiasen": 84, "2020": [84, 148], "pytorch_fid": 84, "torchvis": [84, 90], "scipi": [84, 131, 142], "squar": [84, 100, 104, 108, 141], "root": [84, 108], "vector": [84, 96, 102, 114, 119, 147], "extract": 84, "neither": [84, 90], "nor": [84, 90], "imagenet": [84, 90], "ident": [84, 90, 103], "implicitli": [84, 90], "mention": [84, 90], "inceptionv3": 84, "wrapperinceptionv3": 84, "fid_incv3": 84, "super": [84, 121, 147], "2048": 84, "block_idx": 84, "block_index_by_dim": 84, "wrapper_model": 84, "pytorch_fid_metr": 84, "f_": 85, "real": [85, 90], "unweight": [85, 98, 124, 125], "7499": 85, "4000": [85, 128], "wps_metric": 86, "ntoken": 86, "wp": 86, "400": 86, "On": [86, 88, 121, 123], "epochwis": [86, 88, 112, 121, 123], "usage_nam": [86, 88, 121, 123, 147], "batchwis": [86, 88, 112, 121, 123], "mymetr": [86, 88, 112, 121, 123], "is_attach": [86, 88, 112, 121, 123], "put": [86, 88, 121], "explicitli": [86, 88, 121], "sent": [86, 88, 121], "geometr": [87, 115, 129, 130], "prod": 87, "8171": 87, "2134": 87, "mem": 88, "sigma_x": 89, "sigma_i": 89, "ignore_invalid_batch": 89, "hilbert": 89, "schmidt": 89, "tild": 89, "mathbf": [89, 92, 94, 96, 102], "k": [89, 96, 98, 103, 114, 124, 125], "matric": 89, "gaussian": [89, 96, 113], "rbf": [89, 96], "kernel": [89, 96, 113], "diagon": [89, 119], "statist": 89, "unbias": 89, "propos": 89, "song": 89, "2012": [89, 96], "eq": [89, 147], "paper": 89, "four": [89, 147], "bandwidth": [89, 96], "heurist": 89, "median": [89, 137, 138, 139], "valueerror": 89, "41": 89, "42": [89, 116, 117, 118], "43": [89, 116, 117, 118], "48": 89, "49": [89, 116, 117, 118], "sin": 89, "pi": 89, "09226646274328232": 89, "d_": [90, 92, 94], "kl": [90, 92, 94], "hat": [90, 102], "condit": [90, 147], "margin": 90, "diverg": [90, 92, 94], "barratt": 90, "2018": [90, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 143, 147], "299": 90, "intersect": [91, 120], "j": [91, 92, 93, 96, 101, 104, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "lvert": [91, 93, 97, 133], "cap": [91, 93], "rvert": [91, 93, 97, 133], "cup": [91, 93], "jensen": 92, "shannon": 92, "align": [92, 96, 102], "_i": [92, 94, 96, 102], "q": [92, 94, 96], "q_": [92, 94], "div": [92, 94], "16266516844431558": 92, "jaccard": 93, "jac": 93, "kullback": 94, "leibler": 94, "7220296859741211": 94, "observ": 95, "extra": 95, "required_output_kei": [95, 112, 115, 121], "criterion_kwarg": 95, "standard": [95, 113, 121, 148], "nllloss": [95, 122], "3499999": 95, "var": 96, "discrep": 96, "mmd": 96, "underset": 96, "leq": 96, "sup": 96, "mathbb": 96, "sim": 96, "approx": 96, "substack": 96, "neq": 96, "_j": 96, "sigma": [96, 113], "gretton": 96, "ldot": 96, "80324818": 96, "95768364": 96, "03807209": 96, "11059691": 96, "38230813": 96, "4111988": 96, "8864329": 96, "02890403": 96, "60119252": 96, "68732452": 96, "12854739": 96, "72095073": 96, "62604613": 96, "52368328": 96, "24112842": 96, "0686768": 96, "80502737": 96, "53321717": 96, "83849465": 96, "59099726": 96, "76385441": 96, "68688272": 96, "56833803": 96, "98100778": 96, "55267761": 96, "13084654": 96, "45382906": 96, "0754253": 96, "70317304": 96, "4756805": 96, "072697639465332": 96, "mae": [97, 133, 137], "9375": [97, 123], "rec_threshold": [98, 103], "class_mean": 98, "rec": [98, 103], "_threshold": [98, 103], "r_k": [98, 103], "r_": [98, 103, 142], "p_k": [98, 124, 125], "attempt": 98, "give": [98, 147], "detector": [98, 103], "classifi": 98, "sensiv": [98, 103], "area": [98, 103, 106], "Its": 98, "liter": [98, 103], "incorpor": 98, "dimension": 98, "altogeth": [98, 122, 124, 125], "tp_c": 98, "fp_c": 98, "term": 98, "v": [98, 124, 125], "rest": [98, 124, 125], "sens": [98, 112, 124, 125], "imbal": [98, 124, 125], "y_a": [98, 103, 122], "y_b": [98, 103, 122], "consist": [98, 124], "pairwisedist": 99, "pairwis": 99, "degre": 99, "mpd": 99, "5955": 99, "828125": 100, "denot": 101, "uint8": [101, 148], "int8": 101, "int16": 101, "int32": 101, "int64": 101, "mlcm": 101, "p_c": 102, "entropi": 102, "intuit": 102, "space": 102, "proceed": 102, "mlr": 102, "press": 102, "v70": 102, "hu17b": 102, "mutual_inform": 102, "18599730730056763": 102, "iou_threshold": 103, "max_detections_per_image_per_class": 103, "area_rang": 103, "coco": 103, "summat": 103, "operand": 103, "word": 103, "peek": 103, "match": 103, "55": [103, 116, 117, 118], "categori": 103, "therein": 103, "coco_tensor_list_to_dict_list": 103, "det": 103, "gt": 103, "bbox": [103, 144], "box": [103, 144], "x1": [103, 144], "x2": [103, 144], "y2": [103, 144], "bottom": 103, "coordin": 103, "iscrowd": [103, 144], "crowd": 103, "data_rang": [104, 113], "peak": 104, "nois": 104, "log_": 104, "max_": [104, 133], "8671405": 104, "grayscal": 104, "rgb": 104, "But": 104, "ycbcr": 104, "yuv": 104, "channel": 104, "And": [104, 122, 147], "get_y_channel": 104, "219": 104, "7027966": 104, "precision_recall_curv": 105, "sigmoid_output_transform": [105, 106, 107], "sigmoid": [105, 106, 107, 119], "0474": [105, 106, 107], "5987": [105, 106, 107], "7109": [105, 106, 107], "9997": [105, 106, 107], "prec_recall_curv": 105, "characterist": [106, 107], "roc": [106, 107], "auc": 106, "roc_auc_scor": 106, "roc_curv": [106, 107], "roc_auc": 107, "fpr": 107, "tpr": 107, "333": 107, "inf": 107, "711": 107, "047": 107, "rmse": 108, "956559480312316": 108, "variant": [109, 131], "multiref": [109, 110, 111], "lin": [109, 110, 111], "2004": [109, 110, 111], "candid": [109, 110, 111], "roug": [110, 111], "longest": 110, "co": 111, "epoch_bound": 112, "hold": [112, 131], "deprac": 112, "singleepochrunningbatchwis": 112, "runningbatchwis": 112, "running_avg_accuraci": 112, "log_running_avg_metr": 112, "zip": 112, "98039": 112, "98079": 112, "96117": 112, "96195": 112, "020000": 112, "019600": 112, "039208": 112, "038423": 112, "057655": 112, "insert": 112, "metricusag": [112, 121, 123], "former": 112, "runningepochwis": 112, "much": 112, "detach": [112, 121, 123, 147], "conjunct": [112, 121, 123], "sever": [112, 121, 123], "expens": [112, 121, 123], "epoch_wis": [112, 121, 123], "batch_wis": [112, 121, 123], "kernel_s": 113, "k1": 113, "k2": 113, "03": [113, 116, 117, 118], "ndim": 113, "bfloat16": 113, "typic": 113, "255": [113, 119], "deviat": 113, "uniform": 113, "2d": 113, "3d": 113, "un": 113, "9218971": 113, "categor": 114, "one_hot_to_binary_output_transform": 114, "argmax": [114, 119, 147], "hot": [114, 119, 148], "top_k_accuraci": 114, "public": [115, 121], "num_exampl": 115, "calinski": 116, "harabasz": 116, "qualiti": [116, 117, 118], "good": [116, 117, 118], "separ": [116, 117, 118], "calinski_harabasz_scor": 116, "epochmetr": [116, 117, 118], "71": [116, 117, 118], "62": [116, 117, 118], "69": [116, 117, 118], "89": [116, 117, 118], "53": [116, 117, 118], "63": [116, 117, 118], "67": [116, 117, 118], "52": [116, 117, 118], "51": [116, 117, 118], "733936": 116, "davi": 117, "bouldin": 117, "closer": 117, "davies_bouldin_scor": 117, "3838673743829881": 117, "silhouette_kwarg": 118, "silhouett": 118, "nearest": 118, "silhouette_scor": 118, "12607366": 118, "confusion_matrix": 119, "schema": 119, "column": 119, "row": 119, "were": [119, 124, 125], "correctli": [119, 148], "horizont": 119, "vertic": 119, "neglect": 119, "binary_one_hot_output_transform": 119, "to_onehot": [119, 146, 148], "24999": 120, "myloss": 121, "ca": 121, "cb": 121, "a_tru": 121, "b_true": 121, "a_pr": 121, "b_pred": 121, "mse_loss": 121, "cross_entropi": 121, "discuss": 121, "91221": 121, "custommetr": 121, "re": [121, 144, 147], "becam": 121, "written": [121, 123, 148], "major": 121, "pick": 121, "proper": 121, "_state_dict_all_req_kei": 121, "metric_group": 122, "easier": 122, "eval_metr": 122, "individu": 122, "metrics_lambda": 123, "obtain": 123, "recurs": 123, "partial": [123, 147], "fbeta": 123, "f2": 123, "f3": 123, "f4": 123, "8571": 123, "9677": 123, "9807": 123, "too": 123, "_baseprecisionrecal": [124, 125], "multicalss": [124, 125], "tp_k": [124, 125], "fp_k": 124, "basi": [124, 125], "tp_n": [124, 125], "fp_n": 124, "incompat": [124, 125], "precision_k": 124, "weighted_metr": 124, "two_class_metr": [124, 125], "6666666666666666": [124, 125], "7500": [124, 125], "macro_metr": [124, 125], "27777777777777773": 124, "3333333333333333": [124, 125, 147], "num_label": 124, "micro_metr": [124, 125], "samples_metr": [124, 125], "2000": 124, "2222222222222222": 124, "2333333333333333": 124, "175": 124, "stand": 124, "fn_k": 125, "fn_n": 125, "recall_k": 125, "canberra": 126, "a_j": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "p_j": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "botchkarev": [126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 143, 147], "8000": 126, "denomin": 126, "fraction": [127, 128], "fae": 127, "fractional_abs_error": 127, "fb": 128, "fractional_bia": 128, "gmae": 129, "ln": [129, 130], "2723": 129, "gmrae": 130, "math": 130, "gmare": 130, "kendal": 131, "correl": [131, 140, 142], "tau": 131, "discord": 131, "p_i": 131, "a_i": 131, "said": 131, "concord": 131, "kendalltau": 131, "kendall_tau": 131, "4666666666666666": 131, "manhattan": 132, "md": [132, 137, 138, 139], "maxa": 133, "mare": 134, "mape": [134, 138], "me": 135, "625": [135, 137], "mnb": 136, "mdae": 137, "mdape": 138, "mdrae": 139, "mrae": 139, "pearson": 140, "corr": [140, 142], "9768688678741455": 140, "r2": 141, "8035": 141, "spearman": 142, "cov": 142, "spearmanr": 142, "spearman_corr": 142, "7142857142857143": 142, "hedg": 143, "whd": 143, "object_detection_average_precision_recal": 144, "unchang": 144, "deisr": 144, "plu": 144, "comprehens": 145, "cyclegan": 145, "efficientnet": 145, "section": 145, "lr_values_1": 145, "2e": 145, "lr_values_2": 145, "lr_values_3": 145, "lr_values_4": 145, "141": 145, "ylim": 145, "142": 145, "143": 145, "144": 145, "131": 145, "132": 145, "133": 145, "150": 145, "cosineannealinglr": 145, "lr_scheduler_1": 145, "lr_scheduler_2": 145, "lr_scheduler_3": 145, "t_max": 145, "eta_min": 145, "121": 145, "122": 145, "82": 145, "83": 145, "suptitl": 145, "xtick": 145, "high": 146, "flexibli": 146, "our": 146, "apply_to_tensor": [146, 148], "apply_to_typ": [146, 148], "hash_checkpoint": [146, 148], "truncat": 146, "backpropag": 146, "fashion": 147, "practic": 147, "respons": 147, "care": 147, "metrics_group": 147, "As": 147, "functool": 147, "ot_func": 147, "snippet": 147, "device_id": 147, "output_devic": 147, "test_sampl": 147, "test_dataset": 147, "test_load": 147, "becaus": 147, "parti": 147, "dill": 147, "overcom": 147, "fine": 147, "grain": 147, "metric1": 147, "metric2": 147, "pow": 147, "unaverag": 147, "iou_metr": 147, "iou_no_bg_metr": 147, "mean_iou_no_bg_metr": 147, "12345": 147, "These": 147, "customaccuraci": 147, "ignored_class": 147, "_num_correct": 147, "_num_exampl": 147, "_devic": 147, "mask": 147, "view": 147, "necessari": 147, "notic": 147, "differenti": 147, "inter": 147, "definit": 147, "page": 147, "appendix": 147, "mathemat": 147, "accompani": 147, "reinit": 147, "attr": 147, "abil": 147, "byte": 148, "input_typ": 148, "relev": 148, "pin": 148, "checkpoint_path": 148, "output_dir": 148, "hash": 148, "check_hash": 148, "hub": 148, "load_state_dict_from_url": 148, "digit": 148, "sha256": 148, "manual_seed_al": 148, "set_rng_stat": 148, "stream": 148, "asctim": 148, "levelnam": 148, "distributed_rank": 148, "encod": 148, "utf": 148, "critic": 148, "debug": 148, "textio": 148, "sy": 148, "readabl": 148, "07": 148, "356": 148, "358": 148, "my": 148, "special": 148, "charact": 148, "torchscript": 148}, "objects": {"": [[146, 0, 0, "-", "ignite"]], "ignite": [[146, 0, 0, "-", "contrib"], [148, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[0, 0, 0, "-", "common"], [0, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[0, 1, 1, "", "add_early_stopping_by_val_score"], [0, 1, 1, "", "gen_save_best_models_by_val_score"], [0, 1, 1, "", "save_best_model_by_val_score"], [0, 1, 1, "", "setup_any_logging"], [0, 1, 1, "", "setup_clearml_logging"], [0, 1, 1, "", "setup_common_distrib_training_handlers"], [0, 1, 1, "", "setup_common_training_handlers"], [0, 1, 1, "", "setup_mlflow_logging"], [0, 1, 1, "", "setup_neptune_logging"], [0, 1, 1, "", "setup_plx_logging"], [0, 1, 1, "", "setup_tb_logging"], [0, 1, 1, "", "setup_trains_logging"], [0, 1, 1, "", "setup_visdom_logging"], [0, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[0, 2, 1, "", "Tbptt_Events"], [0, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.distributed.auto": [[8, 2, 1, "", "DistributedProxySampler"], [9, 1, 1, "", "auto_dataloader"], [10, 1, 1, "", "auto_model"], [11, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[12, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[12, 3, 1, "", "run"]], "ignite.distributed": [[4, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[4, 1, 1, "", "all_gather"], [4, 1, 1, "", "all_gather_tensors_with_shapes"], [4, 1, 1, "", "all_reduce"], [4, 1, 1, "", "available_backends"], [4, 1, 1, "", "backend"], [4, 1, 1, "", "barrier"], [4, 1, 1, "", "broadcast"], [4, 1, 1, "", "device"], [4, 1, 1, "", "finalize"], [4, 1, 1, "", "get_local_rank"], [4, 1, 1, "", "get_nnodes"], [4, 1, 1, "", "get_node_rank"], [4, 1, 1, "", "get_nproc_per_node"], [4, 1, 1, "", "get_rank"], [4, 1, 1, "", "get_world_size"], [4, 4, 1, "", "has_native_dist_support"], [4, 4, 1, "", "has_xla_support"], [4, 1, 1, "", "hostname"], [4, 1, 1, "", "initialize"], [4, 1, 1, "", "model_name"], [4, 1, 1, "", "new_group"], [4, 1, 1, "", "one_rank_first"], [4, 1, 1, "", "one_rank_only"], [4, 1, 1, "", "set_local_rank"], [4, 1, 1, "", "show_config"], [4, 1, 1, "", "spawn"], [4, 1, 1, "", "sync"]], "ignite.engine": [[13, 1, 1, "", "create_supervised_evaluator"], [14, 1, 1, "", "create_supervised_trainer"], [26, 1, 1, "", "supervised_evaluation_step"], [27, 1, 1, "", "supervised_evaluation_step_amp"], [28, 1, 1, "", "supervised_training_step"], [29, 1, 1, "", "supervised_training_step_amp"], [30, 1, 1, "", "supervised_training_step_apex"], [31, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[15, 2, 1, "", "DeterministicEngine"], [16, 2, 1, "", "ReproducibleBatchSampler"], [17, 1, 1, "", "keep_random_state"], [18, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[15, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[16, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[19, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[19, 3, 1, "", "add_event_handler"], [19, 3, 1, "", "fire_event"], [19, 3, 1, "", "has_event_handler"], [19, 3, 1, "", "interrupt"], [19, 4, 1, "", "last_event_name"], [19, 3, 1, "", "load_state_dict"], [19, 3, 1, "", "on"], [19, 3, 1, "", "register_events"], [19, 3, 1, "", "remove_event_handler"], [19, 3, 1, "", "run"], [19, 3, 1, "", "set_data"], [19, 4, 1, "", "state"], [19, 3, 1, "", "state_dict"], [19, 3, 1, "", "terminate"], [19, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[20, 2, 1, "", "CallableEventWithFilter"], [21, 2, 1, "", "EventEnum"], [22, 2, 1, "", "Events"], [23, 2, 1, "", "EventsList"], [24, 2, 1, "", "RemovableEventHandle"], [25, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[20, 3, 1, "", "before_and_after_event_filter"], [20, 3, 1, "", "default_event_filter"], [20, 3, 1, "", "every_before_and_after_event_filter"], [20, 3, 1, "", "every_event_filter"], [20, 4, 1, "", "name"], [20, 3, 1, "", "once_event_filter"], [20, 4, 1, "", "value"]], "ignite.engine.events.Events": [[22, 4, 1, "", "COMPLETED"], [22, 4, 1, "", "DATALOADER_STOP_ITERATION"], [22, 4, 1, "", "EPOCH_COMPLETED"], [22, 4, 1, "", "EPOCH_STARTED"], [22, 4, 1, "", "EXCEPTION_RAISED"], [22, 4, 1, "", "GET_BATCH_COMPLETED"], [22, 4, 1, "", "GET_BATCH_STARTED"], [22, 4, 1, "", "INTERRUPT"], [22, 4, 1, "", "ITERATION_COMPLETED"], [22, 4, 1, "", "ITERATION_STARTED"], [22, 4, 1, "", "STARTED"], [22, 4, 1, "", "TERMINATE"], [22, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[24, 3, 1, "", "remove"]], "ignite.engine.events.State": [[25, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[6, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[32, 2, 1, "", "DiskSaver"], [33, 2, 1, "", "TimeLimit"], [34, 0, 0, "-", "base_logger"], [38, 0, 0, "-", "clearml_logger"], [41, 0, 0, "-", "fbresearch_logger"], [42, 1, 1, "", "global_step_from_engine"], [44, 0, 0, "-", "mlflow_logger"], [45, 0, 0, "-", "neptune_logger"], [57, 0, 0, "-", "polyaxon_logger"], [65, 0, 0, "-", "tensorboard_logger"], [70, 0, 0, "-", "tqdm_logger"], [71, 0, 0, "-", "visdom_logger"], [72, 0, 0, "-", "wandb_logger"]], "ignite.handlers.DiskSaver": [[32, 3, 1, "", "remove"]], "ignite.handlers.base_logger": [[34, 2, 1, "", "BaseHandler"], [34, 2, 1, "", "BaseLogger"], [34, 2, 1, "", "BaseOptimizerParamsHandler"], [34, 2, 1, "", "BaseOutputHandler"], [34, 2, 1, "", "BaseWeightsHandler"], [34, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.handlers.base_logger.BaseLogger": [[34, 3, 1, "", "attach"], [34, 3, 1, "", "attach_opt_params_handler"], [34, 3, 1, "", "attach_output_handler"]], "ignite.handlers.checkpoint": [[35, 2, 1, "", "BaseSaveHandler"], [36, 2, 1, "", "Checkpoint"], [37, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[35, 3, 1, "", "__call__"], [35, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[36, 2, 1, "", "Item"], [36, 3, 1, "", "get_default_score_fn"], [36, 3, 1, "", "load_objects"], [36, 3, 1, "", "load_state_dict"], [36, 3, 1, "", "reload_objects"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "setup_filename_pattern"], [36, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[36, 4, 1, "", "filename"], [36, 4, 1, "", "priority"]], "ignite.handlers.clearml_logger": [[38, 2, 1, "", "ClearMLLogger"], [38, 2, 1, "", "ClearMLSaver"], [38, 2, 1, "", "GradsHistHandler"], [38, 2, 1, "", "GradsScalarHandler"], [38, 2, 1, "", "OptimizerParamsHandler"], [38, 2, 1, "", "OutputHandler"], [38, 2, 1, "", "WeightsHistHandler"], [38, 2, 1, "", "WeightsScalarHandler"], [38, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.clearml_logger.ClearMLLogger": [[38, 3, 1, "", "bypass_mode"], [38, 3, 1, "", "get_task"], [38, 3, 1, "", "set_bypass_mode"]], "ignite.handlers.clearml_logger.ClearMLSaver": [[38, 3, 1, "", "get_local_copy"], [38, 3, 1, "", "remove"]], "ignite.handlers.early_stopping": [[39, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[39, 3, 1, "", "load_state_dict"], [39, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[40, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[40, 3, 1, "", "attach"], [40, 4, 1, "", "ema_model"], [40, 4, 1, "", "handle_buffers"], [40, 4, 1, "", "model"], [40, 4, 1, "", "momentum"]], "ignite.handlers.fbresearch_logger": [[41, 2, 1, "", "FBResearchLogger"]], "ignite.handlers.fbresearch_logger.FBResearchLogger": [[41, 3, 1, "", "attach"], [41, 3, 1, "", "log_completed"], [41, 3, 1, "", "log_epoch_completed"], [41, 3, 1, "", "log_epoch_started"], [41, 3, 1, "", "log_every"]], "ignite.handlers.lr_finder": [[43, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[43, 3, 1, "", "apply_suggested_lr"], [43, 3, 1, "", "attach"], [43, 3, 1, "", "get_results"], [43, 3, 1, "", "lr_suggestion"], [43, 3, 1, "", "plot"]], "ignite.handlers.mlflow_logger": [[44, 2, 1, "", "MLflowLogger"], [44, 2, 1, "", "OptimizerParamsHandler"], [44, 2, 1, "", "OutputHandler"], [44, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger": [[45, 2, 1, "", "GradsScalarHandler"], [45, 2, 1, "", "NeptuneLogger"], [45, 2, 1, "", "NeptuneSaver"], [45, 2, 1, "", "OptimizerParamsHandler"], [45, 2, 1, "", "OutputHandler"], [45, 2, 1, "", "WeightsScalarHandler"], [45, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger.NeptuneSaver": [[45, 3, 1, "", "remove"]], "ignite.handlers.param_scheduler": [[46, 2, 1, "", "BaseParamScheduler"], [47, 2, 1, "", "ConcatScheduler"], [48, 2, 1, "", "CosineAnnealingScheduler"], [49, 2, 1, "", "CyclicalScheduler"], [50, 2, 1, "", "LRScheduler"], [51, 2, 1, "", "LinearCyclicalScheduler"], [52, 2, 1, "", "ParamGroupScheduler"], [53, 2, 1, "", "ParamScheduler"], [54, 2, 1, "", "PiecewiseLinear"], [55, 2, 1, "", "ReduceLROnPlateauScheduler"], [56, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[46, 3, 1, "", "get_param"], [46, 3, 1, "", "load_state_dict"], [46, 3, 1, "", "plot_values"], [46, 3, 1, "", "simulate_values"], [46, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[47, 3, 1, "", "get_param"], [47, 3, 1, "", "load_state_dict"], [47, 3, 1, "", "simulate_values"], [47, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[48, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[50, 3, 1, "", "get_param"], [50, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[51, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[52, 3, 1, "", "get_param"], [52, 3, 1, "", "load_state_dict"], [52, 3, 1, "", "simulate_values"], [52, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[53, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[54, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[55, 3, 1, "", "get_param"], [55, 3, 1, "", "simulate_values"]], "ignite.handlers.polyaxon_logger": [[57, 2, 1, "", "OptimizerParamsHandler"], [57, 2, 1, "", "OutputHandler"], [57, 2, 1, "", "PolyaxonLogger"], [57, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.state_param_scheduler": [[58, 2, 1, "", "ExpStateScheduler"], [59, 2, 1, "", "LambdaStateScheduler"], [60, 2, 1, "", "MultiStepStateScheduler"], [61, 2, 1, "", "PiecewiseLinearStateScheduler"], [62, 2, 1, "", "StateParamScheduler"], [63, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[58, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[59, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[60, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[61, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[62, 3, 1, "", "attach"], [62, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[63, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[64, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[64, 3, 1, "", "attach"], [64, 4, 1, "", "data"], [64, 3, 1, "", "reset"], [64, 3, 1, "", "store"], [64, 3, 1, "", "update"]], "ignite.handlers.tensorboard_logger": [[65, 2, 1, "", "GradsHistHandler"], [65, 2, 1, "", "GradsScalarHandler"], [65, 2, 1, "", "OptimizerParamsHandler"], [65, 2, 1, "", "OutputHandler"], [65, 2, 1, "", "TensorboardLogger"], [65, 2, 1, "", "WeightsHistHandler"], [65, 2, 1, "", "WeightsScalarHandler"], [65, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.terminate_on_nan": [[66, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[67, 2, 1, "", "BasicTimeProfiler"], [68, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[67, 3, 1, "", "attach"], [67, 3, 1, "", "get_results"], [67, 3, 1, "", "print_results"], [67, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[68, 3, 1, "", "attach"], [68, 3, 1, "", "get_results"], [68, 3, 1, "", "print_results"], [68, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[69, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[69, 3, 1, "", "attach"], [69, 3, 1, "", "pause"], [69, 3, 1, "", "reset"], [69, 3, 1, "", "resume"], [69, 4, 1, "", "running"], [69, 3, 1, "", "step"], [69, 4, 1, "", "step_count"], [69, 4, 1, "", "total"], [69, 3, 1, "", "value"]], "ignite.handlers.tqdm_logger": [[70, 2, 1, "", "ProgressBar"]], "ignite.handlers.tqdm_logger.ProgressBar": [[70, 3, 1, "", "attach"], [70, 3, 1, "", "attach_opt_params_handler"], [70, 3, 1, "", "log_message"]], "ignite.handlers.visdom_logger": [[71, 2, 1, "", "GradsScalarHandler"], [71, 2, 1, "", "OptimizerParamsHandler"], [71, 2, 1, "", "OutputHandler"], [71, 2, 1, "", "VisdomLogger"], [71, 2, 1, "", "WeightsScalarHandler"], [71, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.wandb_logger": [[72, 2, 1, "", "OptimizerParamsHandler"], [72, 2, 1, "", "OutputHandler"], [72, 2, 1, "", "WandBLogger"], [72, 1, 1, "", "global_step_from_engine"]], "ignite.metrics": [[73, 2, 1, "", "Accuracy"], [74, 2, 1, "", "Average"], [75, 2, 1, "", "AveragePrecision"], [76, 2, 1, "", "Bleu"], [77, 1, 1, "", "ClassificationReport"], [78, 2, 1, "", "CohenKappa"], [79, 2, 1, "", "CommonObjectDetectionMetrics"], [80, 2, 1, "", "CosineSimilarity"], [81, 1, 1, "", "DiceCoefficient"], [82, 2, 1, "", "Entropy"], [83, 2, 1, "", "EpochMetric"], [84, 2, 1, "", "FID"], [85, 1, 1, "", "Fbeta"], [86, 2, 1, "", "Frequency"], [87, 2, 1, "", "GeometricAverage"], [88, 2, 1, "", "GpuInfo"], [89, 2, 1, "", "HSIC"], [90, 2, 1, "", "InceptionScore"], [91, 1, 1, "", "IoU"], [92, 2, 1, "", "JSDivergence"], [93, 1, 1, "", "JaccardIndex"], [94, 2, 1, "", "KLDivergence"], [95, 2, 1, "", "Loss"], [96, 2, 1, "", "MaximumMeanDiscrepancy"], [97, 2, 1, "", "MeanAbsoluteError"], [98, 2, 1, "", "MeanAveragePrecision"], [99, 2, 1, "", "MeanPairwiseDistance"], [100, 2, 1, "", "MeanSquaredError"], [101, 2, 1, "", "MultiLabelConfusionMatrix"], [102, 2, 1, "", "MutualInformation"], [103, 2, 1, "", "ObjectDetectionAvgPrecisionRecall"], [104, 2, 1, "", "PSNR"], [105, 2, 1, "", "PrecisionRecallCurve"], [106, 2, 1, "", "ROC_AUC"], [107, 2, 1, "", "RocCurve"], [108, 2, 1, "", "RootMeanSquaredError"], [109, 2, 1, "", "Rouge"], [110, 2, 1, "", "RougeL"], [111, 2, 1, "", "RougeN"], [112, 2, 1, "", "RunningAverage"], [113, 2, 1, "", "SSIM"], [114, 2, 1, "", "TopKCategoricalAccuracy"], [115, 2, 1, "", "VariableAccumulation"], [120, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[73, 3, 1, "", "compute"], [73, 3, 1, "", "reset"], [73, 3, 1, "", "update"]], "ignite.metrics.Average": [[74, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[76, 3, 1, "", "compute"], [76, 3, 1, "", "reset"], [76, 3, 1, "", "update"]], "ignite.metrics.CommonObjectDetectionMetrics": [[79, 3, 1, "", "compute"], [79, 3, 1, "", "reset"], [79, 3, 1, "", "update"]], "ignite.metrics.CosineSimilarity": [[80, 3, 1, "", "compute"], [80, 3, 1, "", "reset"], [80, 3, 1, "", "update"]], "ignite.metrics.Entropy": [[82, 3, 1, "", "compute"], [82, 3, 1, "", "reset"], [82, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[83, 3, 1, "", "compute"], [83, 3, 1, "", "reset"], [83, 3, 1, "", "update"]], "ignite.metrics.FID": [[84, 3, 1, "", "compute"], [84, 3, 1, "", "reset"], [84, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[86, 3, 1, "", "attach"], [86, 3, 1, "", "completed"], [86, 3, 1, "", "compute"], [86, 3, 1, "", "reset"], [86, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[87, 3, 1, "", "compute"]], "ignite.metrics.GpuInfo": [[88, 3, 1, "", "attach"], [88, 3, 1, "", "completed"], [88, 3, 1, "", "compute"], [88, 3, 1, "", "reset"], [88, 3, 1, "", "update"]], "ignite.metrics.HSIC": [[89, 3, 1, "", "compute"], [89, 3, 1, "", "reset"], [89, 3, 1, "", "update"]], "ignite.metrics.InceptionScore": [[90, 3, 1, "", "compute"], [90, 3, 1, "", "reset"], [90, 3, 1, "", "update"]], "ignite.metrics.JSDivergence": [[92, 3, 1, "", "compute"]], "ignite.metrics.KLDivergence": [[94, 3, 1, "", "compute"], [94, 3, 1, "", "reset"], [94, 3, 1, "", "update"]], "ignite.metrics.Loss": [[95, 3, 1, "", "compute"], [95, 4, 1, "", "required_output_keys"], [95, 3, 1, "", "reset"], [95, 3, 1, "", "update"]], "ignite.metrics.MaximumMeanDiscrepancy": [[96, 3, 1, "", "compute"], [96, 3, 1, "", "reset"], [96, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[97, 3, 1, "", "compute"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "update"]], "ignite.metrics.MeanAveragePrecision": [[98, 3, 1, "", "compute"], [98, 3, 1, "", "reset"], [98, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[99, 3, 1, "", "compute"], [99, 3, 1, "", "reset"], [99, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[101, 3, 1, "", "compute"], [101, 3, 1, "", "reset"], [101, 3, 1, "", "update"]], "ignite.metrics.MutualInformation": [[102, 3, 1, "", "compute"], [102, 3, 1, "", "reset"]], "ignite.metrics.ObjectDetectionAvgPrecisionRecall": [[103, 3, 1, "", "compute"], [103, 3, 1, "", "reset"], [103, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[104, 3, 1, "", "compute"], [104, 3, 1, "", "reset"], [104, 3, 1, "", "update"]], "ignite.metrics.PrecisionRecallCurve": [[105, 3, 1, "", "compute"]], "ignite.metrics.RocCurve": [[107, 3, 1, "", "compute"]], "ignite.metrics.RootMeanSquaredError": [[108, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[109, 3, 1, "", "compute"], [109, 3, 1, "", "reset"], [109, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[112, 3, 1, "", "attach"], [112, 3, 1, "", "compute"], [112, 3, 1, "", "detach"], [112, 4, 1, "", "required_output_keys"], [112, 3, 1, "", "reset"], [112, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[113, 3, 1, "", "compute"], [113, 3, 1, "", "reset"], [113, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[114, 3, 1, "", "compute"], [114, 3, 1, "", "reset"], [114, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[115, 3, 1, "", "compute"], [115, 4, 1, "", "required_output_keys"], [115, 3, 1, "", "reset"], [115, 3, 1, "", "update"]], "ignite.metrics.clustering": [[116, 2, 1, "", "CalinskiHarabaszScore"], [117, 2, 1, "", "DaviesBouldinScore"], [118, 2, 1, "", "SilhouetteScore"]], "ignite.metrics.confusion_matrix": [[119, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[119, 3, 1, "", "compute"], [119, 3, 1, "", "normalize"], [119, 3, 1, "", "reset"], [119, 3, 1, "", "update"]], "ignite.metrics.metric": [[147, 2, 1, "", "BatchFiltered"], [147, 2, 1, "", "BatchWise"], [147, 2, 1, "", "EpochWise"], [121, 2, 1, "", "Metric"], [147, 2, 1, "", "MetricUsage"], [147, 2, 1, "", "RunningBatchWise"], [147, 2, 1, "", "RunningEpochWise"], [147, 2, 1, "", "SingleEpochRunningBatchWise"], [147, 1, 1, "", "reinit__is_reduced"], [147, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[147, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[147, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[121, 3, 1, "", "attach"], [121, 3, 1, "", "completed"], [121, 3, 1, "", "compute"], [121, 3, 1, "", "detach"], [121, 3, 1, "", "is_attached"], [121, 3, 1, "", "iteration_completed"], [121, 3, 1, "", "load_state_dict"], [121, 4, 1, "", "required_output_keys"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "started"], [121, 3, 1, "", "state_dict"], [121, 3, 1, "", "update"]], "ignite.metrics.metric.RunningBatchWise": [[147, 4, 1, "", "usage_name"]], "ignite.metrics.metric.RunningEpochWise": [[147, 4, 1, "", "usage_name"]], "ignite.metrics.metric.SingleEpochRunningBatchWise": [[147, 4, 1, "", "usage_name"]], "ignite.metrics.metric_group": [[122, 2, 1, "", "MetricGroup"]], "ignite.metrics.metric_group.MetricGroup": [[122, 3, 1, "", "compute"], [122, 3, 1, "", "reset"], [122, 3, 1, "", "update"]], "ignite.metrics.metrics_lambda": [[123, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[123, 3, 1, "", "attach"], [123, 3, 1, "", "compute"], [123, 3, 1, "", "detach"], [123, 3, 1, "", "is_attached"], [123, 3, 1, "", "reset"], [123, 3, 1, "", "update"]], "ignite.metrics.precision": [[124, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[124, 3, 1, "", "update"]], "ignite.metrics.recall": [[125, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[125, 3, 1, "", "update"]], "ignite.metrics.regression": [[126, 2, 1, "", "CanberraMetric"], [127, 2, 1, "", "FractionalAbsoluteError"], [128, 2, 1, "", "FractionalBias"], [129, 2, 1, "", "GeometricMeanAbsoluteError"], [130, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [131, 2, 1, "", "KendallRankCorrelation"], [132, 2, 1, "", "ManhattanDistance"], [133, 2, 1, "", "MaximumAbsoluteError"], [134, 2, 1, "", "MeanAbsoluteRelativeError"], [135, 2, 1, "", "MeanError"], [136, 2, 1, "", "MeanNormalizedBias"], [137, 2, 1, "", "MedianAbsoluteError"], [138, 2, 1, "", "MedianAbsolutePercentageError"], [139, 2, 1, "", "MedianRelativeAbsoluteError"], [140, 2, 1, "", "PearsonCorrelation"], [141, 2, 1, "", "R2Score"], [142, 2, 1, "", "SpearmanRankCorrelation"], [143, 2, 1, "", "WaveHedgesDistance"]], "ignite.metrics.regression.CanberraMetric": [[126, 3, 1, "", "compute"], [126, 3, 1, "", "reset"]], "ignite.metrics.regression.FractionalAbsoluteError": [[127, 3, 1, "", "compute"], [127, 3, 1, "", "reset"]], "ignite.metrics.regression.FractionalBias": [[128, 3, 1, "", "compute"], [128, 3, 1, "", "reset"]], "ignite.metrics.regression.GeometricMeanAbsoluteError": [[129, 3, 1, "", "compute"], [129, 3, 1, "", "reset"]], "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError": [[130, 3, 1, "", "compute"], [130, 3, 1, "", "reset"]], "ignite.metrics.regression.KendallRankCorrelation": [[131, 3, 1, "", "compute"], [131, 3, 1, "", "update"]], "ignite.metrics.regression.ManhattanDistance": [[132, 3, 1, "", "compute"], [132, 3, 1, "", "reset"]], "ignite.metrics.regression.MaximumAbsoluteError": [[133, 3, 1, "", "compute"], [133, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanAbsoluteRelativeError": [[134, 3, 1, "", "compute"], [134, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanError": [[135, 3, 1, "", "compute"], [135, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanNormalizedBias": [[136, 3, 1, "", "compute"], [136, 3, 1, "", "reset"]], "ignite.metrics.regression.PearsonCorrelation": [[140, 3, 1, "", "compute"], [140, 3, 1, "", "reset"]], "ignite.metrics.regression.R2Score": [[141, 3, 1, "", "compute"], [141, 3, 1, "", "reset"]], "ignite.metrics.regression.SpearmanRankCorrelation": [[142, 3, 1, "", "compute"], [142, 3, 1, "", "update"]], "ignite.metrics.regression.WaveHedgesDistance": [[143, 3, 1, "", "compute"], [143, 3, 1, "", "reset"]], "ignite.metrics.vision.object_detection_average_precision_recall": [[144, 1, 1, "", "coco_tensor_list_to_dict_list"]], "ignite.utils": [[148, 1, 1, "", "apply_to_tensor"], [148, 1, 1, "", "apply_to_type"], [148, 1, 1, "", "convert_tensor"], [148, 1, 1, "", "hash_checkpoint"], [148, 1, 1, "", "manual_seed"], [148, 1, 1, "", "setup_logger"], [148, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ignit": [0, 1, 2, 4, 5, 6, 145, 146, 147, 148], "contrib": [0, 1, 2, 146], "engin": [0, 5, 19, 147], "truncat": 0, "backpropag": 0, "through": 0, "time": [0, 1], "helper": [0, 4, 5, 147], "method": [0, 5], "setup": 0, "trainer": [0, 5], "evalu": [0, 5], "handler": [1, 145], "paramet": [1, 145], "schedul": [1, 145], "deprec": [1, 2], "lr": 1, "finder": 1, "profil": 1, "logger": [1, 145], "metric": [2, 121, 147], "modul": 2, "regress": 2, "distribut": [4, 147], "launcher": 4, "auto": 4, "util": [4, 148], "event": [5, 22], "determinist": 5, "defin": 5, "supervis": 5, "resum": 5, "train": 5, "dataflow": 5, "synchron": 5, "except": 6, "distributedproxysampl": 8, "auto_dataload": 9, "auto_model": 10, "auto_optim": 11, "parallel": 12, "create_supervised_evalu": 13, "create_supervised_train": 14, "deterministicengin": 15, "reproduciblebatchsampl": 16, "keep_random_st": 17, "update_dataload": 18, "callableeventwithfilt": 20, "eventenum": 21, "eventslist": 23, "removableeventhandl": 24, "state": [25, 145], "supervised_evaluation_step": 26, "supervised_evaluation_step_amp": 27, "supervised_training_step": 28, "supervised_training_step_amp": 29, "supervised_training_step_apex": 30, "supervised_training_step_tpu": 31, "disksav": 32, "timelimit": 33, "base_logg": 34, "basesavehandl": 35, "checkpoint": 36, "modelcheckpoint": 37, "clearml_logg": 38, "earlystop": 39, "emahandl": 40, "fbresearch_logg": 41, "global_step_from_engin": 42, "fastailrfind": 43, "mlflow_logg": 44, "neptune_logg": 45, "baseparamschedul": 46, "concatschedul": [47, 145], "cosineannealingschedul": [48, 145], "cyclicalschedul": 49, "lrschedul": [50, 145], "linearcyclicalschedul": [51, 145], "paramgroupschedul": 52, "paramschedul": 53, "piecewiselinear": 54, "reducelronplateauschedul": [55, 145], "create_lr_scheduler_with_warmup": 56, "polyaxon_logg": 57, "expstateschedul": 58, "lambdastateschedul": 59, "multistepstateschedul": 60, "piecewiselinearstateschedul": 61, "stateparamschedul": 62, "stepstateschedul": 63, "epochoutputstor": 64, "tensorboard_logg": 65, "terminateonnan": 66, "basictimeprofil": 67, "handlerstimeprofil": 68, "timer": 69, "tqdm_logger": 70, "visdom_logg": 71, "wandb_logg": 72, "accuraci": 73, "averag": 74, "averageprecis": 75, "bleu": 76, "classificationreport": 77, "cohenkappa": 78, "commonobjectdetectionmetr": 79, "cosinesimilar": 80, "dicecoeffici": 81, "entropi": 82, "epochmetr": 83, "fid": 84, "fbeta": 85, "frequenc": 86, "geometricaverag": 87, "gpuinfo": 88, "hsic": 89, "inceptionscor": 90, "iou": 91, "jsdiverg": 92, "jaccardindex": 93, "kldiverg": 94, "loss": 95, "maximummeandiscrep": 96, "meanabsoluteerror": 97, "meanaverageprecis": 98, "meanpairwisedist": 99, "meansquarederror": 100, "multilabelconfusionmatrix": 101, "mutualinform": 102, "objectdetectionavgprecisionrecal": 103, "psnr": 104, "precisionrecallcurv": 105, "roc_auc": 106, "roccurv": 107, "rootmeansquarederror": 108, "roug": 109, "rougel": 110, "rougen": 111, "runningaverag": 112, "ssim": 113, "topkcategoricalaccuraci": 114, "variableaccumul": 115, "calinskiharabaszscor": 116, "daviesbouldinscor": 117, "silhouettescor": 118, "confusionmatrix": 119, "miou": 120, "metricgroup": 122, "metricslambda": 123, "precis": 124, "recal": 125, "canberrametr": 126, "fractionalabsoluteerror": 127, "fractionalbia": 128, "geometricmeanabsoluteerror": 129, "geometricmeanrelativeabsoluteerror": 130, "kendallrankcorrel": 131, "manhattandist": 132, "maximumabsoluteerror": 133, "meanabsoluterelativeerror": 134, "meanerror": 135, "meannormalizedbia": 136, "medianabsoluteerror": 137, "medianabsolutepercentageerror": 138, "medianrelativeabsoluteerror": 139, "pearsoncorrel": 140, "r2score": 141, "spearmanrankcorrel": 142, "wavehedgesdist": 143, "coco_tensor_list_to_dict_list": 144, "complet": [145, 147], "list": [145, 147], "gener": 145, "more": 145, "exampl": 145, "param_schedul": 145, "piecewis": 145, "linear": 145, "concaten": 145, "torch": 145, "your": 146, "network": 146, "packag": 146, "refer": 146, "attach": 147, "api": 147, "reset": 147, "updat": 147, "comput": 147, "arithmet": 147, "how": 147, "creat": 147, "custom": 147, "its": 147, "usag": 147, "metricusag": 147, "epochwis": 147, "runningepochwis": 147, "batchwis": 147, "runningbatchwis": 147, "singleepochrunningbatchwis": 147, "batchfilt": 147, "reinit__is_reduc": 147, "sync_all_reduc": 147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ignite.contrib.engines": [[0, "ignite-contrib-engines"]], "Truncated Backpropagation Through Time": [[0, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[1, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[1, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[1, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[1, "time-profilers-deprecated"]], "Loggers [deprecated]": [[1, "loggers-deprecated"]], "ignite.contrib.metrics": [[2, "ignite-contrib-metrics"]], "Contrib module metrics [deprecated]": [[2, "contrib-module-metrics-deprecated"]], "Regression metrics [deprecated]": [[2, "regression-metrics-deprecated"]], "ignite.distributed": [[4, "ignite-distributed"]], "Distributed launcher and auto helpers": [[4, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[4, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[4, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[4, "ignite-distributed-utils"]], "ignite.engine": [[5, "ignite-engine"]], "ignite.engine.engine": [[5, "ignite-engine-engine"]], "ignite.engine.events": [[5, "ignite-engine-events"]], "ignite.engine.deterministic": [[5, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[5, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[5, "resuming-the-training"]], "Deterministic training": [[5, "deterministic-training"]], "Dataflow synchronization": [[5, "dataflow-synchronization"]], "ignite.exceptions": [[6, "ignite-exceptions"]], "DistributedProxySampler": [[8, "distributedproxysampler"]], "auto_dataloader": [[9, "auto-dataloader"]], "auto_model": [[10, "auto-model"]], "auto_optim": [[11, "auto-optim"]], "Parallel": [[12, "parallel"]], "create_supervised_evaluator": [[13, "create-supervised-evaluator"]], "create_supervised_trainer": [[14, "create-supervised-trainer"]], "DeterministicEngine": [[15, "deterministicengine"]], "ReproducibleBatchSampler": [[16, "reproduciblebatchsampler"]], "keep_random_state": [[17, "keep-random-state"]], "update_dataloader": [[18, "update-dataloader"]], "Engine": [[19, "engine"]], "CallableEventWithFilter": [[20, "callableeventwithfilter"]], "EventEnum": [[21, "eventenum"]], "Events": [[22, "events"]], "EventsList": [[23, "eventslist"]], "RemovableEventHandle": [[24, "removableeventhandle"]], "State": [[25, "state"]], "supervised_evaluation_step": [[26, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[27, "supervised-evaluation-step-amp"]], "supervised_training_step": [[28, "supervised-training-step"]], "supervised_training_step_amp": [[29, "supervised-training-step-amp"]], "supervised_training_step_apex": [[30, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[31, "supervised-training-step-tpu"]], "DiskSaver": [[32, "disksaver"]], "TimeLimit": [[33, "timelimit"]], "base_logger": [[34, "module-ignite.handlers.base_logger"]], "BaseSaveHandler": [[35, "basesavehandler"]], "Checkpoint": [[36, "checkpoint"]], "ModelCheckpoint": [[37, "modelcheckpoint"]], "clearml_logger": [[38, "module-ignite.handlers.clearml_logger"]], "EarlyStopping": [[39, "earlystopping"]], "EMAHandler": [[40, "emahandler"]], "fbresearch_logger": [[41, "module-ignite.handlers.fbresearch_logger"]], "global_step_from_engine": [[42, "global-step-from-engine"]], "FastaiLRFinder": [[43, "fastailrfinder"]], "mlflow_logger": [[44, "module-ignite.handlers.mlflow_logger"]], "neptune_logger": [[45, "module-ignite.handlers.neptune_logger"]], "BaseParamScheduler": [[46, "baseparamscheduler"]], "ConcatScheduler": [[47, "concatscheduler"]], "CosineAnnealingScheduler": [[48, "cosineannealingscheduler"]], "CyclicalScheduler": [[49, "cyclicalscheduler"]], "LRScheduler": [[50, "lrscheduler"]], "LinearCyclicalScheduler": [[51, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[52, "paramgroupscheduler"]], "ParamScheduler": [[53, "paramscheduler"]], "PiecewiseLinear": [[54, "piecewiselinear"]], "ReduceLROnPlateauScheduler": [[55, "reducelronplateauscheduler"]], "create_lr_scheduler_with_warmup": [[56, "create-lr-scheduler-with-warmup"]], "polyaxon_logger": [[57, "module-ignite.handlers.polyaxon_logger"]], "ExpStateScheduler": [[58, "expstatescheduler"]], "LambdaStateScheduler": [[59, "lambdastatescheduler"]], "MultiStepStateScheduler": [[60, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[61, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[62, "stateparamscheduler"]], "StepStateScheduler": [[63, "stepstatescheduler"]], "EpochOutputStore": [[64, "epochoutputstore"]], "tensorboard_logger": [[65, "module-ignite.handlers.tensorboard_logger"]], "TerminateOnNan": [[66, "terminateonnan"]], "BasicTimeProfiler": [[67, "basictimeprofiler"]], "HandlersTimeProfiler": [[68, "handlerstimeprofiler"]], "Timer": [[69, "timer"]], "tqdm_logger": [[70, "module-ignite.handlers.tqdm_logger"]], "visdom_logger": [[71, "module-ignite.handlers.visdom_logger"]], "wandb_logger": [[72, "module-ignite.handlers.wandb_logger"]], "Accuracy": [[73, "accuracy"]], "Average": [[74, "average"]], "AveragePrecision": [[75, "averageprecision"]], "Bleu": [[76, "bleu"]], "ClassificationReport": [[77, "classificationreport"]], "CohenKappa": [[78, "cohenkappa"]], "CommonObjectDetectionMetrics": [[79, "commonobjectdetectionmetrics"]], "CosineSimilarity": [[80, "cosinesimilarity"]], "DiceCoefficient": [[81, "dicecoefficient"]], "Entropy": [[82, "entropy"]], "EpochMetric": [[83, "epochmetric"]], "FID": [[84, "fid"]], "Fbeta": [[85, "fbeta"]], "Frequency": [[86, "frequency"]], "GeometricAverage": [[87, "geometricaverage"]], "GpuInfo": [[88, "gpuinfo"]], "HSIC": [[89, "hsic"]], "InceptionScore": [[90, "inceptionscore"]], "IoU": [[91, "iou"]], "JSDivergence": [[92, "jsdivergence"]], "JaccardIndex": [[93, "jaccardindex"]], "KLDivergence": [[94, "kldivergence"]], "Loss": [[95, "loss"]], "MaximumMeanDiscrepancy": [[96, "maximummeandiscrepancy"]], "MeanAbsoluteError": [[97, "meanabsoluteerror"]], "MeanAveragePrecision": [[98, "meanaverageprecision"]], "MeanPairwiseDistance": [[99, "meanpairwisedistance"]], "MeanSquaredError": [[100, "meansquarederror"]], "MultiLabelConfusionMatrix": [[101, "multilabelconfusionmatrix"]], "MutualInformation": [[102, "mutualinformation"]], "ObjectDetectionAvgPrecisionRecall": [[103, "objectdetectionavgprecisionrecall"]], "PSNR": [[104, "psnr"]], "PrecisionRecallCurve": [[105, "precisionrecallcurve"]], "ROC_AUC": [[106, "roc-auc"]], "RocCurve": [[107, "roccurve"]], "RootMeanSquaredError": [[108, "rootmeansquarederror"]], "Rouge": [[109, "rouge"]], "RougeL": [[110, "rougel"]], "RougeN": [[111, "rougen"]], "RunningAverage": [[112, "runningaverage"]], "SSIM": [[113, "ssim"]], "TopKCategoricalAccuracy": [[114, "topkcategoricalaccuracy"]], "VariableAccumulation": [[115, "variableaccumulation"]], "CalinskiHarabaszScore": [[116, "calinskiharabaszscore"]], "DaviesBouldinScore": [[117, "daviesbouldinscore"]], "SilhouetteScore": [[118, "silhouettescore"]], "ConfusionMatrix": [[119, "confusionmatrix"]], "mIoU": [[120, "miou"]], "Metric": [[121, "metric"]], "MetricGroup": [[122, "metricgroup"]], "MetricsLambda": [[123, "metricslambda"]], "Precision": [[124, "precision"]], "Recall": [[125, "recall"]], "CanberraMetric": [[126, "canberrametric"]], "FractionalAbsoluteError": [[127, "fractionalabsoluteerror"]], "FractionalBias": [[128, "fractionalbias"]], "GeometricMeanAbsoluteError": [[129, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[130, "geometricmeanrelativeabsoluteerror"]], "KendallRankCorrelation": [[131, "kendallrankcorrelation"]], "ManhattanDistance": [[132, "manhattandistance"]], "MaximumAbsoluteError": [[133, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[134, "meanabsoluterelativeerror"]], "MeanError": [[135, "meanerror"]], "MeanNormalizedBias": [[136, "meannormalizedbias"]], "MedianAbsoluteError": [[137, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[138, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[139, "medianrelativeabsoluteerror"]], "PearsonCorrelation": [[140, "pearsoncorrelation"]], "R2Score": [[141, "r2score"]], "SpearmanRankCorrelation": [[142, "spearmanrankcorrelation"]], "WaveHedgesDistance": [[143, "wavehedgesdistance"]], "coco_tensor_list_to_dict_list": [[144, "coco-tensor-list-to-dict-list"]], "ignite.handlers": [[145, "ignite-handlers"]], "Complete list of generic handlers": [[145, "complete-list-of-generic-handlers"]], "Loggers": [[145, "loggers"]], "Parameter scheduler": [[145, "parameter-scheduler"]], "State Parameter scheduler": [[145, "state-parameter-scheduler"]], "More on parameter scheduling": [[145, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[145, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[145, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[145, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[145, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[145, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[145, "concatenate-with-torch-schedulers"]], "Example with ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[145, "example-with-ignite-handlers-param-scheduler-reducelronplateauscheduler"]], "Ignite Your Networks!": [[146, "ignite-your-networks"]], "Package Reference": [[146, null]], "Contrib Package Reference": [[146, null]], "ignite.metrics": [[147, "ignite-metrics"]], "Attach Engine API": [[147, "attach-engine-api"]], "Reset, Update, Compute API": [[147, "reset-update-compute-api"]], "Metric arithmetics": [[147, "metric-arithmetics"]], "How to create a custom metric": [[147, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[147, "metrics-and-its-usages"]], "Complete list of usages": [[147, "complete-list-of-usages"]], "Metrics and distributed computations": [[147, "metrics-and-distributed-computations"]], "Complete list of metrics": [[147, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[147, "helpers-for-customizing-metrics"]], "MetricUsage": [[147, "metricusage"]], "EpochWise": [[147, "epochwise"]], "RunningEpochWise": [[147, "runningepochwise"]], "BatchWise": [[147, "batchwise"]], "RunningBatchWise": [[147, "runningbatchwise"]], "SingleEpochRunningBatchWise": [[147, "singleepochrunningbatchwise"]], "BatchFiltered": [[147, "batchfiltered"]], "reinit__is_reduced": [[147, "reinit-is-reduced"]], "sync_all_reduce": [[147, "sync-all-reduce"]], "ignite.utils": [[148, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[0, "module-ignite.contrib.engines.tbptt"]], "module": [[0, "module-ignite.contrib.engines.common"], [0, "module-ignite.contrib.engines.tbptt"], [4, "module-ignite.distributed.utils"], [34, "module-ignite.handlers.base_logger"], [38, "module-ignite.handlers.clearml_logger"], [41, "module-ignite.handlers.fbresearch_logger"], [44, "module-ignite.handlers.mlflow_logger"], [45, "module-ignite.handlers.neptune_logger"], [57, "module-ignite.handlers.polyaxon_logger"], [65, "module-ignite.handlers.tensorboard_logger"], [70, "module-ignite.handlers.tqdm_logger"], [71, "module-ignite.handlers.visdom_logger"], [72, "module-ignite.handlers.wandb_logger"], [146, "module-ignite"], [146, "module-ignite.contrib"], [148, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_wandb_logging"]], "all_gather() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather"]], "all_gather_tensors_with_shapes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather_tensors_with_shapes"]], "all_reduce() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[4, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.model_name"]], "new_group() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.new_group"]], "one_rank_first() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_first"]], "one_rank_only() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[6, "ignite.exceptions.NotComputableError"]], "distributedproxysampler (class in ignite.distributed.auto)": [[8, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[9, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[10, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[11, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[12, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[12, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[13, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[14, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[15, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[15, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[16, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[16, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[17, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[18, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[19, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.has_event_handler"]], "interrupt() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.interrupt"]], "last_event_name (ignite.engine.engine.engine attribute)": [[19, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[19, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[20, "ignite.engine.events.CallableEventWithFilter"]], "before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.before_and_after_event_filter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.every_before_and_after_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[20, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[20, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[21, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[22, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "interrupt (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.INTERRUPT"]], "iteration_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[23, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[24, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[24, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[25, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[25, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[26, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[27, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[28, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[29, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[30, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[31, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[32, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[32, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[33, "ignite.handlers.TimeLimit"]], "basehandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseOutputHandler"]], "baseweightshandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseWeightsHandler"]], "baseweightsscalarhandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.handlers.base_logger": [[34, "module-ignite.handlers.base_logger"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[36, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reload_objects() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.reload_objects"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[37, "ignite.handlers.checkpoint.ModelCheckpoint"]], "clearmllogger (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[38, "ignite.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.handlers.clearml_logger.clearmlsaver method)": [[38, "ignite.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "get_task() (ignite.handlers.clearml_logger.clearmllogger method)": [[38, "ignite.handlers.clearml_logger.ClearMLLogger.get_task"]], "global_step_from_engine() (in module ignite.handlers.clearml_logger)": [[38, "ignite.handlers.clearml_logger.global_step_from_engine"]], "ignite.handlers.clearml_logger": [[38, "module-ignite.handlers.clearml_logger"]], "remove() (ignite.handlers.clearml_logger.clearmlsaver method)": [[38, "ignite.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[38, "ignite.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "earlystopping (class in ignite.handlers.early_stopping)": [[39, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[39, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[39, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[40, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[40, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[40, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "handle_buffers (ignite.handlers.ema_handler.emahandler attribute)": [[40, "ignite.handlers.ema_handler.EMAHandler.handle_buffers"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[40, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[40, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "fbresearchlogger (class in ignite.handlers.fbresearch_logger)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger"]], "attach() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger.attach"]], "ignite.handlers.fbresearch_logger": [[41, "module-ignite.handlers.fbresearch_logger"]], "log_completed() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_completed"]], "log_epoch_completed() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_epoch_completed"]], "log_epoch_started() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_epoch_started"]], "log_every() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[41, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_every"]], "global_step_from_engine() (in module ignite.handlers)": [[42, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[43, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "mlflowlogger (class in ignite.handlers.mlflow_logger)": [[44, "ignite.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.handlers.mlflow_logger)": [[44, "ignite.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.mlflow_logger)": [[44, "ignite.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.handlers.mlflow_logger)": [[44, "ignite.handlers.mlflow_logger.global_step_from_engine"]], "ignite.handlers.mlflow_logger": [[44, "module-ignite.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.neptune_logger)": [[45, "ignite.handlers.neptune_logger.global_step_from_engine"]], "ignite.handlers.neptune_logger": [[45, "module-ignite.handlers.neptune_logger"]], "remove() (ignite.handlers.neptune_logger.neptunesaver method)": [[45, "ignite.handlers.neptune_logger.NeptuneSaver.remove"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[46, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[47, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[47, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[47, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[47, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[47, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[48, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[48, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[49, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[50, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[50, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[50, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[51, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[51, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[52, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "get_param() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[52, "ignite.handlers.param_scheduler.ParamGroupScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[52, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[52, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[52, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[53, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[53, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[54, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[54, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "reducelronplateauscheduler (class in ignite.handlers.param_scheduler)": [[55, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler"]], "get_param() (ignite.handlers.param_scheduler.reducelronplateauscheduler method)": [[55, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.reducelronplateauscheduler class method)": [[55, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.simulate_values"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[56, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "optimizerparamshandler (class in ignite.handlers.polyaxon_logger)": [[57, "ignite.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.polyaxon_logger)": [[57, "ignite.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.handlers.polyaxon_logger)": [[57, "ignite.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.handlers.polyaxon_logger)": [[57, "ignite.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.handlers.polyaxon_logger": [[57, "module-ignite.handlers.polyaxon_logger"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[58, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[58, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[59, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[59, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[60, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[60, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[61, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[61, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[62, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[62, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[62, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[63, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[63, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[64, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[64, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[64, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[64, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[64, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[64, "ignite.handlers.stores.EpochOutputStore.update"]], "gradshisthandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.tensorboard_logger)": [[65, "ignite.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.handlers.tensorboard_logger": [[65, "module-ignite.handlers.tensorboard_logger"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[66, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[67, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[67, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[67, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[67, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[67, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[68, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[68, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[68, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[68, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[68, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[69, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[69, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[69, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[69, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[69, "ignite.handlers.timing.Timer.value"]], "progressbar (class in ignite.handlers.tqdm_logger)": [[70, "ignite.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.handlers.tqdm_logger.progressbar method)": [[70, "ignite.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.handlers.tqdm_logger.progressbar method)": [[70, "ignite.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.handlers.tqdm_logger": [[70, "module-ignite.handlers.tqdm_logger"]], "log_message() (ignite.handlers.tqdm_logger.progressbar method)": [[70, "ignite.handlers.tqdm_logger.ProgressBar.log_message"]], "gradsscalarhandler (class in ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.visdom_logger)": [[71, "ignite.handlers.visdom_logger.global_step_from_engine"]], "ignite.handlers.visdom_logger": [[71, "module-ignite.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.handlers.wandb_logger)": [[72, "ignite.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.wandb_logger)": [[72, "ignite.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.handlers.wandb_logger)": [[72, "ignite.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.handlers.wandb_logger)": [[72, "ignite.handlers.wandb_logger.global_step_from_engine"]], "ignite.handlers.wandb_logger": [[72, "module-ignite.handlers.wandb_logger"]], "accuracy (class in ignite.metrics)": [[73, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[73, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[73, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[73, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[74, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[74, "ignite.metrics.Average.compute"]], "averageprecision (class in ignite.metrics)": [[75, "ignite.metrics.AveragePrecision"]], "bleu (class in ignite.metrics)": [[76, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[76, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[76, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[76, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[77, "ignite.metrics.ClassificationReport"]], "cohenkappa (class in ignite.metrics)": [[78, "ignite.metrics.CohenKappa"]], "commonobjectdetectionmetrics (class in ignite.metrics)": [[79, "ignite.metrics.CommonObjectDetectionMetrics"]], "compute() (ignite.metrics.commonobjectdetectionmetrics method)": [[79, "ignite.metrics.CommonObjectDetectionMetrics.compute"]], "reset() (ignite.metrics.commonobjectdetectionmetrics method)": [[79, "ignite.metrics.CommonObjectDetectionMetrics.reset"]], "update() (ignite.metrics.commonobjectdetectionmetrics method)": [[79, "ignite.metrics.CommonObjectDetectionMetrics.update"]], "cosinesimilarity (class in ignite.metrics)": [[80, "ignite.metrics.CosineSimilarity"]], "compute() (ignite.metrics.cosinesimilarity method)": [[80, "ignite.metrics.CosineSimilarity.compute"]], "reset() (ignite.metrics.cosinesimilarity method)": [[80, "ignite.metrics.CosineSimilarity.reset"]], "update() (ignite.metrics.cosinesimilarity method)": [[80, "ignite.metrics.CosineSimilarity.update"]], "dicecoefficient() (in module ignite.metrics)": [[81, "ignite.metrics.DiceCoefficient"]], "entropy (class in ignite.metrics)": [[82, "ignite.metrics.Entropy"]], "compute() (ignite.metrics.entropy method)": [[82, "ignite.metrics.Entropy.compute"]], "reset() (ignite.metrics.entropy method)": [[82, "ignite.metrics.Entropy.reset"]], "update() (ignite.metrics.entropy method)": [[82, "ignite.metrics.Entropy.update"]], "epochmetric (class in ignite.metrics)": [[83, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[83, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[83, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[83, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[84, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[84, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[84, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[84, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[85, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[86, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[86, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[86, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[86, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[86, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[86, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[87, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[87, "ignite.metrics.GeometricAverage.compute"]], "gpuinfo (class in ignite.metrics)": [[88, "ignite.metrics.GpuInfo"]], "attach() (ignite.metrics.gpuinfo method)": [[88, "ignite.metrics.GpuInfo.attach"]], "completed() (ignite.metrics.gpuinfo method)": [[88, "ignite.metrics.GpuInfo.completed"]], "compute() (ignite.metrics.gpuinfo method)": [[88, "ignite.metrics.GpuInfo.compute"]], "reset() (ignite.metrics.gpuinfo method)": [[88, "ignite.metrics.GpuInfo.reset"]], "update() (ignite.metrics.gpuinfo method)": [[88, "ignite.metrics.GpuInfo.update"]], "hsic (class in ignite.metrics)": [[89, "ignite.metrics.HSIC"]], "compute() (ignite.metrics.hsic method)": [[89, "ignite.metrics.HSIC.compute"]], "reset() (ignite.metrics.hsic method)": [[89, "ignite.metrics.HSIC.reset"]], "update() (ignite.metrics.hsic method)": [[89, "ignite.metrics.HSIC.update"]], "inceptionscore (class in ignite.metrics)": [[90, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[90, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[90, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[90, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[91, "ignite.metrics.IoU"]], "jsdivergence (class in ignite.metrics)": [[92, "ignite.metrics.JSDivergence"]], "compute() (ignite.metrics.jsdivergence method)": [[92, "ignite.metrics.JSDivergence.compute"]], "jaccardindex() (in module ignite.metrics)": [[93, "ignite.metrics.JaccardIndex"]], "kldivergence (class in ignite.metrics)": [[94, "ignite.metrics.KLDivergence"]], "compute() (ignite.metrics.kldivergence method)": [[94, "ignite.metrics.KLDivergence.compute"]], "reset() (ignite.metrics.kldivergence method)": [[94, "ignite.metrics.KLDivergence.reset"]], "update() (ignite.metrics.kldivergence method)": [[94, "ignite.metrics.KLDivergence.update"]], "loss (class in ignite.metrics)": [[95, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[95, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[95, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[95, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[95, "ignite.metrics.Loss.update"]], "maximummeandiscrepancy (class in ignite.metrics)": [[96, "ignite.metrics.MaximumMeanDiscrepancy"]], "compute() (ignite.metrics.maximummeandiscrepancy method)": [[96, "ignite.metrics.MaximumMeanDiscrepancy.compute"]], "reset() (ignite.metrics.maximummeandiscrepancy method)": [[96, "ignite.metrics.MaximumMeanDiscrepancy.reset"]], "update() (ignite.metrics.maximummeandiscrepancy method)": [[96, "ignite.metrics.MaximumMeanDiscrepancy.update"]], "meanabsoluteerror (class in ignite.metrics)": [[97, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[97, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[97, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[97, "ignite.metrics.MeanAbsoluteError.update"]], "meanaverageprecision (class in ignite.metrics)": [[98, "ignite.metrics.MeanAveragePrecision"]], "compute() (ignite.metrics.meanaverageprecision method)": [[98, "ignite.metrics.MeanAveragePrecision.compute"]], "reset() (ignite.metrics.meanaverageprecision method)": [[98, "ignite.metrics.MeanAveragePrecision.reset"]], "update() (ignite.metrics.meanaverageprecision method)": [[98, "ignite.metrics.MeanAveragePrecision.update"]], "meanpairwisedistance (class in ignite.metrics)": [[99, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[99, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[99, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[99, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[100, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[100, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[100, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[100, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[101, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[101, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[101, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[101, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "mutualinformation (class in ignite.metrics)": [[102, "ignite.metrics.MutualInformation"]], "compute() (ignite.metrics.mutualinformation method)": [[102, "ignite.metrics.MutualInformation.compute"]], "reset() (ignite.metrics.mutualinformation method)": [[102, "ignite.metrics.MutualInformation.reset"]], "objectdetectionavgprecisionrecall (class in ignite.metrics)": [[103, "ignite.metrics.ObjectDetectionAvgPrecisionRecall"]], "compute() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[103, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.compute"]], "reset() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[103, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.reset"]], "update() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[103, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.update"]], "psnr (class in ignite.metrics)": [[104, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[104, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[104, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[104, "ignite.metrics.PSNR.update"]], "precisionrecallcurve (class in ignite.metrics)": [[105, "ignite.metrics.PrecisionRecallCurve"]], "compute() (ignite.metrics.precisionrecallcurve method)": [[105, "ignite.metrics.PrecisionRecallCurve.compute"]], "roc_auc (class in ignite.metrics)": [[106, "ignite.metrics.ROC_AUC"]], "roccurve (class in ignite.metrics)": [[107, "ignite.metrics.RocCurve"]], "compute() (ignite.metrics.roccurve method)": [[107, "ignite.metrics.RocCurve.compute"]], "rootmeansquarederror (class in ignite.metrics)": [[108, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[108, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[109, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[109, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[109, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[109, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[110, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[111, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[112, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[112, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[112, "ignite.metrics.RunningAverage.compute"]], "detach() (ignite.metrics.runningaverage method)": [[112, "ignite.metrics.RunningAverage.detach"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[112, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[112, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[112, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[113, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[113, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[113, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[113, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[114, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[114, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[114, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[114, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[115, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[115, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[115, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[115, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[115, "ignite.metrics.VariableAccumulation.update"]], "calinskiharabaszscore (class in ignite.metrics.clustering)": [[116, "ignite.metrics.clustering.CalinskiHarabaszScore"]], "daviesbouldinscore (class in ignite.metrics.clustering)": [[117, "ignite.metrics.clustering.DaviesBouldinScore"]], "silhouettescore (class in ignite.metrics.clustering)": [[118, "ignite.metrics.clustering.SilhouetteScore"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[119, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[119, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[119, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[119, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[119, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[120, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[121, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.iteration_completed"]], "load_state_dict() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.load_state_dict"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[121, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.started"]], "state_dict() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.state_dict"]], "update() (ignite.metrics.metric.metric method)": [[121, "ignite.metrics.metric.Metric.update"]], "metricgroup (class in ignite.metrics.metric_group)": [[122, "ignite.metrics.metric_group.MetricGroup"]], "compute() (ignite.metrics.metric_group.metricgroup method)": [[122, "ignite.metrics.metric_group.MetricGroup.compute"]], "reset() (ignite.metrics.metric_group.metricgroup method)": [[122, "ignite.metrics.metric_group.MetricGroup.reset"]], "update() (ignite.metrics.metric_group.metricgroup method)": [[122, "ignite.metrics.metric_group.MetricGroup.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[123, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[124, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[124, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[125, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[125, "ignite.metrics.recall.Recall.update"]], "canberrametric (class in ignite.metrics.regression)": [[126, "ignite.metrics.regression.CanberraMetric"]], "compute() (ignite.metrics.regression.canberrametric method)": [[126, "ignite.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.metrics.regression.canberrametric method)": [[126, "ignite.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.metrics.regression)": [[127, "ignite.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.metrics.regression.fractionalabsoluteerror method)": [[127, "ignite.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.metrics.regression.fractionalabsoluteerror method)": [[127, "ignite.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.metrics.regression)": [[128, "ignite.metrics.regression.FractionalBias"]], "compute() (ignite.metrics.regression.fractionalbias method)": [[128, "ignite.metrics.regression.FractionalBias.compute"]], "reset() (ignite.metrics.regression.fractionalbias method)": [[128, "ignite.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.metrics.regression)": [[129, "ignite.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.metrics.regression.geometricmeanabsoluteerror method)": [[129, "ignite.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.metrics.regression.geometricmeanabsoluteerror method)": [[129, "ignite.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.metrics.regression)": [[130, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[130, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[130, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "kendallrankcorrelation (class in ignite.metrics.regression)": [[131, "ignite.metrics.regression.KendallRankCorrelation"]], "compute() (ignite.metrics.regression.kendallrankcorrelation method)": [[131, "ignite.metrics.regression.KendallRankCorrelation.compute"]], "update() (ignite.metrics.regression.kendallrankcorrelation method)": [[131, "ignite.metrics.regression.KendallRankCorrelation.update"]], "manhattandistance (class in ignite.metrics.regression)": [[132, "ignite.metrics.regression.ManhattanDistance"]], "compute() (ignite.metrics.regression.manhattandistance method)": [[132, "ignite.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.metrics.regression.manhattandistance method)": [[132, "ignite.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.metrics.regression)": [[133, "ignite.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.metrics.regression.maximumabsoluteerror method)": [[133, "ignite.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.metrics.regression.maximumabsoluteerror method)": [[133, "ignite.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.metrics.regression)": [[134, "ignite.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.metrics.regression.meanabsoluterelativeerror method)": [[134, "ignite.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.metrics.regression.meanabsoluterelativeerror method)": [[134, "ignite.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.metrics.regression)": [[135, "ignite.metrics.regression.MeanError"]], "compute() (ignite.metrics.regression.meanerror method)": [[135, "ignite.metrics.regression.MeanError.compute"]], "reset() (ignite.metrics.regression.meanerror method)": [[135, "ignite.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.metrics.regression)": [[136, "ignite.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.metrics.regression.meannormalizedbias method)": [[136, "ignite.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.metrics.regression.meannormalizedbias method)": [[136, "ignite.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.metrics.regression)": [[137, "ignite.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.metrics.regression)": [[138, "ignite.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.metrics.regression)": [[139, "ignite.metrics.regression.MedianRelativeAbsoluteError"]], "pearsoncorrelation (class in ignite.metrics.regression)": [[140, "ignite.metrics.regression.PearsonCorrelation"]], "compute() (ignite.metrics.regression.pearsoncorrelation method)": [[140, "ignite.metrics.regression.PearsonCorrelation.compute"]], "reset() (ignite.metrics.regression.pearsoncorrelation method)": [[140, "ignite.metrics.regression.PearsonCorrelation.reset"]], "r2score (class in ignite.metrics.regression)": [[141, "ignite.metrics.regression.R2Score"]], "compute() (ignite.metrics.regression.r2score method)": [[141, "ignite.metrics.regression.R2Score.compute"]], "reset() (ignite.metrics.regression.r2score method)": [[141, "ignite.metrics.regression.R2Score.reset"]], "spearmanrankcorrelation (class in ignite.metrics.regression)": [[142, "ignite.metrics.regression.SpearmanRankCorrelation"]], "compute() (ignite.metrics.regression.spearmanrankcorrelation method)": [[142, "ignite.metrics.regression.SpearmanRankCorrelation.compute"]], "update() (ignite.metrics.regression.spearmanrankcorrelation method)": [[142, "ignite.metrics.regression.SpearmanRankCorrelation.update"]], "wavehedgesdistance (class in ignite.metrics.regression)": [[143, "ignite.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.metrics.regression.wavehedgesdistance method)": [[143, "ignite.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.metrics.regression.wavehedgesdistance method)": [[143, "ignite.metrics.regression.WaveHedgesDistance.reset"]], "coco_tensor_list_to_dict_list() (in module ignite.metrics.vision.object_detection_average_precision_recall)": [[144, "ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list"]], "ignite": [[146, "module-ignite"]], "ignite.contrib": [[146, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.MetricUsage"]], "runningbatchwise (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.RunningBatchWise"]], "runningepochwise (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.RunningEpochWise"]], "singleepochrunningbatchwise (class in ignite.metrics.metric)": [[147, "ignite.metrics.metric.SingleEpochRunningBatchWise"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[147, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[147, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[147, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[147, "ignite.metrics.metric.EpochWise.usage_name"]], "usage_name (ignite.metrics.metric.runningbatchwise attribute)": [[147, "ignite.metrics.metric.RunningBatchWise.usage_name"]], "usage_name (ignite.metrics.metric.runningepochwise attribute)": [[147, "ignite.metrics.metric.RunningEpochWise.usage_name"]], "usage_name (ignite.metrics.metric.singleepochrunningbatchwise attribute)": [[147, "ignite.metrics.metric.SingleEpochRunningBatchWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[148, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[148, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[148, "ignite.utils.convert_tensor"]], "hash_checkpoint() (in module ignite.utils)": [[148, "ignite.utils.hash_checkpoint"]], "ignite.utils": [[148, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[148, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[148, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[148, "ignite.utils.to_onehot"]]}})