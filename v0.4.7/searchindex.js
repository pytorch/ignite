Search.setIndex({"docnames": ["about", "concepts", "contrib/engines", "contrib/handlers", "contrib/metrics", "distributed", "engine", "examples", "exceptions", "faq", "generated/ignite.contrib.handlers.base_logger", "generated/ignite.contrib.handlers.clearml_logger", "generated/ignite.contrib.handlers.mlflow_logger", "generated/ignite.contrib.handlers.neptune_logger", "generated/ignite.contrib.handlers.polyaxon_logger", "generated/ignite.contrib.handlers.tensorboard_logger", "generated/ignite.contrib.handlers.tqdm_logger", "generated/ignite.contrib.handlers.trains_logger", "generated/ignite.contrib.handlers.visdom_logger", "generated/ignite.contrib.handlers.wandb_logger", "generated/ignite.contrib.metrics.AveragePrecision", "generated/ignite.contrib.metrics.CohenKappa", "generated/ignite.contrib.metrics.GpuInfo", "generated/ignite.contrib.metrics.PrecisionRecallCurve", "generated/ignite.contrib.metrics.ROC_AUC", "generated/ignite.contrib.metrics.RocCurve", "generated/ignite.contrib.metrics.regression.CanberraMetric", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError", "generated/ignite.contrib.metrics.regression.FractionalBias", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.ManhattanDistance", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.contrib.metrics.regression.MeanError", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.R2Score", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "governance", "handlers", "index", "metrics", "quickstart", "utils"], "filenames": ["about.rst", "concepts.rst", "contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "distributed.rst", "engine.rst", "examples.rst", "exceptions.rst", "faq.rst", "generated/ignite.contrib.handlers.base_logger.rst", "generated/ignite.contrib.handlers.clearml_logger.rst", "generated/ignite.contrib.handlers.mlflow_logger.rst", "generated/ignite.contrib.handlers.neptune_logger.rst", "generated/ignite.contrib.handlers.polyaxon_logger.rst", "generated/ignite.contrib.handlers.tensorboard_logger.rst", "generated/ignite.contrib.handlers.tqdm_logger.rst", "generated/ignite.contrib.handlers.trains_logger.rst", "generated/ignite.contrib.handlers.visdom_logger.rst", "generated/ignite.contrib.handlers.wandb_logger.rst", "generated/ignite.contrib.metrics.AveragePrecision.rst", "generated/ignite.contrib.metrics.CohenKappa.rst", "generated/ignite.contrib.metrics.GpuInfo.rst", "generated/ignite.contrib.metrics.PrecisionRecallCurve.rst", "generated/ignite.contrib.metrics.ROC_AUC.rst", "generated/ignite.contrib.metrics.RocCurve.rst", "generated/ignite.contrib.metrics.regression.CanberraMetric.rst", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.FractionalBias.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.ManhattanDistance.rst", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.contrib.metrics.regression.MeanError.rst", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.R2Score.rst", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "governance.rst", "handlers.rst", "index.rst", "metrics.rst", "quickstart.rst", "utils.rst"], "titles": ["About us", "Concepts", "ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "ignite.distributed", "ignite.engine", "Examples", "ignite.exceptions", "FAQ", "base_logger", "clearml_logger", "mlflow_logger", "neptune_logger", "polyaxon_logger", "tensorboard_logger", "tqdm_logger", "trains_logger", "visdom_logger", "wandb_logger", "AveragePrecision", "CohenKappa", "GpuInfo", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "R2Score", "WaveHedgesDistance", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "BaseSaveHandler", "Checkpoint", "ModelCheckpoint", "EarlyStopping", "EMAHandler", "global_step_from_engine", "FastaiLRFinder", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "create_lr_scheduler_with_warmup", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "Accuracy", "Average", "Bleu", "ClassificationReport", "DiceCoefficient", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "InceptionScore", "IoU", "JaccardIndex", "Loss", "MeanAbsoluteError", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "PSNR", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "ConfusionMatrix", "mIoU", "Metric", "MetricsLambda", "Precision", "Recall", "PyTorch-Ignite governance", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "Quick start", "ignite.utils"], "terms": {"thi": [0, 1, 2, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 75, 78, 80, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "project": [0, 13, 19, 128, 130, 132], "wa": [0, 2, 3, 13, 17, 45, 94], "start": [0, 1, 2, 9, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 46, 47, 48, 49, 52, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 69, 73, 75, 76, 77, 79, 83, 84, 86, 89, 92, 94, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131, 133], "alykhan": 0, "tejani": 0, "alykhantejani": 0, "francisco": 0, "massa": 0, "fmassa": 0, "joost": 0, "van": 0, "amersfoort": 0, "y0ast": 0, "end": [0, 1, 2, 6, 14, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 52, 55, 73, 76, 77, 79, 82, 83, 87, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 132], "2017": [0, 76], "highli": 0, "inspir": [0, 7, 97, 101], "torchnet": 0, "In": [0, 1, 2, 5, 6, 9, 11, 22, 30, 43, 67, 68, 78, 95, 97, 100, 101, 108, 122, 124, 126, 127, 129, 131, 132], "2018": [0, 4, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 105], "had": 0, "grown": 0, "first": [0, 1, 6, 13, 20, 21, 23, 24, 25, 45, 52, 58, 68, 75, 76, 78, 82, 83, 87, 96, 100, 104, 108, 121, 132, 133], "public": [0, 121, 124], "releas": [0, 6], "publish": 0, "june": 0, "sinc": [0, 1, 2, 3, 11, 12, 13, 14, 15, 18, 19, 47, 52, 55, 69, 70, 71, 131], "sever": [0, 1, 7, 9, 124, 125, 132], "have": [0, 1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 52, 68, 71, 78, 88, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 131], "appear": 0, "follow": [0, 1, 9, 42, 43, 52, 54, 58, 68, 71, 95, 96, 104, 112, 121, 122, 124, 126, 127, 131, 132], "5": [0, 1, 2, 5, 6, 9, 13, 16, 22, 27, 28, 29, 32, 33, 35, 40, 45, 46, 47, 52, 55, 59, 60, 61, 62, 63, 64, 68, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 87, 88, 89, 90, 97, 103, 112, 115, 116, 117, 119, 120, 124, 129, 131, 133], "month": [0, 128], "cycl": [0, 7, 75, 76, 77, 79], "thrive": 0, "intern": [0, 1, 2, 6, 20, 21, 24, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 52, 53, 58, 59, 60, 68, 69, 70, 81, 88, 94, 98, 100, 131, 133], "commun": [0, 11, 128], "lead": [0, 30, 36, 37, 38, 90, 100, 126, 127], "i": [0, 1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133], "numfocu": 0, "affili": 0, "open": [0, 7, 16, 52], "sourc": [0, 1, 2, 5, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133], "effort": 0, "The": [0, 1, 2, 5, 11, 44, 46, 47, 52, 53, 55, 59, 60, 68, 71, 73, 75, 76, 84, 86, 91, 98, 101, 105, 108, 112, 113, 116, 117, 118, 119, 121, 122, 124, 125, 128, 130, 131, 132], "": [0, 1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 52, 55, 59, 60, 61, 62, 63, 64, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 82, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133], "organ": [0, 128], "due": [0, 16], "larg": [0, 132], "part": [0, 68, 73, 132], "histor": 0, "reason": 0, "ha": [0, 1, 2, 11, 46, 47, 52, 55, 59, 60, 61, 62, 63, 64, 68, 69, 97, 112, 115, 122, 130, 131], "same": [0, 2, 6, 9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 48, 49, 68, 71, 73, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "implic": [0, 128], "other": [0, 1, 2, 5, 11, 43, 44, 45, 46, 47, 48, 52, 59, 60, 61, 62, 63, 64, 68, 71, 73, 108, 113, 122, 124, 125, 130, 131], "from": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 52, 54, 55, 57, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "ecosystem": 0, "decis": [0, 128], "make": [0, 5, 6, 42, 43, 52, 67, 68, 78, 128], "process": [0, 1, 2, 5, 9, 11, 19, 22, 30, 41, 42, 43, 44, 45, 47, 67, 68, 71, 92, 93, 94, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 133], "structur": [0, 1, 6, 68, 128], "describ": [0, 6, 128], "document": [0, 2, 9, 19, 46, 47, 128], "peopl": 0, "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 48, 52, 55, 65, 67, 68, 69, 71, 73, 75, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133], "current": [0, 1, 5, 13, 16, 22, 30, 36, 37, 38, 41, 43, 45, 48, 51, 52, 53, 55, 68, 69, 71, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 87, 88, 89, 94, 100, 103, 118, 124, 125, 126, 127, 131], "contributor": 0, "mainten": 0, "victor": 0, "fomin": 0, "vfdev": 0, "sylvain": 0, "desrozi": 0, "sdesrozi": 0, "tara": 0, "savchyn": 0, "trsvchn": 0, "been": [0, 11, 16, 52, 69], "activ": [0, 20, 23, 24, 25, 68, 128], "past": [0, 128], "longer": 0, "jason": 0, "kriss": 0, "jasonkriss": 0, "anmol": 0, "joshi": 0, "anmolsjoshi": 0, "we": [0, 1, 5, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 42, 43, 44, 73, 78, 101, 105, 108, 124, 131, 132], "look": [0, 6, 16, 22, 103, 133], "motiv": 0, "becom": [0, 52, 55, 128], "collabor": 0, "help": [0, 1, 5, 7, 11, 12, 13, 14, 15, 18, 19, 49, 72, 130, 131], "out": [0, 1, 122, 130, 131], "can": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 52, 54, 55, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "consid": [0, 1, 69, 70, 125], "candid": [0, 115, 116, 117], "after": [0, 1, 6, 11, 12, 13, 14, 15, 16, 18, 19, 46, 47, 52, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 73, 83, 90, 92, 93, 118], "successfulli": 0, "merg": [0, 128], "github": [0, 7, 9, 18, 41, 47, 73, 128, 130], "pull": [0, 128, 130], "request": [0, 128], "If": [0, 1, 2, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 42, 45, 46, 47, 48, 52, 59, 60, 65, 68, 69, 71, 76, 77, 79, 83, 90, 98, 100, 101, 103, 105, 108, 122, 124, 125, 126, 127, 131, 133], "you": [0, 1, 9, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 59, 60, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 130, 131, 132], "interest": [0, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 128, 131, 132], "more": [0, 1, 2, 5, 6, 9, 11, 12, 13, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 46, 47, 48, 50, 52, 55, 69, 73, 81, 88, 97, 101, 105, 115, 116, 117, 122, 124, 125, 128, 130, 131, 132], "detail": [0, 1, 2, 3, 5, 6, 9, 12, 13, 16, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 48, 50, 52, 68, 69, 97, 101, 105, 115, 116, 117, 122, 128, 130, 131, 132], "pleas": [0, 1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 42, 43, 45, 48, 50, 52, 67, 68, 69, 73, 101, 105, 113, 130, 131, 132], "contact": 0, "4458": 0, "discord": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133], "scientif": 0, "would": [0, 1, 9, 68, 125, 126, 127, 131], "appreci": 0, "citat": 0, "misc": 0, "v": [0, 7, 130], "j": [0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 106, 107, 112, 113], "A": [0, 1, 2, 9, 22, 30, 38, 39, 48, 52, 53, 57, 68, 69, 70, 78, 106, 107, 113, 119, 131], "titl": [0, 1, 11, 12, 13, 14, 15, 18, 19, 129], "high": [0, 130], "level": [0, 5, 130, 133], "librari": [0, 1, 6, 13, 101, 131, 132], "train": [0, 1, 2, 5, 11, 12, 13, 14, 15, 16, 18, 19, 22, 41, 45, 46, 47, 52, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 74, 76, 81, 84, 85, 86, 88, 89, 91, 92, 93, 101, 124, 125, 130, 132, 133], "neural": [0, 7, 73, 76, 130], "network": [0, 7, 73, 76, 122], "year": 0, "2020": [0, 133], "journal": 0, "repositori": [0, 128], "howpublish": 0, "url": [0, 18], "http": [0, 7, 13, 18, 41, 47, 73, 84, 86, 89, 97, 124, 130], "com": [0, 7, 18, 41, 73, 130], "gratefulli": 0, "contribut": [0, 2, 3, 122, 128], "all": [0, 1, 5, 7, 11, 12, 13, 14, 15, 16, 18, 19, 22, 30, 36, 37, 38, 42, 43, 44, 47, 52, 54, 64, 67, 68, 69, 73, 100, 102, 108, 124, 125, 126, 127, 128, 130, 131], "who": [0, 128], "get": [0, 1, 2, 9, 11, 58, 67, 68, 71, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 87, 89, 122, 130, 131, 132], "off": 0, "ground": [0, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 109, 111, 112, 114, 122], "support": [0, 1, 2, 5, 11, 13, 42, 43, 44, 45, 52, 68, 131], "especi": 0, "amaz": 0, "work": [0, 5, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 81, 88, 94, 97, 115, 130], "isabela": 0, "presedo": 0, "floyd": 0, "pf": 0, "logo": 0, "its": [0, 1, 6, 10, 11, 12, 13, 14, 15, 18, 19, 44, 45, 48, 52, 68, 69, 83, 112, 125, 130], "elabor": 0, "guidelin": 0, "our": [0, 1, 128, 130, 132], "new": [0, 5, 44, 51, 52, 59, 60, 61, 62, 63, 64, 66, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 97, 101, 105, 112, 113, 115, 116, 117, 119, 125, 128, 131, 133], "found": [0, 1, 5, 6, 9, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 52, 73, 97, 101, 105, 108, 115, 116, 117, 124, 132], "here": [0, 5, 6, 9, 13, 52, 101, 131, 132], "also": [0, 1, 2, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 48, 52, 54, 55, 68, 73, 93, 101, 131, 132], "grate": 0, "soumith": 0, "chintala": 0, "joe": 0, "spisak": 0, "jspisak": 0, "facebook": 0, "group": [0, 5, 9, 45, 76, 77, 79, 80, 81, 82], "infrastructur": 0, "gpu": [0, 2, 5, 7, 9, 22, 45, 46, 47, 59, 60, 61, 62, 63, 64, 130, 131], "ci": 0, "host": [0, 2, 5, 46, 47, 59, 60, 61, 62, 63, 64, 130, 133], "conda": [0, 130], "particular": 0, "magellium": 0, "quansight": 0, "ifpen": 0, "scikit": [0, 21, 26, 31, 98], "learn": [0, 1, 2, 7, 11, 12, 13, 14, 15, 18, 19, 21, 26, 31, 68, 73, 75, 76, 79, 81, 82, 83, 88, 98, 129, 130], "present": [0, 2, 52, 112], "etc": [0, 1, 2, 6, 9, 11, 19, 45, 52, 68, 133], "which": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 46, 52, 53, 55, 59, 60, 68, 69, 71, 72, 73, 76, 77, 79, 88, 94, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132], "essenc": 1, "framework": [1, 5, 43, 45], "class": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133], "an": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 46, 47, 48, 49, 52, 55, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 85, 88, 90, 92, 93, 94, 96, 100, 101, 104, 105, 108, 113, 118, 122, 124, 128, 130, 131, 132, 133], "abstract": [1, 67, 74, 77, 81, 88, 124, 132], "loop": [1, 7, 9, 52, 132], "given": [1, 5, 6, 22, 43, 45, 52, 58, 68, 70, 73, 75, 92, 93, 99, 105, 122, 132], "number": [1, 2, 5, 11, 12, 13, 14, 15, 16, 18, 19, 41, 42, 45, 47, 52, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 88, 91, 96, 101, 103, 104, 105, 112, 121, 122, 124, 133], "time": [1, 11, 12, 13, 14, 15, 18, 19, 52, 58, 66, 68, 73, 92, 93, 94, 130, 133], "over": [1, 2, 9, 11, 13, 15, 18, 52, 73, 75, 76, 77, 79, 82, 87, 106, 108, 123, 131, 132], "provid": [1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 18, 19, 22, 42, 43, 44, 45, 48, 49, 52, 55, 67, 68, 69, 70, 72, 73, 83, 102, 103, 108, 110, 118, 124, 125, 130, 131], "data": [1, 2, 5, 6, 18, 20, 21, 22, 23, 24, 25, 30, 36, 37, 38, 41, 42, 46, 47, 48, 49, 52, 55, 57, 58, 59, 60, 68, 70, 90, 92, 93, 95, 100, 101, 103, 105, 108, 112, 113, 118, 122, 124, 125, 126, 127, 130, 131, 132, 133], "execut": [1, 5, 6, 10, 45, 50, 52, 53, 55, 73, 83, 94, 100, 132], "function": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 84, 86, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133], "return": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133], "result": [1, 22, 30, 53, 73, 92, 93, 98, 100, 103, 124, 125, 131, 132], "while": [1, 2, 6, 9, 11, 12, 13, 14, 15, 18, 19, 42, 50, 72, 73, 128, 130], "epoch": [1, 2, 6, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 48, 52, 55, 57, 58, 68, 69, 70, 72, 76, 77, 79, 90, 92, 94, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 131, 132, 133], "max_epoch": [1, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 48, 52, 58, 68, 69, 73, 84, 85, 86, 87, 89, 92, 93, 132, 133], "run": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 45, 48, 52, 53, 55, 57, 58, 68, 69, 70, 71, 73, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 103, 106, 107, 108, 113, 118, 123, 124, 125, 130, 131, 132, 133], "data_it": [1, 9], "iter": [1, 2, 6, 11, 12, 13, 14, 15, 16, 18, 19, 22, 46, 47, 48, 49, 52, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 82, 87, 92, 103, 130, 132], "true": [1, 2, 5, 6, 9, 11, 13, 16, 18, 20, 21, 22, 23, 24, 25, 42, 43, 46, 47, 48, 53, 55, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 73, 94, 95, 98, 100, 102, 103, 109, 111, 112, 114, 118, 119, 126, 127, 129, 131, 133], "try": 1, "batch": [1, 2, 5, 6, 9, 20, 21, 22, 23, 24, 25, 42, 46, 47, 48, 49, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 73, 76, 77, 79, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132], "next": [1, 52, 55, 82, 87, 132], "output": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 83, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133], "process_funct": [1, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 52, 58, 90, 91, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 131], "iter_count": 1, "1": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48, 52, 55, 58, 61, 62, 63, 64, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 131, 132, 133], "except": [1, 5, 55, 65, 69, 113, 130, 131], "stopiter": [1, 52], "epoch_length": [1, 6, 9, 48, 52, 58, 73], "break": [1, 132], "thu": [1, 5, 6, 9, 132], "model": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 52, 59, 60, 61, 62, 63, 64, 68, 69, 71, 73, 76, 80, 90, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 131, 132], "trainer": [1, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 47, 52, 54, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 88, 90, 91, 92, 93, 94, 103, 118, 130, 132, 133], "simpli": [1, 9, 16, 113, 119], "multipl": [1, 5, 6, 7, 9, 45, 68, 69, 71, 80, 84, 86, 89, 91, 115, 131], "dataset": [1, 5, 7, 9, 11, 12, 13, 14, 15, 18, 19, 42, 52, 70, 96, 132], "updat": [1, 2, 9, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 47, 54, 61, 62, 63, 64, 71, 74, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130], "paramet": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133], "similarli": 1, "evalu": [1, 9, 11, 12, 13, 14, 15, 18, 19, 46, 52, 59, 60, 68, 70, 71, 72, 96, 108, 122, 124, 130, 131, 132, 133], "done": [1, 5, 6, 13, 15, 18, 19, 48, 52, 95, 113, 124, 125, 126, 127, 131, 132], "singl": [1, 2, 5, 7, 13, 16, 45, 53, 57, 58, 67, 68, 69, 70, 80, 91, 94, 96, 104, 121, 122], "valid": [1, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 52, 68, 70, 71, 97, 103, 115, 116, 117, 118, 124, 125, 130, 131, 132], "comput": [1, 2, 5, 6, 8, 9, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 66, 68, 71, 76, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 132], "For": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 44, 45, 46, 47, 48, 50, 59, 60, 61, 62, 63, 64, 68, 73, 91, 96, 104, 112, 113, 121, 122, 124, 125, 130, 131, 132], "exampl": [1, 3, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 49, 52, 54, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133], "supervis": [1, 2, 46, 47, 59, 60, 61, 62, 63, 64, 73, 130], "task": [1, 4, 5, 6, 7, 11, 23, 25], "def": [1, 5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 45, 48, 52, 54, 55, 56, 57, 70, 71, 85, 90, 92, 93, 95, 98, 113, 118, 119, 122, 124, 125, 126, 127, 131, 132], "train_step": [1, 9, 52, 84, 85, 86, 87, 89, 132], "optim": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 43, 44, 46, 47, 52, 54, 59, 60, 61, 62, 63, 64, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 129, 132], "zero_grad": [1, 9, 52, 132], "x": [1, 2, 5, 9, 14, 16, 22, 46, 47, 52, 59, 60, 61, 62, 63, 64, 68, 90, 96, 103, 104, 105, 108, 118, 121, 122, 124, 131, 132, 133], "y": [1, 5, 9, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 52, 54, 59, 60, 61, 62, 63, 64, 95, 97, 98, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 126, 127, 131, 132], "prepare_batch": [1, 2, 9, 46, 47, 52, 59, 60, 61, 62, 63, 64], "y_pred": [1, 9, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 52, 54, 59, 60, 61, 62, 63, 64, 95, 97, 98, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 126, 127, 131, 132], "loss": [1, 2, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 52, 54, 61, 62, 63, 64, 68, 73, 90, 118, 132], "loss_fn": [1, 2, 9, 47, 61, 62, 63, 64, 108], "backward": [1, 52, 54, 130, 132], "step": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 44, 47, 52, 54, 61, 62, 63, 64, 68, 69, 71, 72, 84, 86, 89, 94, 132], "item": [1, 9, 47, 52, 61, 62, 63, 64, 68, 125, 126, 127, 131, 132], "100": [1, 2, 6, 37, 52, 55, 83, 103, 129, 132], "type": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 133], "e": [1, 2, 6, 11, 12, 13, 14, 15, 16, 18, 19, 48, 52, 67, 68, 69, 70, 83, 90, 94, 99, 106, 107, 122, 123, 124, 125, 131, 133], "abov": [1, 5, 68, 105, 112, 131], "restrict": [1, 52, 100], "everyth": 1, "user": [1, 2, 5, 6, 9, 12, 13, 20, 21, 23, 24, 25, 41, 42, 45, 46, 47, 52, 54, 55, 58, 59, 60, 68, 69, 85, 100, 119, 126, 127, 131, 132], "want": [1, 9, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 128, 132], "set": [1, 2, 5, 6, 11, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 52, 58, 68, 69, 75, 81, 82, 83, 87, 88, 95, 96, 97, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132], "further": [1, 69], "ani": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 47, 52, 58, 65, 68, 69, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 88, 92, 94, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 128, 131, 133], "By": [1, 2, 5, 6, 15, 16, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 58, 68, 75, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133], "default": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133], "length": [1, 2, 52, 58, 76, 77, 79, 116], "defin": [1, 2, 5, 9, 10, 16, 21, 46, 47, 48, 52, 54, 55, 58, 59, 60, 68, 70, 75, 81, 85, 88, 101, 105, 108, 124, 125, 130, 131, 132], "len": [1, 52, 76, 79, 80, 108], "howev": [1, 2, 6, 16, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 132], "manual": [1, 5, 11, 14], "wai": [1, 5, 6, 9, 43, 49, 73, 128, 131], "input": [1, 2, 5, 6, 11, 12, 13, 14, 15, 18, 19, 30, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 59, 60, 65, 68, 69, 85, 96, 97, 100, 101, 104, 105, 108, 115, 118, 121, 124, 126, 127, 133], "200": 1, "finit": 1, "unknown": 1, "argument": [1, 2, 5, 11, 12, 13, 14, 15, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 46, 47, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 90, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132], "omit": 1, "automat": [1, 5, 9, 11, 16, 19, 22, 42, 46, 47, 52, 68, 103, 124, 125], "determin": [1, 9, 39, 52, 122], "when": [1, 2, 5, 6, 9, 11, 13, 15, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 48, 52, 55, 66, 68, 71, 73, 88, 94, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131, 132, 133], "exhaust": [1, 9], "logic": [1, 2, 52, 132], "complex": [1, 9], "code": [1, 5, 6, 7, 9, 13, 41, 45, 128, 130, 131], "method": [1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133], "construct": [1, 2, 47, 80], "contain": [1, 6, 22, 48, 52, 53, 58, 67, 68, 73, 74, 75, 80, 91, 92, 93, 103, 112, 118, 122, 124, 125, 130], "requir": [1, 2, 5, 9, 12, 13, 14, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 68, 73, 74, 97, 101, 105, 108, 109, 110, 111, 114, 120, 124, 130, 132], "model_1": 1, "model_2": 1, "optimizer_1": 1, "optimizer_2": 1, "criterion_1": 1, "criterion_2": 1, "data_1": 1, "data_2": 1, "loss_1": 1, "forward_pass": 1, "loss_2": 1, "multi": [1, 5, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 86, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 131], "like": [1, 5, 6, 9, 16, 22, 45, 68, 98, 103, 108, 124, 126, 127, 131, 132, 133], "gan": [1, 7, 101, 105], "see": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 16, 19, 45, 46, 47, 48, 50, 52, 68, 69, 94, 100, 108, 122, 124, 130, 131], "To": [1, 2, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 25, 68, 69, 100, 103, 113, 119, 130, 131, 132], "improv": [1, 2, 70, 133], "flexibl": [1, 9, 52, 55], "system": [1, 130], "introduc": 1, "facilit": 1, "interact": [1, 128], "each": [1, 2, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 45, 46, 47, 48, 52, 58, 59, 60, 61, 62, 63, 64, 73, 75, 76, 77, 79, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130], "complet": [1, 4, 5, 6, 9, 13, 16, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 48, 52, 55, 56, 58, 68, 70, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 132, 133], "list": [1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 52, 68, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 98, 115, 116, 117, 124, 130], "g": [1, 2, 6, 11, 12, 13, 14, 15, 16, 18, 19, 52, 67, 68, 69, 83, 90, 94, 99, 105, 106, 107, 122, 123, 124, 125, 131, 133], "lambda": [1, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 52, 59, 60, 61, 62, 63, 64, 68, 69, 71, 73, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131], "simpl": [1, 9, 16, 131], "option": [1, 2, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 36, 37, 38, 41, 45, 46, 47, 49, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 90, 94, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 115, 118, 121, 122, 123, 124, 132, 133], "necessarili": 1, "let": [1, 9, 52, 68, 108, 113, 124, 132], "u": [1, 130], "what": [1, 16, 73], "happen": 1, "call": [1, 2, 5, 6, 9, 11, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 47, 52, 55, 67, 68, 78, 94, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131], "fire_ev": [1, 9, 52, 54], "epoch_start": [1, 9, 55, 90, 92, 131], "onc": [1, 9, 22, 52, 53, 55, 86, 88, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131], "iteration_start": [1, 9, 11, 12, 13, 14, 15, 18, 19, 52, 55, 56, 69, 75, 76, 78, 79, 80, 82, 83, 92, 94, 131], "iteration_complet": [1, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 52, 55, 66, 68, 71, 78, 88, 90, 91, 92, 93, 94, 103, 118, 124, 131, 132], "epoch_complet": [1, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 52, 55, 57, 58, 68, 69, 71, 84, 85, 86, 87, 89, 90, 92, 93, 131, 132], "At": [1, 52, 68], "fire": [1, 52, 55], "paragraph": 1, "how": [1, 2, 7, 9, 19, 71, 73, 108, 122, 124, 128, 130], "add": [1, 2, 5, 9, 52, 71, 132], "occur": [1, 2, 46, 47, 59, 60, 61, 62, 63, 64, 65, 69, 94, 117], "everi": [1, 2, 5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 52, 53, 55, 56, 68, 69, 71, 84, 89, 90, 94, 103, 124, 125, 131, 132, 133], "attach": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 52, 68, 69, 70, 71, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 103, 106, 107, 113, 118, 119, 123, 124, 125, 131, 132], "add_event_handl": [1, 6, 9, 11, 13, 19, 52, 57, 66, 68, 69, 70, 71, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 132], "decor": [1, 5, 6, 50, 52, 131, 132], "update_model": [1, 52], "_": [1, 2, 5, 19, 36, 37, 38, 48, 52, 68, 69, 84, 85, 86, 87, 89, 94], "print": [1, 5, 6, 9, 16, 45, 52, 57, 68, 71, 84, 85, 86, 87, 89, 92, 93, 97, 101, 105, 113, 118, 131, 132], "on_training_start": 1, "anoth": [1, 7, 9, 11, 12, 13, 14, 15, 18, 19, 42, 68, 69, 72, 81, 88, 124, 125, 132], "messag": [1, 16, 133], "even": [1, 52, 55, 132], "simpler": 1, "onli": [1, 2, 5, 9, 11, 13, 30, 43, 45, 46, 47, 53, 59, 60, 68, 69, 100, 101, 102, 105, 113, 118, 122], "need": [1, 2, 9, 13, 15, 16, 18, 19, 52, 53, 68, 69, 73, 113, 119, 124, 125, 130, 131, 133], "arg": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 45, 52, 94, 100, 124, 125, 131, 132], "kwarg": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 42, 43, 44, 45, 52, 58, 65, 68, 69, 73, 74, 78, 80, 81, 88, 108, 124, 125, 131, 132], "mydata": 1, "2": [1, 4, 5, 6, 9, 13, 15, 16, 18, 19, 22, 27, 28, 39, 43, 44, 45, 52, 55, 62, 65, 68, 69, 71, 84, 85, 92, 93, 94, 101, 102, 103, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 131], "3": [1, 2, 5, 6, 9, 10, 13, 16, 22, 26, 31, 39, 43, 52, 55, 56, 66, 68, 69, 74, 76, 78, 79, 80, 81, 82, 86, 87, 92, 93, 101, 103, 105, 113, 124, 125, 129, 131, 133], "4": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 42, 43, 44, 45, 46, 47, 55, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 97, 101, 103, 105, 112, 113, 115, 116, 117, 119, 124, 125, 131, 132, 133], "on_training_end": 1, "f": [1, 5, 9, 52, 57, 71, 102, 113, 115, 116, 117, 125, 131, 132], "detach": [1, 124, 125, 131], "via": [1, 5, 45, 57], "remove_event_handl": [1, 52], "removableeventhandl": [1, 10, 16, 52], "refer": [1, 7, 17, 19, 33, 34, 35, 73, 97, 101, 105, 115, 116, 117], "reus": 1, "configur": [1, 2, 5, 7, 11, 30, 41, 42, 43, 44, 45, 52, 67, 68, 74, 81, 88, 100, 131, 133], "train_load": [1, 5, 6, 42, 52, 76, 79, 80, 90, 132], "validation_load": 1, "test_load": [1, 131], "create_supervised_train": [1, 16, 90, 132], "create_supervised_evalu": [1, 13, 90, 108, 122, 124, 131, 132], "acc": [1, 11], "accuraci": [1, 11, 12, 13, 14, 15, 16, 18, 19, 52, 68, 108, 118, 120, 124, 131, 132], "log_metr": 1, "2f": [1, 132], "test": [1, 73, 101], "pattern": [1, 13, 68, 132], "n": [1, 6, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 76, 96, 97, 104, 105, 109, 111, 114, 115, 117, 124, 125, 129, 133], "th": [1, 71, 112, 124, 125, 132], "filter": [1, 5, 52, 53, 55, 69, 122, 131], "50": [1, 16, 22, 55, 74, 81, 103, 129], "log_training_loss_every_50_iter": 1, "25": [1, 6, 129], "do_something_once_on_25_epoch": 1, "do": [1, 5, 9, 52, 53, 55, 56, 90, 94, 122, 132], "someth": [1, 9, 55, 56, 90, 125], "custom_event_filt": [1, 55], "10": [1, 6, 9, 13, 16, 19, 22, 45, 55, 62, 68, 70, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101, 103, 105, 113, 129, 131, 133], "fals": [1, 2, 5, 11, 13, 16, 18, 19, 20, 21, 23, 24, 25, 43, 46, 47, 48, 55, 59, 60, 61, 62, 63, 64, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 100, 102, 112, 119, 125, 126, 127, 131, 133], "event_filt": [1, 53, 55], "call_on_special_ev": [1, 55], "should": [1, 2, 5, 9, 11, 12, 13, 14, 15, 18, 19, 22, 43, 45, 46, 47, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 76, 77, 79, 82, 87, 94, 95, 98, 100, 103, 112, 118, 119, 122, 124, 125, 126, 127], "inherit": [1, 2, 9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 44, 54, 55, 68, 131], "eventenum": [1, 9, 22, 52, 55], "regist": [1, 11, 12, 13, 14, 15, 18, 19, 52, 57, 72, 94], "register_ev": [1, 9, 10, 52, 54], "ignit": [1, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132], "import": [1, 5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 42, 43, 44, 45, 49, 52, 54, 61, 62, 63, 64, 66, 68, 69, 70, 73, 74, 75, 76, 78, 79, 88, 92, 93, 94, 97, 101, 105, 108, 115, 116, 117, 124, 129, 131, 132, 133], "customev": [1, 52, 55], "custom_start": 1, "custom_complet": 1, "These": [1, 7, 131], "could": [1, 69, 90, 122, 131, 132], "call_on_custom_ev": 1, "fire_custom_ev": 1, "create_supervised_tbptt_train": [1, 2], "usag": [1, 3, 6, 7, 22, 50, 68, 103, 118, 124, 125, 130], "thing": [1, 52], "correspond": [1, 6, 11, 12, 13, 14, 15, 18, 19, 22, 68, 75, 112, 118], "attribut": [1, 11, 12, 13, 14, 15, 16, 18, 19, 47, 52, 55, 58, 68, 71, 76, 77, 79, 81, 82, 88, 90, 124, 131], "pass": [1, 2, 5, 13, 16, 18, 22, 47, 52, 54, 55, 58, 66, 67, 68, 73, 80, 90, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 132], "dict": [1, 2, 22, 46, 52, 68, 69, 70, 73, 74, 75, 80, 92, 98, 103, 108, 124], "event_to_attr": [1, 52], "map": [1, 2, 5, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 46, 52, 67, 68, 69, 70, 73, 74, 75, 80, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 133], "between": [1, 2, 6, 46, 47, 52, 58, 59, 60, 61, 62, 63, 64, 73, 82, 87, 94, 113, 115, 116, 117, 122], "increas": [1, 2, 9, 70, 71, 73, 79, 82, 86, 87], "counter": [1, 69, 70, 94], "whenev": 1, "solut": [1, 11], "temporari": [1, 5, 11, 65, 69], "workaround": 1, "mai": [1, 2, 5, 16, 46, 47, 57, 59, 60, 61, 62, 63, 64, 73, 122], "chang": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 43, 44, 45, 46, 47, 52, 59, 60, 61, 62, 63, 64, 65, 68, 69, 76, 77, 79, 90, 97, 103, 115, 124, 128, 131, 133], "futur": [1, 18], "built": [1, 55, 108], "checkpoint": [1, 2, 6, 11, 13, 19, 65, 67, 69, 71], "pipelin": 1, "save": [1, 2, 6, 11, 13, 19, 47, 48, 52, 65, 67, 68, 69, 70, 80, 90], "best": [1, 2, 9, 11, 13, 19, 68, 115, 116, 117], "stop": [1, 2, 9, 70, 73, 91], "experi": [1, 6, 12, 13, 14, 15, 130], "track": [1, 12, 13, 14, 71, 130], "thei": [1, 13, 52, 108, 112, 128], "two": [1, 2, 6, 68, 69, 71, 73, 121, 132], "modul": [1, 2, 3, 5, 6, 7, 10, 11, 13, 15, 18, 19, 43, 45, 46, 47, 59, 60, 61, 62, 63, 64, 68, 71, 101, 105, 130, 131, 133], "contrib": [1, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "some": [1, 6, 9, 48, 52, 77, 131], "ad": [1, 2, 5, 10, 16, 22, 43, 44, 45, 46, 47, 48, 52, 61, 62, 63, 64, 68, 83, 96, 97, 103, 104, 124, 131, 132, 133], "callabl": [1, 2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 50, 52, 53, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 73, 85, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133], "terminateonnan": [1, 2, 9, 92], "tensorboard_logg": 1, "creat": [1, 2, 5, 11, 12, 13, 14, 15, 18, 19, 42, 44, 46, 47, 52, 54, 59, 60, 65, 66, 68, 69, 81, 83, 88, 92, 93, 108, 124, 130, 132], "logger": [1, 2, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 130, 133], "tb_logger": [1, 15, 22], "tensorboardlogg": [1, 2, 10, 15], "log_dir": [1, 15], "tb_log": [1, 15], "log": [1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 103, 104, 132, 133], "weight": [1, 10, 11, 13, 15, 18, 19, 21, 52, 68, 71, 97, 98, 102], "histogram": [1, 10, 11, 15], "event_nam": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 52, 57, 58, 68, 69, 103], "log_handl": [1, 10, 11, 12, 13, 14, 15, 18, 19, 22], "weightshisthandl": [1, 11, 15], "below": [1, 3, 20, 23, 24, 25, 52, 55, 94, 95, 100, 108, 124, 126, 127, 131, 132], "typic": [1, 9, 119], "displai": [1, 5, 7, 13, 16], "store": [1, 2, 6, 30, 36, 37, 38, 48, 49, 52, 57, 68, 69, 90, 92, 93, 100, 121, 126, 127, 131], "inform": [1, 2, 5, 11, 13, 22, 46, 47, 73, 132], "includ": [1, 68, 69, 98], "seed": [1, 6, 12, 14, 48, 52, 58, 133], "initializ": 1, "0": [1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 43, 44, 45, 46, 47, 48, 52, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133], "initi": [1, 5, 6, 10, 11, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 45, 47, 52, 71, 83, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 133], "doc": [1, 12, 16, 84, 86, 89, 131], "on_iteration_complet": 1, "output_transform": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 52, 59, 60, 61, 62, 63, 64, 73, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 132], "transform": [1, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 68, 69, 73, 90, 91, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131], "intend": [1, 6], "ll": 1, "differ": [1, 6, 21, 23, 42, 67, 83, 124, 125, 131], "them": [1, 9, 13, 91, 128, 131], "print_loss": 1, "train_loss": 1, "similar": [1, 119, 131], "dictionari": [1, 2, 11, 12, 13, 14, 15, 16, 18, 19, 22, 48, 52, 58, 67, 68, 73, 74, 75, 80, 103, 108, 118, 124, 125], "good": 1, "practic": [1, 9, 131], "storag": [1, 11, 20, 21, 24, 36, 37, 38, 68, 69, 98, 100], "new_attribut": 1, "user_handler_funct": 1, "12345": [1, 131], "box": 1, "variou": [1, 3, 7, 10, 55, 128, 129, 130, 131, 132], "machin": [1, 45, 130], "onlin": [1, 13, 71, 101, 131, 132], "entir": [1, 100, 131], "histori": [1, 80, 90, 100, 131], "validation_data": 1, "stand": 1, "alon": [1, 68], "object": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 52, 53, 58, 68, 69, 70, 73, 76, 77, 78, 79, 80, 81, 82, 85, 92, 93, 94, 102, 105, 118, 124, 125, 132, 133], "reset": [1, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 52, 68, 70, 73, 90, 94, 95, 97, 100, 101, 103, 105, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 130, 133], "get_prediction_target": 1, "api": [1, 13, 128, 130], "where": [1, 2, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 65, 66, 68, 69, 71, 75, 95, 97, 101, 102, 105, 108, 109, 111, 113, 114, 126, 127, 130, 132], "go": [1, 132], "checkout": 1, "tutori": 1, "notebook": [1, 3, 5, 16, 130], "tool": [2, 5, 45], "tbptt": [2, 9, 130], "common": [2, 5, 11, 12, 13, 14, 15, 18, 19, 116, 131, 132], "tbptt_event": [2, 52], "valu": [2, 5, 13, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 101, 103, 105, 110, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 131], "adit": 2, "event": [2, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 48, 52, 53, 54, 56, 57, 58, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 103, 118, 129, 130, 131, 132], "addit": [2, 5, 6, 43, 48, 52, 68, 83, 97, 101, 108, 130, 132], "dedic": 2, "tbtt_step": 2, "dim": [2, 20, 52, 96, 104, 131], "devic": [2, 5, 9, 12, 14, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 52, 59, 60, 61, 62, 63, 64, 67, 68, 71, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 132, 133], "none": [2, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 45, 46, 47, 49, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 88, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 133], "non_block": [2, 9, 46, 47, 52, 59, 60, 61, 62, 63, 64, 133], "_prepare_batch": [2, 46, 47, 59, 60, 61, 62, 63, 64], "backprop": 2, "through": [2, 5, 47, 75, 128, 131, 132], "recurr": 2, "long": [2, 100, 122], "sequenc": [2, 11, 12, 13, 14, 15, 18, 19, 76, 77, 79, 81, 82, 95, 97, 101, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 133], "computation": 2, "intens": 2, "whole": [2, 74, 75, 80], "befor": [2, 5, 30, 36, 37, 38, 43, 46, 47, 52, 55, 59, 60, 66, 68, 73, 100, 126, 127, 131], "gradient": [2, 11, 13, 15, 18, 19, 47, 61, 62, 63, 64, 73, 130], "mani": [2, 128, 130], "opportun": 2, "subsequ": [2, 116], "known": 2, "appli": [2, 11, 13, 15, 18, 20, 21, 23, 24, 25, 42, 43, 46, 47, 48, 52, 59, 60, 61, 62, 63, 64, 68, 71, 73, 125, 131, 133], "int": [2, 5, 18, 41, 45, 47, 49, 52, 53, 58, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 97, 98, 99, 101, 103, 105, 106, 107, 110, 112, 113, 115, 117, 119, 120, 122, 123, 133], "chunk": 2, "last": [2, 6, 52, 68, 70, 75, 131, 132], "one": [2, 6, 9, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 52, 68, 70, 73, 80, 86, 91, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 131, 133], "smaller": [2, 68, 71], "axi": [2, 122], "repres": [2, 82, 87, 122, 128], "dimens": [2, 96, 104, 108, 112, 121], "str": [2, 5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133], "specif": [2, 6, 11, 20, 21, 24, 36, 37, 38, 44, 45, 46, 47, 49, 55, 59, 60, 61, 62, 63, 64, 68, 98, 100, 131], "bool": [2, 5, 11, 16, 18, 19, 20, 21, 23, 24, 25, 43, 46, 47, 52, 53, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 100, 102, 112, 118, 119, 124, 125, 126, 127, 133], "copi": [2, 11, 46, 47, 59, 60, 61, 62, 63, 64, 74, 75, 80], "cpu": [2, 5, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 59, 60, 61, 62, 63, 64, 68, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 133], "asynchron": [2, 46, 47, 59, 60, 61, 62, 63, 64, 133], "respect": [2, 5, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 59, 60, 61, 62, 63, 64, 71, 95, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 133], "case": [2, 5, 6, 9, 20, 21, 22, 23, 24, 25, 46, 47, 59, 60, 61, 62, 63, 64, 68, 95, 102, 122, 126, 127, 131, 132], "effect": [2, 5, 9, 46, 47, 59, 60, 61, 62, 63, 64], "receiv": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 52, 55, 59, 60, 61, 62, 63, 64, 68, 95, 96, 97, 100, 104, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 126, 127], "tupl": [2, 5, 22, 46, 47, 59, 60, 61, 62, 63, 64, 68, 75, 80, 82, 87, 97, 100, 108, 115, 118, 121, 124, 133], "tensor": [2, 5, 16, 21, 22, 30, 36, 37, 38, 46, 47, 59, 60, 61, 62, 63, 64, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 124, 126, 127, 129, 131, 133], "batch_x": [2, 46, 47, 59, 60, 61, 62, 63, 64], "batch_i": [2, 46, 47, 59, 60, 61, 62, 63, 64], "now": [2, 5, 16, 45, 46, 47, 57, 59, 60, 90, 97, 115, 132, 133], "move": [2, 3, 46, 47, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 132, 133], "correct": [2, 9, 16, 46, 47, 53, 59, 60, 68, 131], "pytorch": [2, 5, 6, 7, 9, 11, 12, 13, 14, 15, 19, 41, 45, 46, 47, 78, 84, 86, 89, 124, 130, 131, 132], "explan": [2, 46, 47, 130], "add_early_stopping_by_val_scor": 2, "patienc": [2, 9, 70], "metric_nam": [2, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 68, 103], "earli": [2, 9], "handler": [2, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 48, 52, 57, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 130, 132, 133], "base": [2, 4, 6, 10, 11, 12, 13, 14, 15, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 52, 54, 58, 67, 68, 69, 72, 73, 76, 80, 84, 86, 89, 95, 96, 97, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 130, 131], "score": [2, 67, 68, 69, 70, 97, 98, 102, 105, 115, 116, 117], "name": [2, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 45, 46, 47, 52, 53, 57, 58, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 103, 118, 124, 125, 131, 132, 133], "metric": [2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 52, 58, 59, 60, 68, 70, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 132], "order": [2, 6, 97, 117], "keep": [2, 5, 6, 50, 68, 73, 131, 133], "wait": [2, 70], "state": [2, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 43, 44, 46, 47, 48, 50, 52, 57, 59, 60, 61, 62, 63, 64, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133], "earlystop": [2, 9], "gen_save_best_models_by_val_scor": 2, "save_handl": [2, 68], "n_save": [2, 11, 13, 19, 68, 69], "tag": [2, 10, 11, 12, 13, 14, 15, 18, 19, 22], "val": 2, "highest": [2, 68, 69], "retain": [2, 68, 69], "deleg": 2, "union": [2, 5, 10, 12, 13, 16, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 52, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133], "basesavehandl": [2, 68], "filenam": [2, 11, 13, 65, 67, 68, 69, 92, 93], "implement": [2, 4, 7, 9, 10, 26, 30, 36, 37, 38, 44, 68, 73, 97, 98, 100, 101, 107, 108, 124, 126, 127, 131, 132], "remov": [2, 3, 10, 11, 13, 52, 57, 65, 67, 68, 69, 73], "fix": [2, 26, 31, 68], "disk": [2, 65, 68, 69], "disksav": [2, 6, 68, 69, 71], "state_dict": [2, 6, 48, 52, 68, 69, 70, 73, 74, 75, 80], "load_state_dict": [2, 6, 52, 68, 70, 73, 74, 75, 80], "fetch": [2, 5, 6, 9, 55, 58, 92, 93], "prefix": [2, 67, 68, 69], "keyword": [2, 11, 14, 15, 19, 42, 45, 52, 58, 65, 68, 69, 108, 125, 131], "save_best_model_by_val_scor": 2, "output_path": [2, 92, 93], "path": [2, 11, 15, 19, 65, 68, 69, 92, 93, 133], "indic": [2, 6, 49, 53, 55, 69, 86, 94, 98, 122, 131, 133], "setup_any_log": 2, "logger_modul": 2, "log_every_it": 2, "deprec": [2, 52, 68, 69, 130], "version": [2, 3, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 43, 44, 45, 46, 47, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 97, 101, 103, 105, 112, 113, 115, 116, 117, 119, 124, 130, 131, 133], "instead": [2, 3, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 78, 126, 127, 130], "setup_tb_log": 2, "setup_visdom_log": 2, "setup_mlflow_log": 2, "baselogg": [2, 10], "setup_clearml_log": 2, "clearml": [2, 3, 11], "averag": [2, 5, 20, 52, 71, 94, 97, 102, 104, 108, 110, 113, 115, 116, 117, 118, 121, 122, 125, 126, 127, 131], "rate": [2, 11, 12, 13, 14, 15, 18, 19, 73, 75, 76, 79, 81, 82, 83, 88, 112, 129], "torch": [2, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 65, 68, 69, 71, 76, 77, 78, 79, 81, 82, 84, 86, 89, 91, 95, 96, 100, 101, 103, 104, 105, 108, 112, 121, 122, 124, 125, 126, 127, 131, 132, 133], "kei": [2, 11, 12, 13, 14, 15, 18, 19, 22, 52, 58, 68, 69, 70, 73, 103, 108, 124], "interv": 2, "clearmllogg": [2, 11, 17], "setup_common_distrib_training_handl": 2, "train_sampl": 2, "to_sav": [2, 6, 11, 13, 68, 69, 71, 73], "save_every_it": 2, "1000": [2, 68, 69, 105], "lr_schedul": [2, 6, 68, 78, 80, 83, 84, 86, 89, 129], "with_gpu_stat": 2, "output_nam": 2, "with_pbar": 2, "with_pbar_on_it": 2, "stop_on_nan": 2, "clear_cuda_cach": 2, "distribut": [2, 6, 11, 30, 41, 42, 43, 44, 45, 67, 68, 100, 130, 133], "schedul": [2, 6, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 130], "modelcheckpoint": [2, 9, 19, 68], "runningaverag": [2, 16], "update_funct": 2, "progress": [2, 16, 22, 103], "bar": [2, 16, 22, 30, 38, 39, 103], "distributedsampl": [2, 42, 131], "sampler": [2, 5, 41, 42, 48, 49, 51, 131], "set_epoch": 2, "instanc": [2, 11, 13, 47, 62, 68, 71, 80, 92, 93, 99, 106, 107, 113, 118, 119, 123, 131, 132], "mutual": [2, 30, 100], "exclus": 2, "paramschedul": [2, 3, 75, 80, 83], "_lrschedul": [2, 78, 80, 83], "nativ": [2, 5, 7, 43, 44, 45], "lrschedul": 2, "gpuinfo": 2, "pynvml": 2, "packag": [2, 5, 12, 14, 15, 18, 45, 73, 74, 101], "instal": [2, 11, 12, 13, 14, 15, 16, 18, 19, 45, 73, 74, 78, 101, 105], "associ": [2, 11, 13, 52, 65, 67, 131], "wise": [2, 131], "cuda": [2, 5, 7, 12, 14, 42, 43, 46, 47, 60, 61, 62, 63, 71, 131, 133], "empty_cach": 2, "v0": [2, 14, 52, 55, 69], "setup_common_training_handl": 2, "mlflow": [2, 12], "mlflowlogg": [2, 10, 12], "setup_neptune_log": 2, "neptun": [2, 3, 13], "neptunelogg": [2, 13], "setup_plx_log": 2, "polyaxon": [2, 14], "polyaxonlogg": [2, 10, 14], "tensorboard": [2, 7, 15, 22], "directori": [2, 11, 13, 15, 65, 68, 69, 130], "setup_trains_log": 2, "renam": [2, 17], "visdom": [2, 3, 7, 18], "visdomlogg": [2, 10, 18], "setup_wandb_log": 2, "wandb": [2, 3, 19], "wandblogg": [2, 19], "6": [3, 5, 6, 9, 47, 68, 69, 71, 73, 86, 92, 93, 101, 105, 110, 115, 116, 129], "fastailrfind": 3, "basictimeprofil": [3, 9], "handlerstimeprofil": [3, 9], "comprehens": 3, "tensorboardx": [3, 15], "mnist": [3, 6, 11, 13, 19, 130, 132], "cyclegan": 3, "efficientnet": [3, 7], "tqdm": [3, 7, 16, 22, 103], "definit": 4, "botchkarev": [4, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40], "page": 4, "30": [4, 5, 6, 75, 82, 87, 129], "appendix": 4, "mathemat": 4, "backend": [5, 42, 43, 44, 45, 48, 131], "nccl": [5, 45], "gloo": [5, 45], "mpi": [5, 45], "xla": [5, 42, 44, 45, 64, 67, 68], "tpu": [5, 7, 45, 47, 64, 68, 131], "horovod": [5, 7, 43, 44, 45], "context": [5, 13, 15, 18, 43, 45, 57, 73], "manag": [5, 13, 15, 18, 45, 57, 73, 130], "simplifi": [5, 45], "setup": [5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 42, 45, 49, 52, 68, 69, 72, 108, 124, 130, 131, 133], "auto_model": 5, "auto_optim": 5, "auto_dataload": 5, "adapt": [5, 41, 42, 43, 44, 131], "transpar": [5, 130], "loader": 5, "exist": [5, 65, 69, 73, 100, 128, 133], "main": [5, 6, 18, 45, 98, 132], "py": [5, 13, 45, 132], "idist": [5, 42, 43, 44, 45, 68], "local_rank": [5, 45, 131], "config": [5, 19, 45], "get_rank": [5, 45, 68], "batch_siz": [5, 6, 9, 12, 14, 42, 95, 96, 100, 101, 104, 105, 108, 112, 113, 121, 122, 126, 127, 131], "32": [5, 6, 9, 42], "num_work": [5, 18, 42, 48, 131], "12": [5, 6, 9, 16, 22, 67, 103, 129, 133], "shuffl": [5, 6, 42], "size": [5, 6, 9, 41, 42, 43, 45, 77, 96, 104, 108, 119, 121, 130, 131], "resnet50": 5, "ddp": [5, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40], "dp": 5, "just": [5, 6, 9, 19, 132], "itself": [5, 42], "accord": [5, 6, 45, 68, 108, 112, 131], "sgd": [5, 68, 76, 80, 129, 132], "lr": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 52, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 129, 130, 132], "01": [5, 52, 75, 76, 80, 119, 129, 132, 133], "overrid": [5, 44, 48, 52, 67, 131], "safe": 5, "behind": 5, "xm": [5, 44, 65, 67, 69], "optimizer_step": [5, 44], "optimizi": 5, "perform": [5, 9, 16, 43, 71], "dist_config": [5, 45], "nproc_per_nod": [5, 45], "specifi": [5, 9, 12, 16, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 45, 52, 53, 68, 69, 73, 95, 96, 97, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131], "launch": [5, 9, 45], "python": [5, 13, 18, 45, 131], "start_method": 5, "fork": 5, "jupyt": [5, 16], "parallel": [5, 41, 105, 131, 133], "b": [5, 22, 45, 52, 55, 68, 106, 107, 113, 131], "cifar10": [5, 6, 7], "wrap": [5, 42, 43, 44, 68, 78, 80, 129], "about": [5, 6, 48, 55, 128, 130], "final": [5, 30, 65, 69, 100, 131, 132], "spawn": [5, 45], "has_native_dist_support": 5, "avail": [5, 11, 12, 13, 14, 15, 16, 18, 19, 30, 36, 37, 38, 42, 43, 44, 45, 90, 100, 126, 127, 130], "has_xla_support": 5, "torch_xla": [5, 64, 133], "all_gath": 5, "gather": [5, 30, 100, 124], "oper": [5, 16, 24, 25, 30, 55, 56, 100, 131], "float": [5, 21, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 91, 93, 94, 100, 102, 110, 113, 115, 116, 117, 118, 119, 121], "collect": [5, 30, 52, 56, 91, 100, 131], "across": [5, 30, 47, 61, 62, 63, 64, 100, 102, 126, 127, 131], "particip": [5, 41, 45, 128, 131], "shape": [5, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 95, 96, 100, 101, 104, 105, 106, 107, 112, 113, 119, 121, 122, 126, 127, 131, 133], "world_siz": [5, 42], "string": [5, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 68, 103, 118, 124, 125, 131], "all_reduc": 5, "op": [5, 44, 121], "sum": [5, 52, 96, 97, 112, 131], "reduc": [5, 9, 11, 13, 15, 18, 101, 115, 116, 117, 131], "reduct": [5, 10, 11, 13, 15, 18, 131], "possibl": [5, 6, 13, 15, 18, 19, 68, 69, 113, 133], "product": [5, 131], "min": [5, 9, 92, 93, 131], "max": [5, 9, 40, 52, 92, 93, 131], "AND": 5, "OR": 5, "adasum": 5, "available_backend": [5, 42, 43, 44], "barrier": 5, "synchron": [5, 19, 48, 50, 130], "broadcast": [5, 30, 43, 44, 100], "src": [5, 118], "safe_mod": 5, "sure": [5, 42, 43, 67, 78], "otherwis": [5, 15, 16, 47, 67, 68, 69, 70, 73, 78, 98, 102, 113, 118, 126, 127, 131], "crash": [5, 6], "non": [5, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "rank": [5, 11, 30, 41, 42, 43, 44, 68, 100, 133], "anyth": 5, "discard": 5, "mind": [5, 6, 68, 73], "mode": [5, 11, 13, 71, 97], "dens": 5, "There": [5, 9, 69], "slower": 5, "than": [5, 16, 30, 36, 37, 38, 43, 45, 52, 70, 71, 73, 77, 90, 95, 100, 124, 126, 127, 130, 133], "without": [5, 6, 7, 42, 45, 68, 122, 131, 132], "t1": [5, 129], "rand": [5, 6, 9, 101, 105, 131], "s1": 5, "abc": 5, "3456": 5, "els": [5, 52, 68, 125], "empti": [5, 13, 16, 90], "assert": [5, 22, 48, 52, 103, 118, 124, 125], "isinst": 5, "those": [5, 6], "placehold": 5, "index": [5, 9, 45, 82, 85, 87, 92, 93, 99, 106, 107, 112, 119, 122, 123, 131], "dist": [5, 45], "destroy_process_group": 5, "get_local_rank": 5, "local": [5, 9, 11, 19, 42, 45, 92, 93], "within": [5, 41, 128], "get_nnod": 5, "node": [5, 7, 45, 131], "get_node_rank": 5, "get_nproc_per_nod": 5, "per": [5, 9, 45, 52, 58, 103], "get_world_s": 5, "world": [5, 42, 43, 45], "hostnam": 5, "accept": [5, 11, 12, 13, 14, 15, 16, 18, 19, 43, 45, 55, 65, 68, 69, 90, 113, 124, 132], "timeout": 5, "timedelta": 5, "minut": 5, "init_method": [5, 45], "env": [5, 11, 45], "info": [5, 45, 133], "torch_init": 5, "comm": 5, "hvd_init": 5, "m": [5, 45, 97, 101, 105, 112, 115, 116, 117, 131], "train_fn": 5, "c": [5, 52, 55, 130], "is_avail": 5, "is_initi": 5, "window": [5, 18], "file": [5, 11, 13, 16, 19, 45, 65, 67, 68, 69, 92, 93, 132, 133], "tmp": [5, 6, 9, 45, 48, 52, 68, 69], "share": [5, 13, 19], "model_nam": 5, "serial": [5, 6, 65, 69, 131], "one_rank_onli": 5, "with_barri": 5, "wrt": 5, "synchronis": 5, "engin": [5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133], "mean": [5, 9, 19, 29, 30, 33, 34, 35, 39, 47, 52, 61, 62, 63, 64, 68, 92, 93, 98, 101, 102, 109, 110, 111, 113, 114, 121, 123, 125, 126, 127, 131], "some_handl": 5, "set_local_rank": 5, "hint": 5, "up": [5, 6, 71, 83, 96, 131, 132], "init_process_group": [5, 45], "dist_info": 5, "show_config": 5, "fn": [5, 95, 127], "kwargs_dict": 5, "entrypoint": 5, "must": [5, 13, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 68, 69, 73, 86, 95, 96, 97, 100, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 131], "top": [5, 120], "so": [5, 52, 65, 69, 122], "pickl": [5, 131], "impos": 5, "multiprocess": 5, "nnode": [5, 45], "node_rank": [5, 45], "master_addr": [5, 45], "127": 5, "master_port": [5, 45], "2222": 5, "mp": 5, "start_process": 5, "xmp": 5, "hvd_run": 5, "toler": 5, "ignor": [5, 47, 73, 99, 106, 107, 123, 131], "rais": [5, 8, 11, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 52, 65, 68, 69, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 131], "d": [5, 45], "23": [5, 6, 22, 91, 103, 133], "8": [5, 6, 9, 45, 66, 84, 85, 86, 87, 89, 131, 132], "master": [5, 7, 45], "7": [5, 6, 9, 11, 12, 13, 14, 15, 16, 18, 19, 44, 47, 61, 62, 63, 64, 68, 74, 76, 80, 84, 85, 86, 87, 88, 89, 97, 115, 129], "googl": [5, 7], "colab": [5, 7], "core": [5, 52, 130, 133], "xla_model": [5, 133], "sync": [5, 19], "forc": 5, "destroi": 5, "get_": 5, "neg": [5, 68, 95, 112, 127], "impact": [5, 6, 16], "concept": [6, 130, 132], "It": [6, 9, 13, 15, 18, 19, 22, 52, 69, 70, 71, 73, 101, 102, 103, 105, 124, 131], "approxim": 6, "reproduc": [6, 49, 130], "origin": 6, "behaviour": [6, 69, 78], "easili": [6, 9, 128, 132], "deseri": 6, "data_load": [6, 52, 68], "create_dir": [6, 65, 68, 69], "l": [6, 115, 116], "checkpoint_50000": 6, "pt": [6, 48, 52, 68, 69], "restor": [6, 52, 73], "to_load": [6, 68, 71], "load": [6, 47, 52, 68, 92, 93], "checkpoint_fil": 6, "load_object": [6, 68, 71], "continu": [6, 128], "gener": [6, 7, 11, 12, 13, 14, 15, 18, 19, 71, 84, 86, 89, 105, 132], "rather": [6, 133], "difficult": 6, "achiev": [6, 129], "reli": 6, "aspect": 6, "softwar": 6, "environ": [6, 13, 18, 66], "hardwar": 6, "note": [6, 43, 52, 55, 68, 69, 70, 101, 105, 122, 132], "random": [6, 50, 133], "take": [6, 11, 12, 13, 14, 15, 18, 19, 53, 68, 69, 70, 76, 85, 94, 100, 108, 128, 132], "your": [6, 11, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 47, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 132], "problem": 6, "platform": 6, "cudnn": [6, 48], "applic": [6, 43, 67, 68, 76, 118, 124], "enough": 6, "rerun": 6, "doe": [6, 11, 12, 13, 14, 15, 18, 19, 52, 69], "ensur": [6, 11, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 130], "deterministicengin": [6, 47], "reproduciblebatchsampl": [6, 48], "control": [6, 66, 94, 115, 116, 117, 130], "precis": [6, 7, 20, 23, 46, 47, 48, 81, 88, 97, 98, 102, 115, 116, 117, 122, 125, 127, 131], "roughli": 6, "rang": [6, 9, 48, 71, 73, 94, 113, 119], "num_epoch": [6, 48], "set_se": [6, 48], "do_single_epoch_iter": [6, 48], "dataload": [6, 9, 42, 48, 49, 51, 52, 55, 58, 73, 92, 93, 131, 132], "util": [6, 22, 49, 122, 130, 132], "made": [6, 128], "trivial": 6, "manual_se": [6, 9, 52, 130, 131, 133], "random_train_data_load": 6, "arang": 6, "print_train_data": 6, "tolist": [6, 52], "56": 6, "40": [6, 82, 87], "2nd": 6, "rng_state": 6, "31": 6, "13": [6, 9, 92], "18": [6, 13], "16": [6, 9, 45, 93], "33": 6, "36": 6, "37": 6, "19": [6, 9, 93], "9": [6, 9, 85, 115, 131], "20": [6, 45, 82, 87, 88, 122, 125, 126, 127, 129, 133], "14": [6, 9], "26": 6, "29": 6, "35": [6, 103], "38": 6, "34": [6, 16], "22": [6, 9, 93], "17": [6, 9, 16, 22, 92, 103], "21": [6, 82, 87, 133], "24": [6, 22, 103], "15": [6, 9, 129], "39": 6, "28": 6, "27": 6, "11": [6, 9, 93, 119], "sampl": [6, 42, 96, 104, 112, 121, 122, 126, 127], "exactli": [6, 48], "simul": [6, 74, 75, 78, 80, 81, 83, 88], "previou": [6, 73], "skip": [6, 11, 78], "datapoint": 6, "augment": 6, "middl": [6, 77, 79], "remain": [6, 16, 82, 87], "until": [6, 52, 82, 87, 128], "issu": [6, 9, 20, 21, 23, 24, 25, 41, 100], "period": [6, 68, 69, 89, 124, 125], "dure": [6, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 52, 55, 65, 68, 69, 71, 73, 74, 75, 78, 80, 81, 84, 85, 86, 88, 89, 122, 124, 125, 130, 132], "random_train_data_gener": 6, "yield": [6, 9], "randint": [6, 131], "user_handl": 6, "77": [6, 68, 129], "randomli": 6, "alter": 6, "produc": [6, 11, 12, 13, 14, 15, 18, 19, 42, 48], "keep_random_st": 6, "numpi": [6, 50, 88, 129, 133], "therefor": [6, 9, 131, 132], "deal": 6, "write": [7, 68], "compact": 7, "full": 7, "featur": [7, 101, 105, 131], "line": [7, 74, 132], "basic": [7, 52, 84, 85, 86, 87, 89], "port": [7, 18, 45], "resnet": 7, "helper": [7, 10, 11, 12, 13, 14, 15, 18, 19, 22, 42, 43, 44, 50, 51, 68, 72, 80, 83, 96, 103, 104, 121, 124, 130, 132, 133], "dcgan": 7, "plain": 7, "deep": 7, "convolut": 7, "adversari": 7, "reinforc": 7, "actor": 7, "critic": [7, 133], "cart": 7, "pole": 7, "fast": 7, "style": [7, 13], "artist": 7, "transfer": [7, 68], "text": [7, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 71, 95, 97, 98, 101, 102, 105, 106, 107, 109, 111, 113, 114, 126, 127], "classif": [7, 13, 23, 25, 98, 100, 122], "variat": 7, "auto": [7, 41, 42, 43, 44, 130], "encod": 7, "hors": 7, "zebra": 7, "nvidia": [7, 43, 47], "apex": [7, 43, 47, 63, 130], "amp": [7, 43, 46, 47, 60, 62], "finetun": 7, "b0": 7, "cifar100": 7, "classifi": 7, "fashion": [7, 131], "hyperparamet": 7, "tune": 7, "ax": [7, 73], "finder": [7, 73, 130], "benchmark": [7, 48], "mix": [7, 46, 47], "link": 7, "research": 7, "blob": 7, "torchvis": [7, 101, 105], "baselin": 7, "vision": [7, 76, 130], "imagenet": [7, 101, 105], "pascal": 7, "voc2012": 7, "notcomputableerror": [8, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 130, 131], "cannot": [8, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 73, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 131], "section": [9, 13, 129], "answer": 9, "frequent": [9, 18], "ask": [9, 128], "understand": [9, 132], "in_training_loop_on_epoch_complet": 9, "val_load": [9, 132], "when_validation_loop_is_don": 9, "plateau": 9, "equival": [9, 11, 12, 13, 14, 15, 18, 19, 132], "As": [9, 131], "consequ": 9, "too": [9, 125], "score_funct": [9, 11, 13, 19, 68, 69, 70], "best_model_sav": 9, "mymodel": [9, 69], "might": [9, 100, 119], "calcul": [9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 95, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 122, 123, 126, 127], "allow": [9, 52, 55, 71, 128, 132], "backpropev": [9, 54], "back": [9, 15, 79], "propag": 9, "backward_start": [9, 54], "backward_complet": [9, 54], "optim_step_complet": [9, 54], "opitm": 9, "process_batch": 9, "function_before_backprop": [9, 54], "insert": 9, "limit": [9, 66, 131], "resourc": 9, "most": [9, 130, 131, 132], "accumulation_step": 9, "update_fn": [9, 13, 15, 18, 61, 62, 63, 64], "criterion": [9, 52, 54, 108, 132], "blog": 9, "articl": 9, "dataflow": [9, 48, 50, 92, 93, 130], "infinite_iter": 9, "norm": [9, 10, 11, 13, 15, 18, 110], "3f": 9, "obtain": [9, 125], "63": 9, "862": 9, "64": [9, 16], "042": 9, "936": 9, "141": [9, 129], "767": 9, "791": 9, "565": 9, "602": 9, "995": 9, "943": 9, "831": 9, "276": 9, "148": 9, "920": 9, "226": 9, "explicitli": [9, 22, 103, 124], "termin": [9, 52, 55, 66], "stop_train": 9, "restart": [9, 48, 52], "finite_unk_size_data_it": 9, "dataloader_stop_iter": [9, 55], "restart_it": 9, "val_step": 9, "either": [9, 16, 18, 20, 23, 24, 25], "finite_size_data_it": 9, "set_data": [9, 52], "manner": [9, 73], "depend": [9, 55, 119, 125, 130], "simpliest": 9, "log_epoch_tim": 9, "log_total_tim": 9, "spent": 9, "log_intermediate_result": [9, 92, 93], "print_result": [9, 92, 93], "get_result": [9, 73, 92, 93], "stat": [9, 92], "second": [9, 66, 92, 94, 103, 132, 133], "std": [9, 52, 92, 93], "157": [9, 92], "46292": [9, 92], "01452": [9, 92], "1501": [9, 92], "26905": [9, 92], "07730": [9, 92], "01258": [9, 92], "11384": [9, 92], "00008": [9, 92], "1935": [9, 92], "28461": [9, 92], "1551": [9, 92], "00300": [9, 92], "02693": [9, 92], "82721": [9, 92], "00000": [9, 92], "00006": [9, 92], "piecewiselinear": [9, 92], "03482": [9, 92], "00001": [9, 92], "188": [9, 92], "00018": [9, 92], "679": [9, 92], "00002": [9, 92], "20037": [9, 92], "866": [9, 92], "00089": [9, 92], "1943": [9, 92], "00010": [9, 92], "00003": [9, 92, 93], "empty_cuda_cach": [9, 92], "log_elapsed_tim": [9, 92, 93], "57860": [9, 92], "11529": [9, 92], "14977": [9, 92], "12893": [9, 92], "00790": [9, 92], "yet": [9, 92], "trigger": [9, 16, 52, 55, 88, 92, 93, 131, 132], "breakdown": 9, "basi": 9, "log_training_result": [9, 90, 93, 132], "43245": [9, 93], "log_validation_result": [9, 93, 132], "55271": [9, 93], "log_tim": [9, 93], "00049": [9, 93], "00106": [9, 93], "log_training_loss": [9, 93, 132], "059": [9, 93], "04571": [9, 93], "took": [9, 93], "29543": [9, 93], "00393": [9, 93], "1875": [9, 93], "00784": [9, 93], "00602": [9, 93], "00034": [9, 93], "24365": [9, 93], "00533": [9, 93], "1874": [9, 93], "01129": [9, 93], "937": [9, 93], "00866": [9, 93], "00113": [9, 93], "timer": [9, 52, 66], "docstr": 9, "among": [9, 52], "label": [9, 11, 12, 13, 14, 15, 18, 19, 81, 83, 88, 98, 112, 122, 129], "forum": 9, "discuss": [9, 124], "categori": 9, "basehandl": 10, "callableeventwithfilt": [10, 16, 57, 58, 71, 88, 131], "eventslist": [10, 57, 71, 88], "forward": [10, 130], "attach_opt_params_handl": [10, 11, 12, 13, 14, 15, 16, 18, 19], "shortcut": [10, 52], "optimizerparamshandl": [10, 11, 12, 13, 14, 15, 18, 19], "miss": 10, "statement": [10, 57], "attach_output_handl": [10, 11, 12, 13, 14, 15, 18, 19], "outputhandl": [10, 11, 12, 13, 14, 15, 18, 19, 22], "baseoptimizerparamshandl": 10, "param_nam": [10, 11, 12, 13, 14, 15, 18, 19, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 129], "baseoutputhandl": 10, "global_step_transform": [10, 11, 12, 13, 14, 15, 18, 19, 68, 69, 72], "state_attribut": [10, 11, 12, 13, 14, 15, 16, 18, 19], "baseweightshisthandl": 10, "baseweightsscalarhandl": 10, "scalar": [10, 11, 13, 15, 16, 18, 74, 75, 79, 82, 84, 85, 86, 87, 89, 100, 123, 131], "plot": [11, 12, 13, 14, 15, 16, 18, 19, 73, 74, 81, 83, 88, 90, 122, 129], "upload": [11, 13], "choic": 11, "server": [11, 13, 18], "s3": 11, "bucket": 11, "pip": [11, 12, 13, 14, 15, 18, 19, 73, 74, 130], "init": [11, 19], "project_nam": [11, 13], "integr": [11, 13, 19], "task_nam": 11, "cnn": [11, 13, 19], "nll": [11, 12, 13, 14, 15, 16, 18, 19, 70, 132], "global_step_from_engin": [11, 12, 13, 14, 15, 18, 19, 68, 69], "train_evalu": [11, 12, 13, 14, 15, 18, 19, 90, 106, 107, 123], "weightsscalarhandl": [11, 13, 15, 18], "classmethod": [11, 74, 75, 78, 80, 81, 88], "bypass_mod": 11, "bypass": 11, "github_act": 11, "unless": 11, "overridden": [11, 67], "set_bypass_mod": 11, "outsid": 11, "Will": 11, "drop": 11, "standalon": [11, 45], "access": [11, 12, 13, 14, 15, 18, 19, 52, 124, 128], "clearmlsav": [11, 17], "output_uri": 11, "dirnam": [11, 65, 69], "artifact": 11, "runtim": 11, "error": [11, 27, 29, 30, 32, 33, 34, 36, 37, 38, 68, 90, 100, 109, 111, 113, 114, 126, 127, 133], "locat": 11, "123": [11, 16], "score_nam": [11, 13, 19, 67, 68, 69], "filename_prefix": [11, 13, 19, 68, 69], "validation_evalu": [11, 13], "event_complet": [11, 55], "get_local_copi": 11, "download": [11, 13], "gradshisthandl": [11, 15], "gradsscalarhandl": [11, 13, 15, 18], "param_group": [11, 12, 13, 14, 15, 18, 19, 52, 76, 77, 79, 81, 82], "prepar": [11, 12, 13, 14, 15, 18, 19], "loss1": [11, 12, 13, 14, 15, 18, 19], "another_loss": [11, 12, 13, 14, 15, 18, 19], "loss2": [11, 12, 13, 14, 15, 18, 19], "global": [11, 12, 13, 14, 15, 18, 19, 68, 69, 72, 108], "desir": [11, 12, 13, 14, 15, 18, 19, 68, 69], "integ": [11, 12, 13, 14, 15, 18, 19, 68, 69, 75, 82, 87, 115, 131], "global_step": [11, 12, 13, 14, 15, 18, 19, 68, 69], "500": [11, 12, 13, 14, 15, 18, 19, 52], "validation_set": [11, 12, 13, 14, 15, 18, 19], "alpha": [11, 12, 13, 14, 15, 16, 18, 19, 48, 52, 115, 116, 117, 118], "beta": [11, 12, 13, 14, 15, 16, 18, 19, 48, 52, 98, 102, 125, 131], "along": [11, 12, 13, 14, 15, 16, 18, 19], "get_event_attrib_valu": [11, 12, 13, 14, 15, 18, 19, 58], "custom_event_nam": [11, 12, 13, 14, 15, 18, 19, 72], "tracking_uri": 12, "client": [12, 13, 14], "uri": 12, "log_param": [12, 14], "__class__": [12, 14], "__name__": [12, 14], "__version__": [12, 14], "get_device_nam": [12, 14], "mlflow_tracking_uri": 12, "api_token": 13, "anonym": 13, "own": [13, 130], "npt_logger": 13, "experiment_nam": 13, "param": [13, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89], "minst": [13, 19], "token": [13, 103, 115, 116, 117], "ai": 13, "qualifi": [13, 70], "form": [13, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 76, 84, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 131], "namespac": 13, "tom": 13, "neptune_project": 13, "variabl": [13, 18, 43, 96, 104, 121, 131], "taken": [13, 52, 75, 122, 133], "offline_mod": 13, "send": [13, 18, 43, 47, 52], "usual": [13, 52, 76, 77, 79, 108], "debug": [13, 133], "purpos": [13, 90, 128, 131, 132], "edit": 13, "metadata": [13, 67], "view": [13, 131], "column": [13, 122], "upload_source_fil": 13, "tab": 13, "unix": 13, "pathnam": 13, "expans": 13, "recurs": [13, 125], "lookup": 13, "later": 13, "glob": 13, "creation": 13, "read": [13, 130, 132], "pair": [13, 23, 68], "properti": 13, "explor": 13, "ui": 13, "o": [13, 69], "org": [13, 73, 84, 86, 89, 97, 124], "pytor1": 13, "chart": 13, "neptunesav": 13, "validation_accuraci": [13, 19], "neptuneserv": 13, "close": [13, 14, 15, 16, 18, 19, 84], "neptuneml": 13, "plx_logger": 14, "posit": [14, 15, 19, 45, 95, 97, 102, 104, 112, 126, 127, 131], "favor": 15, "fall": 15, "summarywrit": 15, "v1": 15, "progressbar": [16, 22, 103], "persist": [16, 22, 103], "bar_format": 16, "desc": 16, "n_fmt": 16, "total_fmt": 16, "percentag": [16, 22, 37], "0f": 16, "postfix": 16, "elaps": [16, 94], "tqdm_kwarg": 16, "custom": [16, 42, 52, 54, 55, 93, 124, 130, 132], "format": [16, 113, 119, 122, 124, 131, 133], "l_bar": 16, "r_bar": 16, "rate_fmt": 16, "descript": 16, "predict": [16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 90, 95, 100, 101, 105, 108, 109, 111, 112, 114, 122, 124, 126, 127], "pbar": 16, "128": 16, "06": [16, 110], "stderr": [16, 133], "log_fil": 16, "w": [16, 97, 113], "alreadi": [16, 52, 68, 69, 71], "directli": [16, 68, 131, 132], "recommend": [16, 71], "replac": [16, 48, 51, 68, 69, 70], "log_messag": 16, "guarante": [16, 65, 69], "stdout": 16, "insid": 16, "tqdm_notebook": 16, "render": [16, 68], "ipywidget": 16, "bug": 16, "closing_event_nam": 16, "select": [16, 113], "entri": 16, "advanc": 16, "0d": 16, "1d": [16, 96, 104, 121], "intention": 16, "preserv": 16, "wish": 16, "clearml_logg": 17, "trainslogg": 17, "alia": [17, 68], "trainssav": 17, "show_legend": 18, "flag": [18, 94, 95, 126, 127], "show": [18, 71, 73, 98, 108, 124, 131], "legend": [18, 81, 88, 129], "vd_logger": 18, "vb_logger": 18, "raise_except": 18, "git": [18, 130], "fossasia": 18, "visdom_server_url": 18, "visdom_port": 18, "worker": [18, 42, 133], "concurr": 18, "threadpoolexecutor": 18, "post": 18, "thread": [18, 19], "usernam": 18, "password": 18, "visdom_usernam": 18, "visdom_password": 18, "slow": 18, "down": 18, "avoid": [18, 68, 110, 128, 133], "situat": 18, "less": [18, 70, 130], "seper": 19, "whatev": [19, 81, 88], "entiti": 19, "bias": 19, "cloud": [19, 68], "wrapper": [19, 47, 53, 78], "graph": 19, "watch": 19, "nn": [19, 43, 68, 69, 71, 108, 124, 131, 132], "sequenti": 19, "dir": 19, "model_checkpoint": 19, "require_empti": [19, 65, 69], "check_compute_fn": [20, 21, 23, 24, 25, 100], "accumul": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 47, 61, 62, 63, 64, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132], "truth": [20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 112, 122], "sklearn": [20, 21, 23, 24, 25, 31, 98], "average_precision_scor": 20, "expect": [20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 59, 60, 69, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128], "warn": [20, 21, 23, 24, 25, 68, 100, 133], "compris": [20, 23, 24, 25], "probabl": [20, 23, 24, 25, 105], "estim": [20, 23, 24, 25], "confid": [20, 23, 24, 25], "shown": [20, 23, 24, 25, 126, 127, 128, 132], "activated_output_transform": [20, 21, 23, 24, 25], "softmax": 20, "avg_precis": 20, "cohen": 21, "kappa": 21, "wieght": 21, "linear": [21, 68, 69, 71, 73, 82, 83, 87], "quadrat": 21, "cohen_kappa_scor": 21, "whether": [21, 53, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 112, 118], "cohen_kappa": 21, "get_cohen_kappa_fn": 21, "memori": [22, 30, 36, 37, 38, 90, 100, 126, 127, 133], "report": [22, 98], "measur": [22, 94, 119, 132], "mem": 22, "79": 22, "59": 22, "00": [22, 103, 133], "On": [22, 103, 118, 124, 125], "under": [22, 24, 90, 103, 118, 124, 125], "epochwis": [22, 103, 118, 124, 125], "usage_nam": [22, 103, 118, 124, 125, 131], "batchwis": [22, 103, 118, 124, 125], "mymetr": [22, 103, 118, 124, 125], "is_attach": [22, 103, 118, 124, 125], "put": [22, 103, 124], "sent": [22, 103, 124], "actual": [22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 53, 69, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "quantiti": [22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 131], "shallow": [22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "flatten": [22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125], "recal": [23, 98, 102, 115, 116, 117, 122, 125, 126, 131], "threshold": [23, 95, 126, 127], "binari": [23, 25, 95, 122, 126, 127], "precision_recall_curv": 23, "sigmoid": [23, 24, 25, 122], "roc_auc": [23, 25], "area": 24, "characterist": [24, 25], "curv": [24, 73], "roc": [24, 25], "auc": 24, "roc_auc_scor": 24, "roc_curv": [24, 25], "regress": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 100, 130], "canberra": 26, "cm": [26, 99, 106, 107, 123, 131], "sum_": [26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 40, 97, 105, 109, 111, 114], "frac": [26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 39, 40, 95, 102, 105, 106, 107, 109, 111, 113, 114, 126, 127], "a_j": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "p_j": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "distanc": [26, 31, 40, 101, 110, 113], "__init__": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 85, 124, 131], "block": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 127], "ab": [26, 73], "denomin": 26, "fraction": [27, 28], "absolut": [27, 29, 30, 32, 33, 36, 37, 38, 81, 88, 109], "fae": 27, "bia": [28, 35], "fb": 28, "geometr": [29, 30, 104, 121], "gmae": 29, "exp": [29, 30, 73, 97, 105], "ln": [29, 30], "rel": [30, 33, 38], "gmrae": 30, "math": 30, "target": [30, 36, 37, 38, 52, 57, 90, 100, 108, 113, 122, 124, 126, 127], "potenti": [30, 36, 37, 38, 90, 100, 126, 127], "larger": [30, 36, 37, 38, 42, 43, 45, 52, 68, 77, 90, 100, 126, 127], "ram": [30, 36, 37, 38, 90, 100, 126, 127], "zero": [30, 52, 94, 100, 110, 129], "manhattan": 31, "md": [31, 36, 37, 38], "compat": [31, 42], "maximum": [32, 66, 113, 130], "maxa": 32, "max_": [32, 113], "left": [32, 33, 36, 37, 38, 71, 97, 102, 111, 113, 114], "lvert": [32, 106, 107, 109], "rvert": [32, 106, 107, 109], "right": [32, 33, 36, 37, 38, 71, 97, 102, 111, 113, 114, 128], "mare": 33, "me": 34, "normal": [35, 83, 112, 119, 122, 131], "mnb": 35, "median": [36, 37, 38], "mdae": 36, "float32": [36, 37, 38, 39, 100], "mdape": 37, "cdot": [37, 71, 97], "mdrae": 38, "r": [39, 97, 115, 116, 117, 125], "squar": [39, 101, 111, 113, 114], "coeffici": [39, 99], "wave": [40, 76], "hedg": 40, "whd": 40, "num_replica": 41, "proxi": 41, "23430": 41, "issuecom": 41, "562350407": 41, "assum": [41, 78, 98, 131], "constant": 41, "scale": [42, 47, 62, 73], "equal": [42, 68, 70, 94, 122, 133], "nproc": 42, "distributedproxysampl": 42, "pin_memori": [42, 131], "iterabledataset": 42, "mpdeviceload": 42, "_mpdeviceload": 42, "distribt": [42, 43], "train_dataset": [42, 106, 107, 123], "drop_last": 42, "sync_bn": 43, "distributeddataparallel": [43, 47, 68, 71, 131], "dataparallel": [43, 68, 71], "convert_sync_batchnorm": 43, "batchnorm": 43, "convers": 43, "opt_level": 43, "goal": 44, "distributedoptim": 44, "launcher": [45, 130, 133], "spawn_kwarg": 45, "child": 45, "script": 45, "horovodrun": 45, "total": [45, 52, 58, 92, 93, 94], "mandatori": 45, "tcp": 45, "ip": 45, "address": 45, "use_env": 45, "np": [45, 81, 83, 88, 129], "3344": 45, "h": [45, 113], "hostname1": 45, "hostname2": 45, "both": [45, 112], "some_fil": 45, "23456": 45, "15000": 45, "func": [45, 50, 131, 133], "amp_mod": [46, 47], "factori": [46, 47, 59, 60, 61, 62, 63, 64], "assign": [46, 47, 59, 60, 61, 62, 63, 64, 101, 105, 122], "fit": [46, 59, 60], "cast": [46, 47, 128], "float16": [46, 47], "infer": [46, 59, 60, 112], "batch_pr": [46, 59, 60], "determinist": [47, 48, 49, 50, 51, 130], "scaler": [47, 62], "gradient_accumulation_step": [47, 61, 62, 63, 64], "gradscal": [47, 62], "beforehand": 47, "finish": 47, "io": 47, "html": [47, 84, 86, 89, 97], "deriv": [48, 52, 67], "seed_offset": 48, "resum": [48, 52, 71, 94, 130], "setup_saved_rng_st": 48, "setup_sampl": 48, "handl": [48, 52, 57, 68, 97, 131], "state_dict_user_kei": [48, 52], "append": [48, 52, 90], "init_user_valu": [48, 52], "save_engin": [48, 52], "ordereddict": [48, 52, 68, 70], "batch_sampl": 49, "start_iter": 49, "batchsampl": [49, 51], "update_dataload": 49, "rewind": 49, "setup_batch_indic": 49, "intact": 50, "new_batch_sampl": 51, "emit": 52, "goe": [52, 75], "last_event_nam": 52, "log_train": 52, "batch_loss": 52, "10874069479016124": 52, "1700": 52, "4217900575859437": 52, "predict_on_batch": 52, "eval": [52, 71, 132], "no_grad": [52, 132], "val_acc": [52, 67], "val_dataload": 52, "imag": [52, 101, 105, 113, 119], "compute_mean_std": 52, "reshap": 52, "dtype": [52, 113], "float64": 52, "mean2": 52, "compute_engin": 52, "img_mean": 52, "img_mean2": 52, "sqrt": [52, 101, 114], "invok": 52, "No": 52, "signatur": [52, 100, 121], "bound": [52, 73, 76, 77, 79], "exception_rais": [52, 55], "print_epoch": [52, 57], "events_list": 52, "execute_someth": 52, "relat": [52, 128], "exchang": 52, "dynam": 52, "has_event_handl": 52, "check": [52, 91, 124, 125, 130, 131], "search": [52, 73], "4rd": 52, "500th": 52, "499": 52, "point": 52, "door": 52, "being": [52, 96, 104, 105, 128], "foo_ev": [52, 55], "bar_ev": [52, 55], "bwd_event": 52, "opt_ev": 52, "trigger_custom_ev": 52, "do_foo_op": 52, "do_bar_op": 52, "enum": [52, 53, 57], "time_iteration_start": 52, "time_iteration_complet": 52, "tbptt_event_to_attr": 52, "time_iter": 52, "kept": [52, 68, 69], "NOT": 52, "repeat": [52, 75], "again": [52, 128], "account": [52, 128], "count": [52, 70, 112], "preprocess": 52, "latter": [52, 108, 118, 124], "switch_batch": 52, "preprocess_batch": 52, "begin": [52, 71], "processing_funct": 52, "newli": [52, 81, 88], "modifi": [52, 97], "switch": [52, 130], "data1": [52, 68], "data2": 52, "switch_iter": 52, "5000": 52, "switch_dataload": 52, "signal": [52, 113], "terminate_epoch": [52, 55], "touch": 53, "boolean": 53, "alwai": [53, 68], "static": [53, 68, 92, 93, 122], "default_event_filt": 53, "every_event_filt": 53, "member": [53, 128], "once_event_filt": 53, "get_batch_start": 55, "get_batch_complet": 55, "encount": [55, 122], "terminate_single_epoch": 55, "tabl": 55, "illustr": [55, 131], "call_everi": 55, "10th": [55, 82, 87], "call_onc": 55, "50th": [55, 103], "combin": [55, 131], "call_on_ev": [55, 56], "stack": 56, "__or__": 56, "weakref": 57, "protocol": 57, "unregist": 57, "atom": [65, 69], "destin": [65, 69], "damag": [65, 69], "doesnt": 65, "limit_sec": 66, "28800": 66, "session": 66, "gracefulli": 66, "exce": 66, "hour": 66, "__call__": [67, 85], "treat": 67, "slightli": 67, "stuck": [67, 68], "addition": 67, "basenam": 67, "epoch_checkpoint": 67, "prioriti": [67, 68], "higher": [67, 70], "better": [67, 68, 132], "6554435": 67, "archiv": [68, 69], "filename_pattern": 68, "include_self": [68, 69], "greater_or_equ": 68, "get_default_score_fn": 68, "older": [68, 69], "compress": [68, 69], "latest": [68, 130], "suffix": 68, "ext": 68, "constructor": 68, "compos": 68, "neg_val_loss": 68, "_neg_val_loss": 68, "1234": 68, "templat": 68, "30000": 68, "94": 68, "collid": 68, "overwritten": 68, "newer": 68, "expos": 68, "last_checkpoint": [68, 69], "checkpoint_12345": 68, "friendli": 68, "instanti": 68, "wrong": [68, 131], "checkpoint_it": 68, "checkpoint_": 68, "gst": 68, "checkpoint_7000": 68, "checkpoint_8000": 68, "checkpoint_5": 68, "checkpoint_6": 68, "best_model_9_accuraci": 68, "best_model_10_accuraci": 68, "78": 68, "customis": 68, "field": 68, "score_sign": 68, "sign": 68, "best_acc_scor": 68, "best_model_handl": 68, "val_accuraci": 68, "neg_loss_scor": 68, "val_neg_loss": 68, "model_state_dict": 68, "opt_state_dict": 68, "strict": 68, "enabl": [68, 97], "pretrain": [68, 101, 105], "myprefix": [68, 69], "1e": [68, 74, 76, 79, 80, 81, 110, 125, 126, 127, 129], "randn": 68, "checkpoint_fp": 68, "myprefix_checkpoint_40": 68, "pth": 68, "obj": 68, "independ": [68, 81, 88], "fold": 68, "data0": 68, "setup_filename_pattern": 68, "with_prefix": 68, "with_scor": 68, "with_score_nam": 68, "with_global_step": 68, "least": [68, 91, 131], "save_interv": 69, "save_as_state_dict": 69, "action": 69, "step_numb": 69, "listdir": 69, "myprefix_mymodel_20": 69, "myprefix_mymodel_30": 69, "early_stop": 70, "min_delta": 70, "cumulative_delta": 70, "minimum": [70, 73, 113], "val_loss": 70, "best_scor": 70, "ema_handl": 71, "momentum": [71, 129, 132], "0002": 71, "momentum_warmup": 71, "warmup_it": 71, "exponenti": [71, 73, 84], "ema": 71, "smooth": [71, 73, 97], "theta_": 71, "t": [71, 94, 97, 98, 124, 126, 127], "linearli": [71, 75, 79, 82, 87], "warm": [71, 83], "stabl": [71, 84, 86, 89, 130], "retriev": [71, 88], "ema_momentum": 71, "warmup": 71, "phase": [71, 83], "ema_model": 71, "build": [71, 98], "0001": 71, "10000": 71, "train_step_fn": 71, "resume_from": 71, "ckpt_handler": 71, "print_ema_momentum": 71, "val_step_fn": 71, "get_val_step_fn": 71, "run_valid": 71, "val_data_load": 71, "build_gener": 71, "discrimin": 71, "build_discrimin": 71, "gen_handl": 71, "disc_handl": 71, "step_fn": 71, "get_step_fn": 71, "gen_ema_momentum": 71, "dis_ema_momentum": 71, "disc_ema_momentum": 71, "Then": [71, 75, 88], "uniqu": 71, "lr_finder": 73, "boundari": 73, "valuabl": 73, "well": [73, 125, 132], "trainer_with_lr_find": 73, "matplotlib": [73, 74, 88, 129], "suggest": [73, 76, 130], "lr_suggest": 73, "exit": 73, "cyclic": [73, 76, 129], "arxiv": 73, "1506": 73, "01186": 73, "fastai": 73, "lr_find": 73, "apply_suggested_lr": 73, "num_it": 73, "start_lr": 73, "end_lr": 73, "step_mod": 73, "smooth_f": 73, "05": 73, "diverge_th": 73, "lower": 73, "upper": 73, "factor": [73, 84, 86, 89, 102, 118], "best_loss": 73, "find": [73, 128], "numer": 73, "skip_start": 73, "skip_end": 73, "log_lr": 73, "display_suggest": 73, "trim": 73, "logarithm": 73, "red": 73, "dot": 73, "pre": 73, "plt": [73, 74, 81, 83, 88, 129], "subplot": [73, 129], "figur": [73, 74, 129], "savefig": 73, "jpg": 73, "param_schedul": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "save_histori": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "param_histori": [74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "get_param": [74, 75, 76, 78, 79, 82, 84, 85, 86, 87, 89], "plot_valu": 74, "num_ev": [74, 75, 78, 80, 81, 88, 129], "scheduler_kwarg": [74, 81, 88], "line2d": 74, "pylab": [74, 129], "figsiz": [74, 129], "linearcyclicalschedul": [74, 75, 76, 80, 81], "start_valu": [74, 75, 76, 77, 79, 81, 129], "end_valu": [74, 75, 76, 77, 79, 81, 129], "cycle_s": [74, 75, 76, 77, 79, 81, 129], "simulate_valu": [74, 75, 78, 80, 81, 88, 129], "event_index": [74, 75, 78, 80, 81, 85, 88], "durat": [75, 83, 129], "concat": [75, 129], "cosineannealingschedul": [75, 80], "scheduler_1": [75, 129], "60": 75, "scheduler_2": [75, 129], "combined_schedul": 75, "anneal": [75, 76, 129], "indefinit": 75, "value_0": 75, "value_1": 75, "cycle_mult": [76, 77, 79, 129], "start_value_mult": [76, 77, 79, 129], "end_value_mult": [76, 77, 79, 129], "param_group_index": [76, 77, 79, 80, 81, 82], "half": [76, 79], "cosin": [76, 129], "smith17": 76, "ratio": [76, 77, 79, 113], "iteration_": [76, 77, 79], "cours": [76, 79], "001": [76, 80, 129], "fc": [76, 80], "scheduler1": [76, 80], "scheduler2": [76, 80], "smith": 76, "lesli": 76, "wacv": 76, "ieee": 76, "winter": 76, "confer": 76, "steplr": [78, 89, 129], "step_schedul": 78, "step_siz": [78, 88, 89, 129], "gamma": [78, 83, 84, 85, 86, 88, 89, 129], "adjust": [79, 119], "lr_valu": [81, 83, 129], "arrai": [81, 83, 88, 129], "xlabel": [81, 88, 129], "ylabel": [81, 88, 129], "milestones_valu": [82, 87], "piecewis": [82, 87], "mileston": [82, 86, 87], "45": [82, 87], "decreas": [82, 87], "20th": [82, 87], "jump": [82, 87], "21st": [82, 87], "30th": [82, 87], "warmup_start_valu": 83, "warmup_dur": 83, "warmup_end_valu": 83, "output_simulated_valu": 83, "fill": 83, "concatschedul": 83, "torch_lr_schedul": 83, "exponentiallr": [83, 84, 129], "98": [83, 118, 129], "state_param_schedul": [84, 85, 86, 87, 88, 89], "initial_valu": [84, 85, 86, 88, 89], "decai": [84, 86, 89, 118], "99": [84, 85, 86, 88, 89], "lambda_obj": 85, "lambdast": 85, "self": [85, 90, 124, 131], "reach": 86, "multisteplr": 86, "pyplot": 88, "step_state_param_valu": 88, "stepstateschedul": 88, "step_scheduled_param": 88, "visual": [90, 129], "eo": 90, "y_pred0": 90, "y0": 90, "y_pred1": 90, "y1": 90, "terminate_on_nan": 91, "nan": [91, 104], "infinit": 91, "time_profil": [92, 93], "profil": [92, 93, 130], "train_updat": [92, 93], "write_result": [92, 93], "path_to_dir": [92, 93], "csv": [92, 93], "aggreg": [92, 93, 104, 132], "unaggreg": [92, 93], "awesome_filenam": [92, 93], "processing_stat": [92, 93], "dataflow_stat": [92, 93], "event_start": 92, "252387": [92, 93], "125676": [92, 93], "00029": [92, 93], "252342": [92, 93], "125123": [92, 93], "divid": 94, "step_count": 94, "increment": 94, "forget": 94, "sleep": 94, "idl": 94, "003073937026784": 94, "2003182829997968": 94, "paus": 94, "10016545779653825": 94, "training_update_funct": 94, "callback": 94, "is_multilabel": [95, 98, 126, 127], "multiclass": [95, 102, 126, 127], "multilabel": [95, 98, 126, 127], "tp": [95, 126, 127], "tn": 95, "fp": [95, 126], "num_categori": [95, 126, 127], "greater": 95, "element": [95, 126, 127, 128], "thresholded_output_transform": [95, 126, 127], "round": [95, 122, 126, 127], "binary_accuraci": 95, "arithmet": [96, 121, 130], "rule": [96, 104, 121], "nd": [96, 104, 121], "seen": [96, 104, 122], "custom_var_mean": 96, "custom_var": 96, "mean_custom_var": 96, "ngram": [97, 117], "no_smooth": 97, "macro": [97, 98], "b_": 97, "p": [97, 105, 110, 115, 116, 117, 125], "w_": 97, "p_": 97, "gram": 97, "sentenc": 97, "breveti": 97, "penalti": 97, "papineni": 97, "et": [97, 101, 105], "al": [97, 101, 105], "2002": [97, 101], "review": [97, 128, 132], "techniqu": 97, "chen": [97, 101], "2014": [97, 101], "hypothes": 97, "corpu": 97, "remark": [97, 101], "nltk": 97, "smooth1": 97, "nltk_smooth2": 97, "smooth2": 97, "micro": 97, "www": 97, "_modul": 97, "translat": 97, "bleu_scor": 97, "nlp": [97, 130], "cat": [97, 115, 116, 117], "mat": [97, 115, 116, 117], "split": [97, 115, 116, 117], "_y": 97, "output_dict": 98, "resembl": 98, "classification_report": 98, "underli": 98, "doesn": 98, "harmon": [98, 102, 121], "metricslambda": [98, 99, 102, 106, 107, 123, 126, 127, 131], "cr": 98, "re": [98, 108, 124, 131], "4891304347826087": 98, "5056179775280899": 98, "f1": [98, 125, 126, 127, 131], "497237569060773": 98, "5157232704402516": 98, "4992389649923896": 98, "507347254447022": 98, "avg": [98, 118, 132], "5024268526114302": 98, "5024284712602398": 98, "5022924117538975": 98, "ignore_index": [99, 106, 107, 123], "dice": 99, "confusionmatrix": [99, 106, 107, 123, 131], "confus": [99, 106, 107, 112, 122, 123], "matrix": [99, 101, 106, 107, 112, 122, 123, 131], "background": [99, 106, 107, 122, 123, 131], "compute_fn": 100, "n_target": 100, "datatyp": 100, "epochmetricwarn": 100, "disabl": 100, "num_featur": [101, 105], "feature_extractor": [101, 105], "frechet": 101, "incept": [101, 105], "mu_": 101, "tr": 101, "sigma_": 101, "sigma_1": 101, "sigma_2": 101, "mu_1": 101, "covari": 101, "mu_2": 101, "heusel": 101, "faster": 101, "approach": [101, 130], "pytorch_fid": 101, "scipi": 101, "root": [101, 114], "vector": [101, 122, 131], "2048": 101, "extract": 101, "neither": [101, 105], "nor": [101, 105], "ident": [101, 105], "implicitli": [101, 105], "convert": [101, 105, 133], "mention": [101, 105], "299": [101, 105], "f_": 102, "real": [102, 105], "unweight": [102, 126, 127], "wps_metric": 103, "ntoken": 103, "wp": 103, "400": 103, "prod": 104, "d_": 105, "kl": 105, "hat": 105, "condit": [105, 131], "margin": 105, "diverg": 105, "barratt": 105, "intersect": [106, 123], "cap": [106, 107], "cup": [106, 107], "num_class": [106, 107, 112, 122, 123, 131, 133], "jaccard": 107, "iou": [107, 123, 131], "observ": 108, "extra": [108, 130], "required_output_kei": [108, 118, 121, 124], "criterion_kwarg": 108, "standard": [108, 119, 124, 133], "nll_loss": 108, "mae": 109, "y_": [109, 111, 114], "x_": [109, 111, 114], "ep": 110, "pairwisedist": 110, "pairwis": 110, "degre": 110, "small": 110, "divis": 110, "mse": [111, 113], "denot": 112, "uint8": [112, 133], "int8": 112, "int16": 112, "int32": 112, "int64": 112, "data_rang": [113, 119], "peak": 113, "nois": 113, "log_": 113, "grayscal": 113, "rgb": 113, "But": 113, "ycbcr": 113, "yuv": 113, "channel": 113, "And": [113, 131], "get_y_channel": 113, "219": 113, "psrn": 113, "rmse": 114, "variant": 115, "multiref": [115, 116, 117], "lin": [115, 116, 117], "2004": [115, 116, 117], "roug": [116, 117], "longest": 116, "co": 117, "epoch_bound": 118, "hold": 118, "acc_metr": 118, "running_avg_accuraci": 118, "avg_output": 118, "running_avg_loss": 118, "log_running_avg_metr": 118, "_usag": 118, "metricusag": [118, 124, 125], "kernel_s": 119, "sigma": 119, "k1": 119, "k2": 119, "03": [119, 130], "gaussian": 119, "structual": 119, "255": [119, 122], "kernel": 119, "deviat": 119, "uniform": 119, "un": 119, "k": 120, "categor": 120, "num_exampl": 121, "confusion_matrix": 122, "logit": 122, "argmax": [122, 131], "schema": 122, "diagon": 122, "row": 122, "were": 122, "correctli": 122, "horizont": 122, "vertic": 122, "neglect": 122, "unit": 122, "hot": [122, 133], "binary_one_hot_output_transform": 122, "to_onehot": [122, 130, 133], "91221": 124, "custommetr": 124, "super": [124, 131], "becam": 124, "conjunct": [124, 125], "expens": [124, 125, 132], "epoch_wis": [124, 125], "batch_wis": [124, 125], "written": [124, 125, 133], "major": [124, 128], "metrics_lambda": 125, "partial": [125, 131], "fed": 125, "fbeta": 125, "f2": 125, "f3": 125, "f4": 125, "ap": 125, "fulli": 125, "formal": 128, "clarifi": 128, "establish": 128, "feedback": 128, "strive": 128, "consensu": 128, "deadlock": 128, "meritocrat": 128, "anyon": 128, "join": 128, "design": 128, "place": 128, "earn": 128, "merit": 128, "concret": 128, "guid": [128, 132], "ongo": 128, "engag": 128, "trust": 128, "maintain": 128, "care": [128, 131], "Being": 128, "carri": 128, "give": [128, 131], "direct": 128, "approv": 128, "vote": 128, "against": 128, "involv": 128, "decid": 128, "nomin": 128, "commit": 128, "comment": 128, "emeritu": 128, "recant": 128, "lr_values_1": 129, "75": 129, "2e": 129, "lr_values_2": 129, "lr_values_3": 129, "lr_values_4": 129, "ylim": 129, "142": 129, "143": 129, "144": 129, "requires_grad": 129, "131": 129, "132": 129, "133": 129, "150": 129, "cosineannealinglr": 129, "lr_scheduler_1": 129, "lr_scheduler_2": 129, "lr_scheduler_3": 129, "t_max": 129, "eta_min": 129, "121": 129, "122": 129, "flexibli": 130, "click": 130, "pure": 130, "simplic": 130, "program": 130, "invers": 130, "extens": 130, "compon": [130, 132], "hub": 130, "v19": 130, "pwd": 130, "workspac": 130, "shm": 130, "16g": 130, "pytorchignit": 130, "hvd": 130, "msdp": 130, "quick": 130, "faq": 130, "question": 130, "classic": 130, "varieti": 130, "eas": 130, "pain": 130, "vari": 130, "optimis": 130, "apply_to_tensor": [130, 133], "apply_to_typ": [130, 133], "convert_tensor": [130, 133], "setup_logg": [130, 133], "truncat": 130, "backpropag": 130, "throught": 130, "govern": 130, "y_true": 131, "metrics_group": 131, "functool": 131, "ot_func": 131, "snippet": [131, 132], "device_id": 131, "output_devic": 131, "test_sampl": 131, "test_dataset": 131, "becaus": 131, "third": 131, "parti": 131, "dill": 131, "overcom": 131, "fine": 131, "grain": 131, "togeth": 131, "metric1": 131, "metric2": 131, "pow": 131, "unaverag": 131, "iou_metr": 131, "iou_no_bg_metr": 131, "mean_iou_no_bg_metr": 131, "three": 131, "customaccuraci": 131, "ignored_class": 131, "_num_correct": 131, "_num_exampl": 131, "_devic": 131, "mask": 131, "eq": 131, "necessari": 131, "notic": 131, "differenti": 131, "3333333333333333": 131, "inter": 131, "four": 131, "reinit": 131, "attr": 131, "abil": 131, "welcom": 132, "cover": 132, "essenti": 132, "walk": 132, "net": 132, "get_data_load": 132, "train_batch_s": 132, "val_batch_s": 132, "nllloss": 132, "val_metr": 132, "log_interv": 132, "validation_step": 132, "previous": 132, "footnot": 132, "subset": 132, "encourag": 132, "still": 132, "custom_output_transform": 132, "byte": 133, "input_typ": 133, "relev": 133, "pin": 133, "manual_seed_al": 133, "set_rng_stat": 133, "stream": 133, "asctim": 133, "levelnam": 133, "filepath": 133, "distributed_rank": 133, "textio": 133, "sy": 133, "readabl": 133, "46": 133, "07": 133, "356": 133, "358": 133, "02": 133, "my": 133, "torchscript": 133}, "objects": {"": [[130, 0, 0, "-", "ignite"]], "ignite": [[130, 0, 0, "-", "contrib"], [133, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[2, 0, 0, "-", "common"], [2, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[2, 1, 1, "", "add_early_stopping_by_val_score"], [2, 1, 1, "", "gen_save_best_models_by_val_score"], [2, 1, 1, "", "save_best_model_by_val_score"], [2, 1, 1, "", "setup_any_logging"], [2, 1, 1, "", "setup_clearml_logging"], [2, 1, 1, "", "setup_common_distrib_training_handlers"], [2, 1, 1, "", "setup_common_training_handlers"], [2, 1, 1, "", "setup_mlflow_logging"], [2, 1, 1, "", "setup_neptune_logging"], [2, 1, 1, "", "setup_plx_logging"], [2, 1, 1, "", "setup_tb_logging"], [2, 1, 1, "", "setup_trains_logging"], [2, 1, 1, "", "setup_visdom_logging"], [2, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[2, 2, 1, "", "Tbptt_Events"], [2, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.contrib.handlers": [[10, 0, 0, "-", "base_logger"], [11, 0, 0, "-", "clearml_logger"], [12, 0, 0, "-", "mlflow_logger"], [13, 0, 0, "-", "neptune_logger"], [14, 0, 0, "-", "polyaxon_logger"], [15, 0, 0, "-", "tensorboard_logger"], [16, 0, 0, "-", "tqdm_logger"], [17, 0, 0, "-", "trains_logger"], [18, 0, 0, "-", "visdom_logger"], [19, 0, 0, "-", "wandb_logger"]], "ignite.contrib.handlers.base_logger": [[10, 2, 1, "", "BaseHandler"], [10, 2, 1, "", "BaseLogger"], [10, 2, 1, "", "BaseOptimizerParamsHandler"], [10, 2, 1, "", "BaseOutputHandler"], [10, 2, 1, "", "BaseWeightsHistHandler"], [10, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.contrib.handlers.base_logger.BaseLogger": [[10, 3, 1, "", "attach"], [10, 3, 1, "", "attach_opt_params_handler"], [10, 3, 1, "", "attach_output_handler"]], "ignite.contrib.handlers.clearml_logger": [[11, 2, 1, "", "ClearMLLogger"], [11, 2, 1, "", "ClearMLSaver"], [11, 2, 1, "", "GradsHistHandler"], [11, 2, 1, "", "GradsScalarHandler"], [11, 2, 1, "", "OptimizerParamsHandler"], [11, 2, 1, "", "OutputHandler"], [11, 2, 1, "", "WeightsHistHandler"], [11, 2, 1, "", "WeightsScalarHandler"], [11, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger.ClearMLLogger": [[11, 3, 1, "", "bypass_mode"], [11, 3, 1, "", "set_bypass_mode"]], "ignite.contrib.handlers.clearml_logger.ClearMLSaver": [[11, 3, 1, "", "get_local_copy"], [11, 3, 1, "", "remove"]], "ignite.contrib.handlers.mlflow_logger": [[12, 2, 1, "", "MLflowLogger"], [12, 2, 1, "", "OptimizerParamsHandler"], [12, 2, 1, "", "OutputHandler"], [12, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[13, 2, 1, "", "GradsScalarHandler"], [13, 2, 1, "", "NeptuneLogger"], [13, 2, 1, "", "NeptuneSaver"], [13, 2, 1, "", "OptimizerParamsHandler"], [13, 2, 1, "", "OutputHandler"], [13, 2, 1, "", "WeightsScalarHandler"], [13, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger.NeptuneSaver": [[13, 3, 1, "", "remove"]], "ignite.contrib.handlers.polyaxon_logger": [[14, 2, 1, "", "OptimizerParamsHandler"], [14, 2, 1, "", "OutputHandler"], [14, 2, 1, "", "PolyaxonLogger"], [14, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[15, 2, 1, "", "GradsHistHandler"], [15, 2, 1, "", "GradsScalarHandler"], [15, 2, 1, "", "OptimizerParamsHandler"], [15, 2, 1, "", "OutputHandler"], [15, 2, 1, "", "TensorboardLogger"], [15, 2, 1, "", "WeightsHistHandler"], [15, 2, 1, "", "WeightsScalarHandler"], [15, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tqdm_logger": [[16, 2, 1, "", "ProgressBar"]], "ignite.contrib.handlers.tqdm_logger.ProgressBar": [[16, 3, 1, "", "attach"], [16, 3, 1, "", "attach_opt_params_handler"], [16, 3, 1, "", "log_message"]], "ignite.contrib.handlers.trains_logger": [[17, 4, 1, "", "TrainsLogger"], [17, 4, 1, "", "TrainsSaver"]], "ignite.contrib.handlers.visdom_logger": [[18, 2, 1, "", "GradsScalarHandler"], [18, 2, 1, "", "OptimizerParamsHandler"], [18, 2, 1, "", "OutputHandler"], [18, 2, 1, "", "VisdomLogger"], [18, 2, 1, "", "WeightsScalarHandler"], [18, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[19, 2, 1, "", "OptimizerParamsHandler"], [19, 2, 1, "", "OutputHandler"], [19, 2, 1, "", "WandBLogger"], [19, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.metrics": [[20, 2, 1, "", "AveragePrecision"], [21, 2, 1, "", "CohenKappa"], [22, 2, 1, "", "GpuInfo"], [23, 2, 1, "", "PrecisionRecallCurve"], [24, 2, 1, "", "ROC_AUC"], [25, 2, 1, "", "RocCurve"], [4, 0, 0, "-", "regression"]], "ignite.contrib.metrics.CohenKappa": [[21, 3, 1, "", "get_cohen_kappa_fn"]], "ignite.contrib.metrics.GpuInfo": [[22, 3, 1, "", "attach"], [22, 3, 1, "", "completed"], [22, 3, 1, "", "compute"], [22, 3, 1, "", "reset"], [22, 3, 1, "", "update"]], "ignite.contrib.metrics.regression": [[26, 2, 1, "", "CanberraMetric"], [27, 2, 1, "", "FractionalAbsoluteError"], [28, 2, 1, "", "FractionalBias"], [29, 2, 1, "", "GeometricMeanAbsoluteError"], [30, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [31, 2, 1, "", "ManhattanDistance"], [32, 2, 1, "", "MaximumAbsoluteError"], [33, 2, 1, "", "MeanAbsoluteRelativeError"], [34, 2, 1, "", "MeanError"], [35, 2, 1, "", "MeanNormalizedBias"], [36, 2, 1, "", "MedianAbsoluteError"], [37, 2, 1, "", "MedianAbsolutePercentageError"], [38, 2, 1, "", "MedianRelativeAbsoluteError"], [39, 2, 1, "", "R2Score"], [40, 2, 1, "", "WaveHedgesDistance"]], "ignite.contrib.metrics.regression.CanberraMetric": [[26, 3, 1, "", "compute"], [26, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalAbsoluteError": [[27, 3, 1, "", "compute"], [27, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalBias": [[28, 3, 1, "", "compute"], [28, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError": [[29, 3, 1, "", "compute"], [29, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError": [[30, 3, 1, "", "compute"], [30, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.ManhattanDistance": [[31, 3, 1, "", "compute"], [31, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MaximumAbsoluteError": [[32, 3, 1, "", "compute"], [32, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError": [[33, 3, 1, "", "compute"], [33, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanError": [[34, 3, 1, "", "compute"], [34, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanNormalizedBias": [[35, 3, 1, "", "compute"], [35, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.R2Score": [[39, 3, 1, "", "compute"], [39, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.WaveHedgesDistance": [[40, 3, 1, "", "compute"], [40, 3, 1, "", "reset"]], "ignite.distributed.auto": [[41, 2, 1, "", "DistributedProxySampler"], [42, 1, 1, "", "auto_dataloader"], [43, 1, 1, "", "auto_model"], [44, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[45, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[45, 3, 1, "", "run"]], "ignite.distributed": [[5, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[5, 1, 1, "", "all_gather"], [5, 1, 1, "", "all_reduce"], [5, 1, 1, "", "available_backends"], [5, 1, 1, "", "backend"], [5, 1, 1, "", "barrier"], [5, 1, 1, "", "broadcast"], [5, 1, 1, "", "device"], [5, 1, 1, "", "finalize"], [5, 1, 1, "", "get_local_rank"], [5, 1, 1, "", "get_nnodes"], [5, 1, 1, "", "get_node_rank"], [5, 1, 1, "", "get_nproc_per_node"], [5, 1, 1, "", "get_rank"], [5, 1, 1, "", "get_world_size"], [5, 4, 1, "", "has_native_dist_support"], [5, 4, 1, "", "has_xla_support"], [5, 1, 1, "", "hostname"], [5, 1, 1, "", "initialize"], [5, 1, 1, "", "model_name"], [5, 1, 1, "", "one_rank_only"], [5, 1, 1, "", "set_local_rank"], [5, 1, 1, "", "show_config"], [5, 1, 1, "", "spawn"], [5, 1, 1, "", "sync"]], "ignite.engine": [[46, 1, 1, "", "create_supervised_evaluator"], [47, 1, 1, "", "create_supervised_trainer"], [59, 1, 1, "", "supervised_evaluation_step"], [60, 1, 1, "", "supervised_evaluation_step_amp"], [61, 1, 1, "", "supervised_training_step"], [62, 1, 1, "", "supervised_training_step_amp"], [63, 1, 1, "", "supervised_training_step_apex"], [64, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[48, 2, 1, "", "DeterministicEngine"], [49, 2, 1, "", "ReproducibleBatchSampler"], [50, 1, 1, "", "keep_random_state"], [51, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[48, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[49, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[52, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[52, 3, 1, "", "add_event_handler"], [52, 3, 1, "", "fire_event"], [52, 3, 1, "", "has_event_handler"], [52, 4, 1, "", "last_event_name"], [52, 3, 1, "", "load_state_dict"], [52, 3, 1, "", "on"], [52, 3, 1, "", "register_events"], [52, 3, 1, "", "remove_event_handler"], [52, 3, 1, "", "run"], [52, 3, 1, "", "set_data"], [52, 4, 1, "", "state"], [52, 3, 1, "", "state_dict"], [52, 3, 1, "", "terminate"], [52, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[53, 2, 1, "", "CallableEventWithFilter"], [54, 2, 1, "", "EventEnum"], [55, 2, 1, "", "Events"], [56, 2, 1, "", "EventsList"], [57, 2, 1, "", "RemovableEventHandle"], [58, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[53, 3, 1, "", "default_event_filter"], [53, 3, 1, "", "every_event_filter"], [53, 4, 1, "", "name"], [53, 3, 1, "", "once_event_filter"], [53, 4, 1, "", "value"]], "ignite.engine.events.Events": [[55, 4, 1, "", "COMPLETED"], [55, 4, 1, "", "DATALOADER_STOP_ITERATION"], [55, 4, 1, "", "EPOCH_COMPLETED"], [55, 4, 1, "", "EPOCH_STARTED"], [55, 4, 1, "", "EXCEPTION_RAISED"], [55, 4, 1, "", "GET_BATCH_COMPLETED"], [55, 4, 1, "", "GET_BATCH_STARTED"], [55, 4, 1, "", "ITERATION_COMPLETED"], [55, 4, 1, "", "ITERATION_STARTED"], [55, 4, 1, "", "STARTED"], [55, 4, 1, "", "TERMINATE"], [55, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[57, 3, 1, "", "remove"]], "ignite.engine.events.State": [[58, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[8, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[65, 2, 1, "", "DiskSaver"], [66, 2, 1, "", "TimeLimit"], [72, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.DiskSaver": [[65, 3, 1, "", "remove"]], "ignite.handlers.checkpoint": [[67, 2, 1, "", "BaseSaveHandler"], [68, 2, 1, "", "Checkpoint"], [69, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[67, 3, 1, "", "__call__"], [67, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[68, 2, 1, "", "Item"], [68, 3, 1, "", "get_default_score_fn"], [68, 3, 1, "", "load_objects"], [68, 3, 1, "", "load_state_dict"], [68, 3, 1, "", "reset"], [68, 3, 1, "", "setup_filename_pattern"], [68, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[68, 4, 1, "", "filename"], [68, 4, 1, "", "priority"]], "ignite.handlers.early_stopping": [[70, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[70, 3, 1, "", "load_state_dict"], [70, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[71, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[71, 3, 1, "", "attach"], [71, 4, 1, "", "ema_model"], [71, 4, 1, "", "model"], [71, 4, 1, "", "momentum"], [71, 4, 1, "", "momentum_warmup"], [71, 4, 1, "", "warmup_iters"]], "ignite.handlers.lr_finder": [[73, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[73, 3, 1, "", "apply_suggested_lr"], [73, 3, 1, "", "attach"], [73, 3, 1, "", "get_results"], [73, 3, 1, "", "lr_suggestion"], [73, 3, 1, "", "plot"]], "ignite.handlers.param_scheduler": [[74, 2, 1, "", "BaseParamScheduler"], [75, 2, 1, "", "ConcatScheduler"], [76, 2, 1, "", "CosineAnnealingScheduler"], [77, 2, 1, "", "CyclicalScheduler"], [78, 2, 1, "", "LRScheduler"], [79, 2, 1, "", "LinearCyclicalScheduler"], [80, 2, 1, "", "ParamGroupScheduler"], [81, 2, 1, "", "ParamScheduler"], [82, 2, 1, "", "PiecewiseLinear"], [83, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[74, 3, 1, "", "get_param"], [74, 3, 1, "", "load_state_dict"], [74, 3, 1, "", "plot_values"], [74, 3, 1, "", "simulate_values"], [74, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[75, 3, 1, "", "get_param"], [75, 3, 1, "", "load_state_dict"], [75, 3, 1, "", "simulate_values"], [75, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[76, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[78, 3, 1, "", "get_param"], [78, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[79, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[80, 3, 1, "", "load_state_dict"], [80, 3, 1, "", "simulate_values"], [80, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[81, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[82, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler": [[84, 2, 1, "", "ExpStateScheduler"], [85, 2, 1, "", "LambdaStateScheduler"], [86, 2, 1, "", "MultiStepStateScheduler"], [87, 2, 1, "", "PiecewiseLinearStateScheduler"], [88, 2, 1, "", "StateParamScheduler"], [89, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[84, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[85, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[86, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[87, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[88, 3, 1, "", "attach"], [88, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[89, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[90, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[90, 3, 1, "", "attach"], [90, 4, 1, "", "data"], [90, 3, 1, "", "reset"], [90, 3, 1, "", "store"], [90, 3, 1, "", "update"]], "ignite.handlers.terminate_on_nan": [[91, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[92, 2, 1, "", "BasicTimeProfiler"], [93, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[92, 3, 1, "", "attach"], [92, 3, 1, "", "get_results"], [92, 3, 1, "", "print_results"], [92, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[93, 3, 1, "", "attach"], [93, 3, 1, "", "get_results"], [93, 3, 1, "", "print_results"], [93, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[94, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[94, 3, 1, "", "attach"], [94, 3, 1, "", "pause"], [94, 3, 1, "", "reset"], [94, 3, 1, "", "resume"], [94, 4, 1, "", "running"], [94, 3, 1, "", "step"], [94, 4, 1, "", "step_count"], [94, 4, 1, "", "total"], [94, 3, 1, "", "value"]], "ignite.metrics": [[95, 2, 1, "", "Accuracy"], [96, 2, 1, "", "Average"], [97, 2, 1, "", "Bleu"], [98, 1, 1, "", "ClassificationReport"], [99, 1, 1, "", "DiceCoefficient"], [100, 2, 1, "", "EpochMetric"], [101, 2, 1, "", "FID"], [102, 1, 1, "", "Fbeta"], [103, 2, 1, "", "Frequency"], [104, 2, 1, "", "GeometricAverage"], [105, 2, 1, "", "InceptionScore"], [106, 1, 1, "", "IoU"], [107, 1, 1, "", "JaccardIndex"], [108, 2, 1, "", "Loss"], [109, 2, 1, "", "MeanAbsoluteError"], [110, 2, 1, "", "MeanPairwiseDistance"], [111, 2, 1, "", "MeanSquaredError"], [112, 2, 1, "", "MultiLabelConfusionMatrix"], [113, 2, 1, "", "PSNR"], [114, 2, 1, "", "RootMeanSquaredError"], [115, 2, 1, "", "Rouge"], [116, 2, 1, "", "RougeL"], [117, 2, 1, "", "RougeN"], [118, 2, 1, "", "RunningAverage"], [119, 2, 1, "", "SSIM"], [120, 2, 1, "", "TopKCategoricalAccuracy"], [121, 2, 1, "", "VariableAccumulation"], [123, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[95, 3, 1, "", "compute"], [95, 3, 1, "", "reset"], [95, 3, 1, "", "update"]], "ignite.metrics.Average": [[96, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[97, 3, 1, "", "compute"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.FID": [[101, 3, 1, "", "compute"], [101, 3, 1, "", "reset"], [101, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[103, 3, 1, "", "attach"], [103, 3, 1, "", "completed"], [103, 3, 1, "", "compute"], [103, 3, 1, "", "reset"], [103, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[104, 3, 1, "", "compute"]], "ignite.metrics.InceptionScore": [[105, 3, 1, "", "compute"], [105, 3, 1, "", "reset"], [105, 3, 1, "", "update"]], "ignite.metrics.Loss": [[108, 3, 1, "", "compute"], [108, 4, 1, "", "required_output_keys"], [108, 3, 1, "", "reset"], [108, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[109, 3, 1, "", "compute"], [109, 3, 1, "", "reset"], [109, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[110, 3, 1, "", "compute"], [110, 3, 1, "", "reset"], [110, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[111, 3, 1, "", "compute"], [111, 3, 1, "", "reset"], [111, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[112, 3, 1, "", "compute"], [112, 3, 1, "", "reset"], [112, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[113, 3, 1, "", "compute"], [113, 3, 1, "", "reset"], [113, 3, 1, "", "update"]], "ignite.metrics.RootMeanSquaredError": [[114, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[115, 3, 1, "", "compute"], [115, 3, 1, "", "reset"], [115, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[118, 3, 1, "", "attach"], [118, 3, 1, "", "compute"], [118, 4, 1, "", "required_output_keys"], [118, 3, 1, "", "reset"], [118, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[119, 3, 1, "", "compute"], [119, 3, 1, "", "reset"], [119, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[120, 3, 1, "", "compute"], [120, 3, 1, "", "reset"], [120, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[121, 3, 1, "", "compute"], [121, 4, 1, "", "required_output_keys"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "update"]], "ignite.metrics.confusion_matrix": [[122, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[122, 3, 1, "", "compute"], [122, 3, 1, "", "normalize"], [122, 3, 1, "", "reset"], [122, 3, 1, "", "update"]], "ignite.metrics.metric": [[131, 2, 1, "", "BatchFiltered"], [131, 2, 1, "", "BatchWise"], [131, 2, 1, "", "EpochWise"], [124, 2, 1, "", "Metric"], [131, 2, 1, "", "MetricUsage"], [131, 1, 1, "", "reinit__is_reduced"], [131, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[131, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[131, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[124, 3, 1, "", "attach"], [124, 3, 1, "", "completed"], [124, 3, 1, "", "compute"], [124, 3, 1, "", "detach"], [124, 3, 1, "", "is_attached"], [124, 3, 1, "", "iteration_completed"], [124, 4, 1, "", "required_output_keys"], [124, 3, 1, "", "reset"], [124, 3, 1, "", "started"], [124, 3, 1, "", "update"]], "ignite.metrics.metrics_lambda": [[125, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[125, 3, 1, "", "attach"], [125, 3, 1, "", "compute"], [125, 3, 1, "", "detach"], [125, 3, 1, "", "is_attached"], [125, 3, 1, "", "reset"], [125, 3, 1, "", "update"]], "ignite.metrics.precision": [[126, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[126, 3, 1, "", "update"]], "ignite.metrics.recall": [[127, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[127, 3, 1, "", "update"]], "ignite.utils": [[133, 1, 1, "", "apply_to_tensor"], [133, 1, 1, "", "apply_to_type"], [133, 1, 1, "", "convert_tensor"], [133, 1, 1, "", "manual_seed"], [133, 1, 1, "", "setup_logger"], [133, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": 0, "u": 0, "histori": 0, "govern": [0, 128], "author": 0, "emeritu": 0, "core": [0, 128], "develop": [0, 128], "join": 0, "team": [0, 130], "cite": 0, "pytorch": [0, 128], "ignit": [0, 2, 3, 4, 5, 6, 8, 128, 129, 130, 131, 133], "acknowledg": 0, "concept": 1, "engin": [1, 2, 6, 9, 52], "event": [1, 6, 9, 55], "handler": [1, 3, 9, 129], "custom": [1, 9, 131], "timelin": 1, "state": [1, 58, 129], "metric": [1, 4, 124, 131], "contrib": [2, 3, 4, 130], "truncat": 2, "backpropag": 2, "throught": 2, "time": [2, 3, 9], "helper": [2, 5, 6, 131], "method": [2, 6], "setup": 2, "trainer": [2, 6], "evalu": [2, 6], "paramet": [3, 129], "schedul": [3, 129], "deprec": 3, "lr": 3, "finder": 3, "profil": [3, 9], "logger": 3, "modul": 4, "regress": 4, "distribut": [5, 7, 131], "launcher": 5, "auto": 5, "util": [5, 133], "determinist": 6, "defin": 6, "supervis": 6, "resum": 6, "train": [6, 7, 9], "dataflow": 6, "synchron": 6, "exampl": [7, 129], "mnist": 7, "other": [7, 9], "notebook": 7, "reproduc": 7, "except": 8, "faq": 9, "each": 9, "ha": 9, "its": [9, 131], "own": 9, "creat": [9, 131], "base": 9, "forward": 9, "backward": 9, "pass": 9, "gradient": 9, "accumul": 9, "work": 9, "iter": 9, "infinit": 9, "finit": 9, "unknown": 9, "length": 9, "known": 9, "switch": 9, "data": 9, "provid": 9, "dure": 9, "singl": 9, "epoch": 9, "total": 9, "basic": 9, "measur": 9, "question": 9, "base_logg": 10, "clearml_logg": 11, "mlflow_logg": 12, "neptune_logg": 13, "polyaxon_logg": 14, "tensorboard_logg": 15, "tqdm_logger": 16, "trains_logg": 17, "visdom_logg": 18, "wandb_logg": 19, "averageprecis": 20, "cohenkappa": 21, "gpuinfo": 22, "precisionrecallcurv": 23, "roc_auc": 24, "roccurv": 25, "canberrametr": 26, "fractionalabsoluteerror": 27, "fractionalbia": 28, "geometricmeanabsoluteerror": 29, "geometricmeanrelativeabsoluteerror": 30, "manhattandist": 31, "maximumabsoluteerror": 32, "meanabsoluterelativeerror": 33, "meanerror": 34, "meannormalizedbia": 35, "medianabsoluteerror": 36, "medianabsolutepercentageerror": 37, "medianrelativeabsoluteerror": 38, "r2score": 39, "wavehedgesdist": 40, "distributedproxysampl": 41, "auto_dataload": 42, "auto_model": 43, "auto_optim": 44, "parallel": 45, "create_supervised_evalu": 46, "create_supervised_train": 47, "deterministicengin": 48, "reproduciblebatchsampl": 49, "keep_random_st": 50, "update_dataload": 51, "callableeventwithfilt": 53, "eventenum": 54, "eventslist": 56, "removableeventhandl": 57, "supervised_evaluation_step": 59, "supervised_evaluation_step_amp": 60, "supervised_training_step": 61, "supervised_training_step_amp": 62, "supervised_training_step_apex": 63, "supervised_training_step_tpu": 64, "disksav": 65, "timelimit": 66, "basesavehandl": 67, "checkpoint": 68, "modelcheckpoint": 69, "earlystop": 70, "emahandl": 71, "global_step_from_engin": 72, "fastailrfind": 73, "baseparamschedul": 74, "concatschedul": [75, 129], "cosineannealingschedul": [76, 129], "cyclicalschedul": 77, "lrschedul": [78, 129], "linearcyclicalschedul": [79, 129], "paramgroupschedul": 80, "paramschedul": 81, "piecewiselinear": 82, "create_lr_scheduler_with_warmup": 83, "expstateschedul": 84, "lambdastateschedul": 85, "multistepstateschedul": 86, "piecewiselinearstateschedul": 87, "stateparamschedul": 88, "stepstateschedul": 89, "epochoutputstor": 90, "terminateonnan": 91, "basictimeprofil": 92, "handlerstimeprofil": 93, "timer": 94, "accuraci": 95, "averag": 96, "bleu": 97, "classificationreport": 98, "dicecoeffici": 99, "epochmetr": 100, "fid": 101, "fbeta": 102, "frequenc": 103, "geometricaverag": 104, "inceptionscor": 105, "iou": 106, "jaccardindex": 107, "loss": 108, "meanabsoluteerror": 109, "meanpairwisedist": 110, "meansquarederror": 111, "multilabelconfusionmatrix": 112, "psnr": 113, "rootmeansquarederror": 114, "roug": 115, "rougel": 116, "rougen": 117, "runningaverag": 118, "ssim": 119, "topkcategoricalaccuraci": 120, "variableaccumul": 121, "confusionmatrix": 122, "miou": 123, "metricslambda": 125, "precis": 126, "recal": 127, "role": 128, "And": 128, "respons": 128, "contributor": 128, "complet": [129, 131], "list": [129, 131], "more": 129, "param_schedul": 129, "piecewis": 129, "linear": 129, "concaten": 129, "torch": 129, "your": 130, "network": 130, "featur": 130, "instal": 130, "nightli": 130, "releas": 130, "docker": 130, "imag": 130, "us": 130, "pre": 130, "built": 130, "document": 130, "note": 130, "librari": 130, "structur": 130, "packag": 130, "refer": 130, "reset": 131, "updat": 131, "comput": 131, "api": 131, "arithmet": 131, "how": 131, "usag": 131, "metricusag": 131, "epochwis": 131, "batchwis": 131, "batchfilt": 131, "reinit__is_reduc": 131, "sync_all_reduc": 131, "quick": 132, "start": 132, "code": 132, "explan": 132}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About us": [[0, "about-us"]], "History": [[0, "history"]], "Governance": [[0, "governance"]], "Authors": [[0, "authors"]], "Emeritus Core Developers": [[0, "emeritus-core-developers"]], "Join Core Team": [[0, "join-core-team"]], "Citing PyTorch-Ignite": [[0, "citing-pytorch-ignite"]], "Acknowledgements": [[0, "acknowledgements"]], "Concepts": [[1, "concepts"]], "Engine:": [[1, "engine"]], "Events and Handlers:": [[1, "events-and-handlers"]], "Custom events": [[1, "custom-events"]], "Handlers": [[1, "handlers"]], "Timeline and events": [[1, "timeline-and-events"]], "State:": [[1, "state"]], "Metrics:": [[1, "metrics"]], "ignite.contrib.engines": [[2, "ignite-contrib-engines"]], "Truncated Backpropagation Throught Time": [[2, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[2, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[3, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[3, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[3, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[3, "time-profilers-deprecated"]], "Loggers": [[3, "loggers"]], "ignite.contrib.metrics": [[4, "ignite-contrib-metrics"]], "Contrib module metrics": [[4, "contrib-module-metrics"]], "Regression metrics": [[4, "module-ignite.contrib.metrics.regression"]], "ignite.distributed": [[5, "ignite-distributed"]], "Distributed launcher and auto helpers": [[5, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[5, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[5, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[5, "ignite-distributed-utils"]], "ignite.engine": [[6, "ignite-engine"]], "ignite.engine.engine": [[6, "ignite-engine-engine"]], "ignite.engine.events": [[6, "ignite-engine-events"]], "ignite.engine.deterministic": [[6, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[6, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[6, "resuming-the-training"]], "Deterministic training": [[6, "deterministic-training"]], "Dataflow synchronization": [[6, "dataflow-synchronization"]], "Examples": [[7, "examples"]], "MNIST example": [[7, "mnist-example"]], "Distributed examples": [[7, "distributed-examples"]], "Other examples": [[7, "other-examples"]], "Notebooks": [[7, "notebooks"]], "Reproducible trainings": [[7, "reproducible-trainings"]], "ignite.exceptions": [[8, "ignite-exceptions"]], "FAQ": [[9, "faq"]], "Each engine has its own Events": [[9, "each-engine-has-its-own-events"]], "Creating Custom Events based on Forward/Backward Pass": [[9, "creating-custom-events-based-on-forward-backward-pass"]], "Gradients accumulation": [[9, "gradients-accumulation"]], "Working with iterators": [[9, "working-with-iterators"]], "Infinite iterator for training": [[9, "infinite-iterator-for-training"]], "Finite iterator with unknown length": [[9, "finite-iterator-with-unknown-length"]], "Finite iterator with known length": [[9, "finite-iterator-with-known-length"]], "Switching data provider during the training": [[9, "switching-data-provider-during-the-training"]], "Time profiling during training": [[9, "time-profiling-during-training"]], "Single epoch and total time": [[9, "single-epoch-and-total-time"]], "Basic time profiling": [[9, "basic-time-profiling"]], "Event handlers time profiling": [[9, "event-handlers-time-profiling"]], "Custom time measures": [[9, "custom-time-measures"]], "Other questions": [[9, "other-questions"]], "base_logger": [[10, "module-ignite.contrib.handlers.base_logger"]], "clearml_logger": [[11, "module-ignite.contrib.handlers.clearml_logger"]], "mlflow_logger": [[12, "module-ignite.contrib.handlers.mlflow_logger"]], "neptune_logger": [[13, "module-ignite.contrib.handlers.neptune_logger"]], "polyaxon_logger": [[14, "module-ignite.contrib.handlers.polyaxon_logger"]], "tensorboard_logger": [[15, "module-ignite.contrib.handlers.tensorboard_logger"]], "tqdm_logger": [[16, "module-ignite.contrib.handlers.tqdm_logger"]], "trains_logger": [[17, "module-ignite.contrib.handlers.trains_logger"]], "visdom_logger": [[18, "module-ignite.contrib.handlers.visdom_logger"]], "wandb_logger": [[19, "module-ignite.contrib.handlers.wandb_logger"]], "AveragePrecision": [[20, "averageprecision"]], "CohenKappa": [[21, "cohenkappa"]], "GpuInfo": [[22, "gpuinfo"]], "PrecisionRecallCurve": [[23, "precisionrecallcurve"]], "ROC_AUC": [[24, "roc-auc"]], "RocCurve": [[25, "roccurve"]], "CanberraMetric": [[26, "canberrametric"]], "FractionalAbsoluteError": [[27, "fractionalabsoluteerror"]], "FractionalBias": [[28, "fractionalbias"]], "GeometricMeanAbsoluteError": [[29, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[30, "geometricmeanrelativeabsoluteerror"]], "ManhattanDistance": [[31, "manhattandistance"]], "MaximumAbsoluteError": [[32, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[33, "meanabsoluterelativeerror"]], "MeanError": [[34, "meanerror"]], "MeanNormalizedBias": [[35, "meannormalizedbias"]], "MedianAbsoluteError": [[36, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[37, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[38, "medianrelativeabsoluteerror"]], "R2Score": [[39, "r2score"]], "WaveHedgesDistance": [[40, "wavehedgesdistance"]], "DistributedProxySampler": [[41, "distributedproxysampler"]], "auto_dataloader": [[42, "auto-dataloader"]], "auto_model": [[43, "auto-model"]], "auto_optim": [[44, "auto-optim"]], "Parallel": [[45, "parallel"]], "create_supervised_evaluator": [[46, "create-supervised-evaluator"]], "create_supervised_trainer": [[47, "create-supervised-trainer"]], "DeterministicEngine": [[48, "deterministicengine"]], "ReproducibleBatchSampler": [[49, "reproduciblebatchsampler"]], "keep_random_state": [[50, "keep-random-state"]], "update_dataloader": [[51, "update-dataloader"]], "Engine": [[52, "engine"]], "CallableEventWithFilter": [[53, "callableeventwithfilter"]], "EventEnum": [[54, "eventenum"]], "Events": [[55, "events"]], "EventsList": [[56, "eventslist"]], "RemovableEventHandle": [[57, "removableeventhandle"]], "State": [[58, "state"]], "supervised_evaluation_step": [[59, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[60, "supervised-evaluation-step-amp"]], "supervised_training_step": [[61, "supervised-training-step"]], "supervised_training_step_amp": [[62, "supervised-training-step-amp"]], "supervised_training_step_apex": [[63, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[64, "supervised-training-step-tpu"]], "DiskSaver": [[65, "disksaver"]], "TimeLimit": [[66, "timelimit"]], "BaseSaveHandler": [[67, "basesavehandler"]], "Checkpoint": [[68, "checkpoint"]], "ModelCheckpoint": [[69, "modelcheckpoint"]], "EarlyStopping": [[70, "earlystopping"]], "EMAHandler": [[71, "emahandler"]], "global_step_from_engine": [[72, "global-step-from-engine"]], "FastaiLRFinder": [[73, "fastailrfinder"]], "BaseParamScheduler": [[74, "baseparamscheduler"]], "ConcatScheduler": [[75, "concatscheduler"]], "CosineAnnealingScheduler": [[76, "cosineannealingscheduler"]], "CyclicalScheduler": [[77, "cyclicalscheduler"]], "LRScheduler": [[78, "lrscheduler"]], "LinearCyclicalScheduler": [[79, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[80, "paramgroupscheduler"]], "ParamScheduler": [[81, "paramscheduler"]], "PiecewiseLinear": [[82, "piecewiselinear"]], "create_lr_scheduler_with_warmup": [[83, "create-lr-scheduler-with-warmup"]], "ExpStateScheduler": [[84, "expstatescheduler"]], "LambdaStateScheduler": [[85, "lambdastatescheduler"]], "MultiStepStateScheduler": [[86, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[87, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[88, "stateparamscheduler"]], "StepStateScheduler": [[89, "stepstatescheduler"]], "EpochOutputStore": [[90, "epochoutputstore"]], "TerminateOnNan": [[91, "terminateonnan"]], "BasicTimeProfiler": [[92, "basictimeprofiler"]], "HandlersTimeProfiler": [[93, "handlerstimeprofiler"]], "Timer": [[94, "timer"]], "Accuracy": [[95, "accuracy"]], "Average": [[96, "average"]], "Bleu": [[97, "bleu"]], "ClassificationReport": [[98, "classificationreport"]], "DiceCoefficient": [[99, "dicecoefficient"]], "EpochMetric": [[100, "epochmetric"]], "FID": [[101, "fid"]], "Fbeta": [[102, "fbeta"]], "Frequency": [[103, "frequency"]], "GeometricAverage": [[104, "geometricaverage"]], "InceptionScore": [[105, "inceptionscore"]], "IoU": [[106, "iou"]], "JaccardIndex": [[107, "jaccardindex"]], "Loss": [[108, "loss"]], "MeanAbsoluteError": [[109, "meanabsoluteerror"]], "MeanPairwiseDistance": [[110, "meanpairwisedistance"]], "MeanSquaredError": [[111, "meansquarederror"]], "MultiLabelConfusionMatrix": [[112, "multilabelconfusionmatrix"]], "PSNR": [[113, "psnr"]], "RootMeanSquaredError": [[114, "rootmeansquarederror"]], "Rouge": [[115, "rouge"]], "RougeL": [[116, "rougel"]], "RougeN": [[117, "rougen"]], "RunningAverage": [[118, "runningaverage"]], "SSIM": [[119, "ssim"]], "TopKCategoricalAccuracy": [[120, "topkcategoricalaccuracy"]], "VariableAccumulation": [[121, "variableaccumulation"]], "ConfusionMatrix": [[122, "confusionmatrix"]], "mIoU": [[123, "miou"]], "Metric": [[124, "metric"]], "MetricsLambda": [[125, "metricslambda"]], "Precision": [[126, "precision"]], "Recall": [[127, "recall"]], "PyTorch-Ignite governance": [[128, "pytorch-ignite-governance"]], "Roles And Responsibilities": [[128, "roles-and-responsibilities"]], "Contributors": [[128, "contributors"]], "Core developers": [[128, "core-developers"]], "ignite.handlers": [[129, "ignite-handlers"]], "Complete list of handlers": [[129, "complete-list-of-handlers"]], "Parameter scheduler": [[129, "parameter-scheduler"]], "State Parameter scheduler": [[129, "state-parameter-scheduler"]], "More on parameter scheduling": [[129, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[129, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[129, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[129, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[129, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[129, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[129, "concatenate-with-torch-schedulers"]], "Ignite Your Networks!": [[130, "ignite-your-networks"]], "Features": [[130, "features"]], "Installation": [[130, "installation"]], "Nightly releases": [[130, "nightly-releases"]], "Docker Images": [[130, "docker-images"]], "Using pre-built images": [[130, "using-pre-built-images"]], "Documentation": [[130, "documentation"]], "Notes": [[130, null]], "Library structure": [[130, "library-structure"]], "Package Reference": [[130, null]], "Contrib Package Reference": [[130, null]], "Team": [[130, null]], "ignite.metrics": [[131, "ignite-metrics"]], "Reset, Update, Compute API": [[131, "reset-update-compute-api"]], "Metric arithmetics": [[131, "metric-arithmetics"]], "How to create a custom metric": [[131, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[131, "metrics-and-its-usages"]], "Complete list of usages": [[131, "complete-list-of-usages"]], "Metrics and distributed computations": [[131, "metrics-and-distributed-computations"]], "Complete list of metrics": [[131, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[131, "helpers-for-customizing-metrics"]], "MetricUsage": [[131, "metricusage"]], "EpochWise": [[131, "epochwise"]], "BatchWise": [[131, "batchwise"]], "BatchFiltered": [[131, "batchfiltered"]], "reinit__is_reduced": [[131, "reinit-is-reduced"]], "sync_all_reduce": [[131, "sync-all-reduce"]], "Quick start": [[132, "quick-start"]], "Code": [[132, "code"]], "Explanation": [[132, "explanation"]], "ignite.utils": [[133, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[2, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[2, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[2, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[2, "module-ignite.contrib.engines.tbptt"]], "module": [[2, "module-ignite.contrib.engines.common"], [2, "module-ignite.contrib.engines.tbptt"], [4, "module-ignite.contrib.metrics.regression"], [5, "module-ignite.distributed.utils"], [10, "module-ignite.contrib.handlers.base_logger"], [11, "module-ignite.contrib.handlers.clearml_logger"], [12, "module-ignite.contrib.handlers.mlflow_logger"], [13, "module-ignite.contrib.handlers.neptune_logger"], [14, "module-ignite.contrib.handlers.polyaxon_logger"], [15, "module-ignite.contrib.handlers.tensorboard_logger"], [16, "module-ignite.contrib.handlers.tqdm_logger"], [17, "module-ignite.contrib.handlers.trains_logger"], [18, "module-ignite.contrib.handlers.visdom_logger"], [19, "module-ignite.contrib.handlers.wandb_logger"], [130, "module-ignite"], [130, "module-ignite.contrib"], [133, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[2, "ignite.contrib.engines.common.setup_wandb_logging"]], "ignite.contrib.metrics.regression": [[4, "module-ignite.contrib.metrics.regression"]], "all_gather() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.all_gather"]], "all_reduce() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[5, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.model_name"]], "one_rank_only() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[5, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[8, "ignite.exceptions.NotComputableError"]], "basehandler (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseOutputHandler"]], "baseweightshisthandler (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseWeightsHistHandler"]], "baseweightsscalarhandler (class in ignite.contrib.handlers.base_logger)": [[10, "ignite.contrib.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.contrib.handlers.base_logger.baselogger method)": [[10, "ignite.contrib.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[10, "ignite.contrib.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[10, "ignite.contrib.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.contrib.handlers.base_logger": [[10, "module-ignite.contrib.handlers.base_logger"]], "clearmllogger (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "global_step_from_engine() (in module ignite.contrib.handlers.clearml_logger)": [[11, "ignite.contrib.handlers.clearml_logger.global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger": [[11, "module-ignite.contrib.handlers.clearml_logger"]], "remove() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[11, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "mlflowlogger (class in ignite.contrib.handlers.mlflow_logger)": [[12, "ignite.contrib.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.contrib.handlers.mlflow_logger)": [[12, "ignite.contrib.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.mlflow_logger)": [[12, "ignite.contrib.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.mlflow_logger)": [[12, "ignite.contrib.handlers.mlflow_logger.global_step_from_engine"]], "ignite.contrib.handlers.mlflow_logger": [[12, "module-ignite.contrib.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.neptune_logger)": [[13, "ignite.contrib.handlers.neptune_logger.global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[13, "module-ignite.contrib.handlers.neptune_logger"]], "remove() (ignite.contrib.handlers.neptune_logger.neptunesaver method)": [[13, "ignite.contrib.handlers.neptune_logger.NeptuneSaver.remove"]], "optimizerparamshandler (class in ignite.contrib.handlers.polyaxon_logger)": [[14, "ignite.contrib.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.polyaxon_logger)": [[14, "ignite.contrib.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.contrib.handlers.polyaxon_logger)": [[14, "ignite.contrib.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.polyaxon_logger)": [[14, "ignite.contrib.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.contrib.handlers.polyaxon_logger": [[14, "module-ignite.contrib.handlers.polyaxon_logger"]], "gradshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.tensorboard_logger)": [[15, "ignite.contrib.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[15, "module-ignite.contrib.handlers.tensorboard_logger"]], "progressbar (class in ignite.contrib.handlers.tqdm_logger)": [[16, "ignite.contrib.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[16, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[16, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.contrib.handlers.tqdm_logger": [[16, "module-ignite.contrib.handlers.tqdm_logger"]], "log_message() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[16, "ignite.contrib.handlers.tqdm_logger.ProgressBar.log_message"]], "trainslogger (in module ignite.contrib.handlers.trains_logger)": [[17, "ignite.contrib.handlers.trains_logger.TrainsLogger"]], "trainssaver (in module ignite.contrib.handlers.trains_logger)": [[17, "ignite.contrib.handlers.trains_logger.TrainsSaver"]], "ignite.contrib.handlers.trains_logger": [[17, "module-ignite.contrib.handlers.trains_logger"]], "gradsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.visdom_logger)": [[18, "ignite.contrib.handlers.visdom_logger.global_step_from_engine"]], "ignite.contrib.handlers.visdom_logger": [[18, "module-ignite.contrib.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.contrib.handlers.wandb_logger)": [[19, "ignite.contrib.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.wandb_logger)": [[19, "ignite.contrib.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.contrib.handlers.wandb_logger)": [[19, "ignite.contrib.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.wandb_logger)": [[19, "ignite.contrib.handlers.wandb_logger.global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[19, "module-ignite.contrib.handlers.wandb_logger"]], "averageprecision (class in ignite.contrib.metrics)": [[20, "ignite.contrib.metrics.AveragePrecision"]], "cohenkappa (class in ignite.contrib.metrics)": [[21, "ignite.contrib.metrics.CohenKappa"]], "get_cohen_kappa_fn() (ignite.contrib.metrics.cohenkappa method)": [[21, "ignite.contrib.metrics.CohenKappa.get_cohen_kappa_fn"]], "gpuinfo (class in ignite.contrib.metrics)": [[22, "ignite.contrib.metrics.GpuInfo"]], "attach() (ignite.contrib.metrics.gpuinfo method)": [[22, "ignite.contrib.metrics.GpuInfo.attach"]], "completed() (ignite.contrib.metrics.gpuinfo method)": [[22, "ignite.contrib.metrics.GpuInfo.completed"]], "compute() (ignite.contrib.metrics.gpuinfo method)": [[22, "ignite.contrib.metrics.GpuInfo.compute"]], "reset() (ignite.contrib.metrics.gpuinfo method)": [[22, "ignite.contrib.metrics.GpuInfo.reset"]], "update() (ignite.contrib.metrics.gpuinfo method)": [[22, "ignite.contrib.metrics.GpuInfo.update"]], "precisionrecallcurve (class in ignite.contrib.metrics)": [[23, "ignite.contrib.metrics.PrecisionRecallCurve"]], "roc_auc (class in ignite.contrib.metrics)": [[24, "ignite.contrib.metrics.ROC_AUC"]], "roccurve (class in ignite.contrib.metrics)": [[25, "ignite.contrib.metrics.RocCurve"]], "canberrametric (class in ignite.contrib.metrics.regression)": [[26, "ignite.contrib.metrics.regression.CanberraMetric"]], "compute() (ignite.contrib.metrics.regression.canberrametric method)": [[26, "ignite.contrib.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.contrib.metrics.regression.canberrametric method)": [[26, "ignite.contrib.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.contrib.metrics.regression)": [[27, "ignite.contrib.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[27, "ignite.contrib.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[27, "ignite.contrib.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.contrib.metrics.regression)": [[28, "ignite.contrib.metrics.regression.FractionalBias"]], "compute() (ignite.contrib.metrics.regression.fractionalbias method)": [[28, "ignite.contrib.metrics.regression.FractionalBias.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalbias method)": [[28, "ignite.contrib.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.contrib.metrics.regression)": [[29, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[30, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[30, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[30, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "manhattandistance (class in ignite.contrib.metrics.regression)": [[31, "ignite.contrib.metrics.regression.ManhattanDistance"]], "compute() (ignite.contrib.metrics.regression.manhattandistance method)": [[31, "ignite.contrib.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.contrib.metrics.regression.manhattandistance method)": [[31, "ignite.contrib.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.contrib.metrics.regression)": [[32, "ignite.contrib.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[32, "ignite.contrib.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[32, "ignite.contrib.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.contrib.metrics.regression)": [[33, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[33, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[33, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.contrib.metrics.regression)": [[34, "ignite.contrib.metrics.regression.MeanError"]], "compute() (ignite.contrib.metrics.regression.meanerror method)": [[34, "ignite.contrib.metrics.regression.MeanError.compute"]], "reset() (ignite.contrib.metrics.regression.meanerror method)": [[34, "ignite.contrib.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.contrib.metrics.regression)": [[35, "ignite.contrib.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[35, "ignite.contrib.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[35, "ignite.contrib.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.contrib.metrics.regression)": [[36, "ignite.contrib.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.contrib.metrics.regression)": [[37, "ignite.contrib.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[38, "ignite.contrib.metrics.regression.MedianRelativeAbsoluteError"]], "r2score (class in ignite.contrib.metrics.regression)": [[39, "ignite.contrib.metrics.regression.R2Score"]], "compute() (ignite.contrib.metrics.regression.r2score method)": [[39, "ignite.contrib.metrics.regression.R2Score.compute"]], "reset() (ignite.contrib.metrics.regression.r2score method)": [[39, "ignite.contrib.metrics.regression.R2Score.reset"]], "wavehedgesdistance (class in ignite.contrib.metrics.regression)": [[40, "ignite.contrib.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[40, "ignite.contrib.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[40, "ignite.contrib.metrics.regression.WaveHedgesDistance.reset"]], "distributedproxysampler (class in ignite.distributed.auto)": [[41, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[42, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[43, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[44, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[45, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[45, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[46, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[47, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[48, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[48, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[49, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[49, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[50, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[51, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[52, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.has_event_handler"]], "last_event_name (ignite.engine.engine.engine attribute)": [[52, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[52, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[52, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[53, "ignite.engine.events.CallableEventWithFilter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[53, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[53, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[53, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[53, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[53, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[54, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[55, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "iteration_completed (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[55, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[56, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[57, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[57, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[58, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[58, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[59, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[60, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[61, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[62, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[63, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[64, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[65, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[65, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[66, "ignite.handlers.TimeLimit"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[67, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[67, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[67, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[68, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[68, "ignite.handlers.checkpoint.Checkpoint.Item"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[68, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[68, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[68, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[68, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[68, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[68, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[68, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[68, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[69, "ignite.handlers.checkpoint.ModelCheckpoint"]], "earlystopping (class in ignite.handlers.early_stopping)": [[70, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[70, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[70, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[71, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[71, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[71, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[71, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[71, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "momentum_warmup (ignite.handlers.ema_handler.emahandler attribute)": [[71, "ignite.handlers.ema_handler.EMAHandler.momentum_warmup"]], "warmup_iters (ignite.handlers.ema_handler.emahandler attribute)": [[71, "ignite.handlers.ema_handler.EMAHandler.warmup_iters"]], "global_step_from_engine() (in module ignite.handlers)": [[72, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[73, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[74, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[75, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[75, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[75, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[75, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[75, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[76, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[76, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[77, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[78, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[78, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[78, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[79, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[79, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[80, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[80, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[80, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[80, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[81, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[81, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[82, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[82, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[83, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[84, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[84, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[85, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[85, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[86, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[86, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[87, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[87, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[88, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[88, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[88, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[89, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[89, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[90, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[90, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[90, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[90, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[90, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[90, "ignite.handlers.stores.EpochOutputStore.update"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[91, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[92, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[92, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[92, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[92, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[92, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[93, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[93, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[93, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[93, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[93, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[94, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[94, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[94, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[94, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[94, "ignite.handlers.timing.Timer.value"]], "accuracy (class in ignite.metrics)": [[95, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[95, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[95, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[95, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[96, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[96, "ignite.metrics.Average.compute"]], "bleu (class in ignite.metrics)": [[97, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[97, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[97, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[97, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[98, "ignite.metrics.ClassificationReport"]], "dicecoefficient() (in module ignite.metrics)": [[99, "ignite.metrics.DiceCoefficient"]], "epochmetric (class in ignite.metrics)": [[100, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[100, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[101, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[101, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[102, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[103, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[103, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[104, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[104, "ignite.metrics.GeometricAverage.compute"]], "inceptionscore (class in ignite.metrics)": [[105, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[105, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[106, "ignite.metrics.IoU"]], "jaccardindex() (in module ignite.metrics)": [[107, "ignite.metrics.JaccardIndex"]], "loss (class in ignite.metrics)": [[108, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[108, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[108, "ignite.metrics.Loss.update"]], "meanabsoluteerror (class in ignite.metrics)": [[109, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[109, "ignite.metrics.MeanAbsoluteError.update"]], "meanpairwisedistance (class in ignite.metrics)": [[110, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[110, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[111, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[111, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[112, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[112, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "psnr (class in ignite.metrics)": [[113, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[113, "ignite.metrics.PSNR.update"]], "rootmeansquarederror (class in ignite.metrics)": [[114, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[114, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[115, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[115, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[116, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[117, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[118, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.compute"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[118, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[118, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[119, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[119, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[120, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[120, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[121, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[121, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[121, "ignite.metrics.VariableAccumulation.update"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[122, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[123, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[124, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.iteration_completed"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[124, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.started"]], "update() (ignite.metrics.metric.metric method)": [[124, "ignite.metrics.metric.Metric.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[125, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[126, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[126, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[127, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[127, "ignite.metrics.recall.Recall.update"]], "ignite": [[130, "module-ignite"]], "ignite.contrib": [[130, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[131, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[131, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[131, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[131, "ignite.metrics.metric.MetricUsage"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[131, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[131, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[131, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[131, "ignite.metrics.metric.EpochWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[133, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[133, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[133, "ignite.utils.convert_tensor"]], "ignite.utils": [[133, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[133, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[133, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[133, "ignite.utils.to_onehot"]]}})