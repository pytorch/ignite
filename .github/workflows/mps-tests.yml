name: Run unit tests on M1
on:
  push:
    branches:
      - master
      - "*.*.*"
    paths:
      - "ignite/**"
      - "tests/ignite/**"
      - "tests/run_code_style.sh"
      - "examples/**.py"
      - "requirements-dev.txt"
      - ".github/workflows/mps-tests.yml"
  pull_request:
    paths:
      - "ignite/**"
      - "tests/ignite/**"
      - "tests/run_code_style.sh"
      - "examples/**.py"
      - "requirements-dev.txt"
      - ".github/workflows/mps-tests.yml"
  workflow_dispatch:

concurrency:
  group: mps-tests-${{ github.ref_name }}-${{ !(github.ref_protected) || github.sha }}
  cancel-in-progress: true

jobs:
  mps-tests:
    runs-on: macos-14
    strategy:
      matrix:
        python-version: [3.11]
        pytorch-channel: ["pytorch"]
        skip-distrib-tests: [1]
      fail-fast: false
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies with uv
        run: |
          uv pip install -r requirements-dev.txt
          uv pip install -e .
          pip list

      - name: Download MNIST
        uses: pytorch-ignite/download-mnist-github-action@master
        with:
          target_dir: /tmp

      # Copy MNIST to "." for the examples
      - name: Copy MNIST
        run: |
          cp -R /tmp/MNIST .

      - name: Run Tests
        run: |
          SKIP_DISTRIB_TESTS=${{ matrix.skip-distrib-tests }} bash tests/run_cpu_tests.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: mps
          fail_ci_if_error: false

      - name: Run MNIST Examples
        run: |
          python examples/mnist/mnist.py --epochs=1
