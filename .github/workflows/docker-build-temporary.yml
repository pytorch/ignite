name: Build Docker Images Tests

on:
  pull_request:
    paths:
      - docker/**
      - ".github/workflows/docker-build-temporary.yml"

jobs:
  prepare:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Changed Files Exporter
        id: files
        uses: futuratrepadeira/changed-files@v3.3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      # Get list of modified files
      - run: echo "modified=${{ steps.files.outputs.files_created }} ${{ steps.files.outputs.files_updated }}" >> $GITHUB_ENV

      - name: Debug Step
        run: echo "${{ env.modified }}"

  build-hvd:
    # Trigger only if folder is modified
    if: contains(env.modified, 'hvd/')
    name: Build all Horovod flavoured PyTorch-Ignite images
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        flavour: [ "hvd-base", "hvd-vision", "hvd-nlp" ]
    steps:
      - run: |
        pip install PyYAML
        export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
        export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
        cd docker
        bash build.sh hvd "${{ matrix.flavour }}"
        bash build.sh hvd "${{ matrix.flavour }}"
        bash build.sh hvd "${{ matrix.flavour }}"

  build-hvd-apex:
    # Trigger only if folder is modified
    if: contains(env.modified, 'hvd/')
    name: Build all Horovod + Apex flavoured PyTorch-Ignite images
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        flavour: [ "hvd-apex", "hvd-vision", "hvd-nlp" ]
    steps:
      - run: |
        pip install PyYAML
        export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
        export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
        cd docker
        bash build.sh hvd "${{ matrix.flavour }}"
        bash build.sh hvd "${{ matrix.flavour }}"
        bash build.sh hvd "${{ matrix.flavour }}"

  build-main:
    # Trigger only if folder is modified
    if: contains(env.modified, 'main/')
    name: Build all PyTorch-Ignite images
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        flavour: [ "base", "vision", "nlp" ]
    steps:
      - run: |
        pip install PyYAML
        export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
        cd docker
        bash build.sh main "${{ matrix.flavour }}"
        bash build.sh main "${{ matrix.flavour }}"
        bash build.sh main "${{ matrix.flavour }}"

  build-main-apex:
    # Trigger only if folder is modified
    if: contains(env.modified, 'main/')
    name: Build all PyTorch-Ignite images with Apex
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        flavour: [ "apex", "apex-vision", "apex-nlp" ]
    steps:
      - run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          bash build.sh main "${{ matrix.flavour }}"
          bash build.sh main "${{ matrix.flavour }}"
          bash build.sh main "${{ matrix.flavour }}"

  build-msdp-apex:
    # Trigger only if folder is modified
    if: contains(env.modified, 'msdp/')
    name: Build all MS DeepSpeed flavoured PyTorch-Ignite images
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        flavour: [ "msdp-apex", "msdp-apex-vision", "msdp-apex-nlp" ]
    steps:
      - run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export MSDP_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_msdp_version']['default'])"`     
          cd docker
          bash build.sh msdp "${{ matrix.flavour }}"
          bash build.sh msdp "${{ matrix.flavour }}"
          bash build.sh msdp "${{ matrix.flavour }}"
