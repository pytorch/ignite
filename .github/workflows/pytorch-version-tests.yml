name: PyTorch version tests

on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
  schedule:
    # Run at 00:00 UTC Every Day
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 85
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        python-version: [3.9, "3.10", "3.11"]
        pytorch-version: [2.5.1, 2.4.1, 2.3.1, 2.2.2, 1.13.1, 1.12.1, 1.10.0]
        exclude:
          - pytorch-version: 1.10.0
            python-version: "3.10"
          - pytorch-version: 1.10.0
            python-version: "3.11"

          - pytorch-version: 1.11.0
            python-version: "3.10"
          - pytorch-version: 1.11.0
            python-version: "3.11"
          - pytorch-version: 1.12.1
            python-version: "3.11"
          # Conda fails to install cpuonly version and few cpu distributed tests are
          # failing with unrelated errors
          - pytorch-version: 1.13.1
            python-version: "3.11"

    steps:
      - uses: actions/checkout@v5

      - name: Get year & week number
        id: get-date
        run: echo "date=$(/bin/date "+%Y-%U")" >> $GITHUB_OUTPUT
        shell: bash -l {0}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python3 -m pip install -U pip
          echo "pip_cache=$(uv cache dir)" >> $GITHUB_OUTPUT
        shell: bash -l {0}

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "requirements-dev.txt"
      
      - name: Install dependencies
        run: |
          # Install PyTorch from PyPI (much faster than conda)
          uv pip install torch==${{ matrix.pytorch-version }} torchvision --index-url https://download.pytorch.org/whl/cpu

          # We should install numpy<2.0 for pytorch<2.3
          numpy_one_pth_version=$(python -c "import torch; print(float('.'.join(torch.__version__.split('.')[:2])) < 2.3)")
          if [ "${numpy_one_pth_version}" == "True" ]; then
          uv pip install "numpy<2.0"
          fi

          uv pip install -r requirements-dev.txt
          uv pip install .
      
          # pytorch>=1.9.0,<1.11.0 is using "from setuptools import distutils; distutils.version.LooseVersion" anti-pattern
          # which raises the error: AttributeError: module 'distutils' has no attribute 'version' for setuptools>59
          bad_pth_version=$(python -c "import torch; print('.'.join(torch.__version__.split('.')[:2]) in ['1.9', '1.10'])")
          if [ "${bad_pth_version}" == "True" ]; then
            uv pip install "setuptools<59"
            python -c "from setuptools import distutils; distutils.version.LooseVersion"
          fi

      - name: Download MNIST
        uses: pytorch-ignite/download-mnist-github-action@master
        with:
          target_dir: /tmp

      - name: Run Tests
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 5
          timeout_minutes: 15
          shell: bash
          command: bash tests/run_cpu_tests.sh "not test_time_profilers"
          new_command_on_retry: USE_LAST_FAILED=1 bash tests/run_cpu_tests.sh "not test_time_profilers"

  create-issue:
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
    needs: build
    if: always() && needs.build.result == 'failure'
    steps:
      - uses: actions/checkout@v5
      - uses: JasonEtco/create-an-issue@v2
        name: Create issue if pytorch version tests failed
        with:
          filename: .github/failed_schedule_issue_template.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}