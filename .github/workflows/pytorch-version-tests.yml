name: PyTorch version tests

on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
  schedule:
    # Run at 00:00 UTC Every Day
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        pytorch-version: [1.8.0, 1.7.1, 1.6.0, 1.5.1, 1.4.0, 1.3.1]
        exclude:
          - pytorch-version: 1.3.1
            python-version: 3.8

    steps:
      - uses: actions/checkout@v2

      - name: Get year & week number
        id: get-date
        run: echo "::set-output name=date::$(/bin/date "+%Y-%U")"
        shell: bash -l {0}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python3 -m pip install -U pip
          echo "::set-output name=dir::$(python3 -m pip cache dir)"
        shell: bash -l {0}

      - uses: actions/cache@v2
        with:
          path: |
            ~/conda_pkgs_dir
            ${{ steps.pip-cache.outputs.dir }}
          key: ${{ steps.get-date.outputs.date }}-pytorch-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.pytorch-version }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ steps.get-date.outputs.date }}-pytorch-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.pytorch-version }}-

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install pytorch=${{ matrix.pytorch-version }} torchvision cpuonly python=${{ matrix.python-version }} -c pytorch
          pip install -r requirements-dev.txt
          python setup.py install

      - name: Download MNIST
        uses: pytorch-ignite/download-mnist-github-action@master
        with:
          target_dir: /tmp

      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest tests -vvv

  create-issue:
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
    needs: build
    if: always() && needs.build.result == 'failure'
    steps:
      - uses: actions/checkout@v2
      - uses: JasonEtco/create-an-issue@v2
        name: Create issue if pytorch version tests failed
        with:
          filename: .github/failed_schedule_issue_template.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
