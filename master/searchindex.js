Search.setIndex({"docnames": ["contrib/engines", "contrib/handlers", "contrib/metrics", "defaults", "distributed", "engine", "exceptions", "generated/defaults", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.base_logger", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.CheckpointEvents", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.clearml_logger", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.fbresearch_logger", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.mlflow_logger", "generated/ignite.handlers.neptune_logger", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.polyaxon_logger", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.tensorboard_logger", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.handlers.tqdm_logger", "generated/ignite.handlers.visdom_logger", "generated/ignite.handlers.wandb_logger", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.AveragePrecision", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.CohenKappa", "generated/ignite.metrics.CommonObjectDetectionMetrics", "generated/ignite.metrics.CosineSimilarity", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.Entropy", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.GpuInfo", "generated/ignite.metrics.HSIC", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JSDivergence", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.KLDivergence", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MaximumMeanDiscrepancy", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanAveragePrecision", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.MutualInformation", "generated/ignite.metrics.ObjectDetectionAvgPrecisionRecall", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.PrecisionRecallCurve", "generated/ignite.metrics.ROC_AUC", "generated/ignite.metrics.RocCurve", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.clustering.CalinskiHarabaszScore", "generated/ignite.metrics.clustering.DaviesBouldinScore", "generated/ignite.metrics.clustering.SilhouetteScore", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metric_group.MetricGroup", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "generated/ignite.metrics.regression.CanberraMetric", "generated/ignite.metrics.regression.FractionalAbsoluteError", "generated/ignite.metrics.regression.FractionalBias", "generated/ignite.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.metrics.regression.KendallRankCorrelation", "generated/ignite.metrics.regression.ManhattanDistance", "generated/ignite.metrics.regression.MaximumAbsoluteError", "generated/ignite.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.metrics.regression.MeanError", "generated/ignite.metrics.regression.MeanNormalizedBias", "generated/ignite.metrics.regression.MedianAbsoluteError", "generated/ignite.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.metrics.regression.PearsonCorrelation", "generated/ignite.metrics.regression.R2Score", "generated/ignite.metrics.regression.SpearmanRankCorrelation", "generated/ignite.metrics.regression.WaveHedgesDistance", "generated/ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list", "handlers", "index", "metrics", "utils"], "filenames": ["contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "defaults.rst", "distributed.rst", "engine.rst", "exceptions.rst", "generated/defaults.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.base_logger.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.CheckpointEvents.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.clearml_logger.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.fbresearch_logger.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.mlflow_logger.rst", "generated/ignite.handlers.neptune_logger.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.polyaxon_logger.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.tensorboard_logger.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.handlers.tqdm_logger.rst", "generated/ignite.handlers.visdom_logger.rst", "generated/ignite.handlers.wandb_logger.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.AveragePrecision.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.CohenKappa.rst", "generated/ignite.metrics.CommonObjectDetectionMetrics.rst", "generated/ignite.metrics.CosineSimilarity.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.Entropy.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.GpuInfo.rst", "generated/ignite.metrics.HSIC.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JSDivergence.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.KLDivergence.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MaximumMeanDiscrepancy.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanAveragePrecision.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.MutualInformation.rst", "generated/ignite.metrics.ObjectDetectionAvgPrecisionRecall.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.PrecisionRecallCurve.rst", "generated/ignite.metrics.ROC_AUC.rst", "generated/ignite.metrics.RocCurve.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.clustering.CalinskiHarabaszScore.rst", "generated/ignite.metrics.clustering.DaviesBouldinScore.rst", "generated/ignite.metrics.clustering.SilhouetteScore.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metric_group.MetricGroup.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "generated/ignite.metrics.regression.CanberraMetric.rst", "generated/ignite.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.metrics.regression.FractionalBias.rst", "generated/ignite.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.metrics.regression.KendallRankCorrelation.rst", "generated/ignite.metrics.regression.ManhattanDistance.rst", "generated/ignite.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.metrics.regression.MeanError.rst", "generated/ignite.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.metrics.regression.PearsonCorrelation.rst", "generated/ignite.metrics.regression.R2Score.rst", "generated/ignite.metrics.regression.SpearmanRankCorrelation.rst", "generated/ignite.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list.rst", "handlers.rst", "index.rst", "metrics.rst", "utils.rst"], "titles": ["ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "&lt;no title&gt;", "ignite.distributed", "ignite.engine", "ignite.exceptions", "&lt;no title&gt;", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "base_logger", "BaseSaveHandler", "Checkpoint", "CheckpointEvents", "ModelCheckpoint", "clearml_logger", "EarlyStopping", "EMAHandler", "fbresearch_logger", "global_step_from_engine", "FastaiLRFinder", "mlflow_logger", "neptune_logger", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "ReduceLROnPlateauScheduler", "create_lr_scheduler_with_warmup", "polyaxon_logger", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "tensorboard_logger", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "tqdm_logger", "visdom_logger", "wandb_logger", "Accuracy", "Average", "AveragePrecision", "Bleu", "ClassificationReport", "CohenKappa", "CommonObjectDetectionMetrics", "CosineSimilarity", "DiceCoefficient", "Entropy", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "GpuInfo", "HSIC", "InceptionScore", "IoU", "JSDivergence", "JaccardIndex", "KLDivergence", "Loss", "MaximumMeanDiscrepancy", "MeanAbsoluteError", "MeanAveragePrecision", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "MutualInformation", "ObjectDetectionAvgPrecisionRecall", "PSNR", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "CalinskiHarabaszScore", "DaviesBouldinScore", "SilhouetteScore", "ConfusionMatrix", "mIoU", "Metric", "MetricGroup", "MetricsLambda", "Precision", "Recall", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "KendallRankCorrelation", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "PearsonCorrelation", "R2Score", "SpearmanRankCorrelation", "WaveHedgesDistance", "coco_tensor_list_to_dict_list", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "ignite.utils"], "terms": {"contribut": [0, 1, 120], "modul": [0, 1, 4, 5, 10, 12, 13, 14, 26, 27, 28, 29, 30, 31, 34, 36, 39, 41, 46, 66, 72, 73, 85, 91, 122, 147, 148, 149], "tool": [0, 4, 12], "tbptt": 0, "common": [0, 4, 39, 45, 46, 58, 66, 72, 73, 80, 111, 148], "class": [0, 5, 6, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "tbptt_event": [0, 19], "valu": [0, 4, 12, 13, 14, 15, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 76, 81, 85, 86, 87, 89, 90, 91, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148], "sourc": [0, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "adit": 0, "event": [0, 15, 19, 20, 21, 23, 24, 25, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 87, 89, 113, 146, 147, 148], "addit": [0, 4, 5, 10, 15, 19, 36, 57, 77, 85, 96, 99, 119, 125], "dedic": 0, "create_supervised_tbptt_train": 0, "model": [0, 3, 4, 5, 7, 10, 13, 14, 19, 26, 27, 28, 29, 30, 31, 34, 36, 38, 39, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "optim": [0, 3, 4, 5, 7, 10, 11, 13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 34, 36, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "loss_fn": [0, 14, 28, 29, 30, 31, 96], "tbtt_step": 0, "dim": [0, 19, 75, 76, 85, 88, 99, 115, 148], "0": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "devic": [0, 4, 9, 10, 13, 14, 19, 26, 27, 28, 29, 30, 31, 35, 36, 41, 45, 58, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "none": [0, 4, 5, 8, 12, 13, 14, 16, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148, 149], "non_block": [0, 13, 14, 19, 26, 27, 28, 29, 30, 31, 122, 149], "fals": [0, 4, 10, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 86, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 148, 149], "prepare_batch": [0, 13, 14, 19, 26, 27, 28, 29, 30, 31, 122], "function": [0, 4, 5, 12, 13, 14, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 58, 59, 61, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "_prepare_batch": [0, 13, 14, 26, 27, 28, 29, 30, 31], "creat": [0, 3, 4, 7, 9, 11, 13, 14, 19, 21, 26, 27, 32, 33, 36, 38, 39, 41, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149], "backprop": 0, "supervis": [0, 13, 14, 26, 27, 28, 29, 30, 31, 44, 147], "train": [0, 4, 8, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 54, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 85, 89, 113, 122, 124, 147, 149], "recurr": 0, "long": [0, 84, 96, 104, 120], "sequenc": [0, 4, 39, 45, 46, 49, 50, 52, 54, 55, 58, 66, 72, 73, 74, 77, 80, 81, 83, 85, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 110, 111, 112, 114, 115, 120, 123, 124, 125, 126, 149], "i": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149], "computation": 0, "intens": 0, "requir": [0, 4, 14, 19, 28, 29, 30, 31, 36, 44, 45, 47, 58, 72, 77, 81, 83, 85, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 109, 115, 117, 118, 119, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "process": [0, 4, 8, 9, 10, 11, 12, 14, 35, 36, 39, 42, 68, 69, 70, 73, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 105, 110, 113, 114, 115, 116, 120, 122, 123, 124, 126, 131, 132, 143, 148, 149], "whole": [0, 47, 48, 53], "befor": [0, 4, 10, 13, 14, 19, 20, 22, 26, 27, 33, 36, 44, 49, 50, 52, 74, 75, 76, 79, 81, 83, 84, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 131, 132, 138, 139, 140, 143, 148], "get": [0, 4, 14, 25, 35, 36, 39, 41, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 64, 66, 85, 113, 120, 148], "gradient": [0, 14, 28, 29, 30, 31, 34, 39, 44, 46, 66, 72, 73], "howev": [0, 5, 71, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "when": [0, 4, 5, 15, 19, 22, 33, 36, 37, 39, 41, 44, 46, 56, 63, 66, 70, 71, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148, 149], "loss": [0, 14, 19, 21, 28, 29, 30, 31, 36, 39, 42, 44, 45, 46, 56, 58, 65, 66, 71, 72, 73, 122, 123], "comput": [0, 4, 5, 6, 19, 33, 36, 41, 49, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "over": [0, 19, 39, 44, 46, 48, 49, 50, 52, 53, 55, 66, 72, 80, 92, 96, 99, 104, 121, 148], "mani": 0, "output": [0, 13, 14, 19, 25, 26, 27, 28, 29, 30, 31, 34, 36, 38, 39, 42, 43, 44, 45, 46, 56, 57, 58, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "x": [0, 4, 13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 42, 58, 65, 71, 75, 85, 87, 88, 89, 90, 91, 96, 97, 103, 113, 116, 117, 118, 119, 122, 143, 148, 149], "an": [0, 4, 5, 13, 14, 15, 16, 19, 22, 25, 26, 27, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 79, 84, 85, 88, 91, 96, 104, 105, 106, 107, 108, 113, 117, 118, 119, 120, 122, 132, 143, 148, 149], "opportun": 0, "subsequ": [0, 111], "thi": [0, 4, 5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 33, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 58, 60, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "known": [0, 135], "appli": [0, 9, 10, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 36, 39, 41, 44, 46, 49, 50, 52, 66, 72, 76, 79, 106, 107, 108, 124, 148, 149], "step": [0, 4, 5, 11, 14, 19, 21, 28, 29, 30, 31, 36, 38, 39, 41, 43, 45, 46, 58, 59, 61, 64, 66, 70, 72, 73], "everi": [0, 4, 5, 19, 20, 22, 23, 36, 38, 39, 41, 42, 45, 46, 58, 59, 60, 64, 65, 66, 70, 71, 72, 73, 87, 113, 122, 124, 148, 149], "while": [0, 5, 9, 17, 36, 39, 43, 44, 45, 46, 58, 66, 72, 73, 83, 103], "same": [0, 4, 5, 12, 15, 16, 36, 41, 44, 56, 74, 75, 77, 81, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "paramet": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149], "us": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "int": [0, 4, 8, 12, 14, 16, 19, 20, 25, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 66, 70, 72, 73, 77, 78, 80, 82, 85, 87, 91, 92, 94, 100, 102, 104, 105, 110, 112, 114, 115, 120, 121, 149], "length": [0, 19, 25, 49, 50, 52, 104, 111], "chunk": 0, "last": [0, 5, 19, 36, 38, 40, 48, 49, 50, 52, 113, 148], "one": [0, 5, 10, 12, 19, 36, 40, 44, 52, 53, 61, 67, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "mai": [0, 4, 13, 14, 19, 24, 26, 27, 28, 29, 30, 31, 44, 71, 120], "smaller": [0, 36], "axi": [0, 120], "repres": [0, 42, 55, 62, 120], "dimens": [0, 4, 75, 88, 96, 99, 102, 114, 116, 125, 145], "option": [0, 4, 5, 8, 12, 13, 14, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 65, 66, 70, 71, 72, 73, 76, 77, 78, 79, 82, 84, 85, 86, 91, 92, 94, 96, 99, 104, 107, 108, 110, 113, 116, 119, 120, 121, 122, 125, 126, 138, 139, 140, 149], "str": [0, 4, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "type": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "specif": [0, 4, 5, 11, 12, 13, 14, 16, 22, 26, 27, 28, 29, 30, 31, 36, 39, 46, 66, 76, 78, 79, 84, 107, 108, 138, 139, 140, 148], "default": [0, 3, 4, 5, 7, 9, 10, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "batch": [0, 3, 4, 5, 7, 9, 13, 14, 15, 16, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 36, 38, 44, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "bool": [0, 4, 10, 13, 14, 19, 20, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 149], "true": [0, 3, 4, 5, 7, 9, 10, 13, 14, 15, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 42, 44, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "copi": [0, 13, 14, 26, 27, 28, 29, 30, 31, 39, 41, 47, 48, 53], "between": [0, 5, 13, 14, 19, 25, 26, 27, 28, 29, 30, 31, 42, 44, 55, 70, 90, 99, 103, 104, 105, 110, 111, 112, 119, 120], "cpu": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 36, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "gpu": [0, 4, 12, 13, 14, 26, 27, 28, 29, 30, 31, 42, 89, 148], "occur": [0, 13, 14, 26, 27, 28, 29, 30, 31, 32, 38, 70, 112], "asynchron": [0, 13, 14, 26, 27, 28, 29, 30, 31, 149], "respect": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 41, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149], "host": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 149], "For": [0, 4, 5, 11, 12, 13, 14, 15, 17, 26, 27, 28, 29, 30, 31, 36, 39, 44, 45, 46, 58, 66, 67, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 125, 126, 148], "other": [0, 4, 10, 11, 12, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 36, 39, 41, 44, 46, 96, 104, 105, 119, 120, 122, 124, 148], "case": [0, 4, 5, 13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 41, 74, 75, 76, 78, 79, 86, 88, 89, 99, 104, 106, 107, 108, 113, 120, 123, 125, 126, 148], "argument": [0, 4, 9, 10, 12, 13, 14, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 43, 45, 46, 51, 52, 56, 58, 65, 66, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148, 149], "ha": [0, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 41, 77, 102, 110, 120, 148], "effect": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31], "callabl": [0, 4, 12, 13, 14, 15, 17, 19, 20, 24, 26, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 58, 60, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "receiv": [0, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 36, 74, 75, 77, 81, 83, 84, 86, 88, 90, 93, 95, 97, 98, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "tupl": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 39, 45, 46, 48, 53, 55, 58, 62, 66, 69, 72, 73, 77, 84, 89, 96, 99, 104, 110, 113, 116, 122, 125, 132, 143, 145, 149], "tensor": [0, 4, 13, 14, 26, 27, 28, 29, 30, 31, 34, 39, 45, 46, 58, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149], "batch_x": [0, 13, 14, 26, 27, 28, 29, 30, 31], "batch_i": [0, 13, 14, 26, 27, 28, 29, 30, 31], "return": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "updat": [0, 9, 14, 21, 28, 29, 30, 31, 41, 47, 49, 50, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "The": [0, 4, 11, 13, 14, 19, 20, 22, 26, 27, 32, 36, 39, 41, 42, 44, 48, 49, 59, 61, 67, 78, 79, 81, 83, 85, 86, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "intern": [0, 5, 9, 10, 11, 13, 14, 15, 16, 19, 20, 25, 26, 27, 36, 38, 40, 54, 63, 70, 76, 78, 79, 84, 107, 108, 122, 138, 139, 140, 148, 149], "chang": [0, 4, 10, 11, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 41, 45, 46, 49, 50, 51, 52, 56, 58, 59, 61, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 87, 88, 89, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 142, 144, 148, 149], "now": [0, 4, 12, 13, 14, 24, 26, 27, 65, 71, 77, 110, 149], "onli": [0, 4, 10, 12, 13, 14, 19, 20, 26, 27, 36, 38, 39, 46, 52, 66, 84, 85, 86, 90, 91, 104, 105, 113, 120, 131], "move": [0, 1, 2, 13, 14, 26, 27, 28, 29, 30, 31, 32, 36, 38, 41, 147, 149], "input": [0, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 26, 27, 32, 36, 38, 39, 45, 46, 58, 60, 66, 72, 73, 75, 77, 84, 85, 88, 91, 96, 99, 103, 110, 113, 114, 116, 122, 125, 126, 131, 138, 139, 140, 145, 149], "data": [0, 4, 5, 8, 9, 13, 14, 15, 16, 19, 22, 24, 25, 26, 27, 36, 39, 40, 42, 65, 68, 69, 72, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 99, 102, 103, 105, 106, 107, 108, 113, 117, 118, 119, 120, 122, 124, 125, 126, 131, 132, 138, 139, 140, 143, 148, 149], "correct": [0, 13, 14, 20, 26, 27, 36, 71, 148], "should": [0, 4, 10, 12, 13, 14, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 50, 51, 52, 55, 56, 58, 62, 66, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 132, 143], "user": [0, 4, 5, 8, 9, 12, 13, 14, 19, 21, 22, 25, 26, 27, 36, 38, 41, 45, 46, 60, 76, 79, 84, 106, 107, 108, 114, 117, 118, 119, 123, 132, 143, 148], "more": [0, 4, 5, 10, 12, 13, 14, 15, 17, 19, 22, 38, 39, 44, 45, 46, 54, 56, 63, 66, 71, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 144, 147, 148], "inform": [0, 4, 13, 14, 39, 42, 44, 46, 66, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 124, 125, 126], "see": [0, 4, 5, 12, 13, 14, 15, 17, 19, 34, 36, 38, 39, 45, 70, 71, 73, 84, 96, 120, 122, 146, 148], "pytorch": [0, 4, 5, 8, 12, 13, 14, 19, 39, 45, 46, 58, 59, 61, 64, 66, 72, 73, 122, 147, 148], "document": [0, 13, 14, 73, 147], "": [0, 4, 5, 8, 10, 11, 13, 14, 15, 19, 22, 26, 27, 28, 29, 30, 31, 34, 36, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "explan": [0, 13, 14], "add_early_stopping_by_val_scor": 0, "patienc": [0, 40, 56, 146], "metric_nam": [0, 34, 36, 39, 45, 46, 56, 58, 66, 71, 72, 73, 87, 89], "score_sign": [0, 36], "1": [0, 3, 4, 5, 7, 10, 12, 14, 15, 19, 22, 25, 28, 29, 30, 31, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "earli": 0, "stop": [0, 40, 44, 56, 67], "handler": [0, 3, 4, 5, 7, 14, 15, 19, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149], "base": [0, 3, 5, 7, 8, 19, 21, 25, 34, 35, 36, 38, 39, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "score": [0, 35, 36, 38, 40, 77, 78, 86, 91, 104, 110, 111, 112, 117, 118, 119], "name": [0, 4, 12, 13, 14, 19, 20, 24, 25, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 80, 87, 89, 113, 122, 123, 124, 148, 149], "provid": [0, 4, 5, 9, 10, 11, 12, 15, 16, 19, 22, 35, 36, 38, 39, 40, 43, 44, 45, 46, 57, 58, 66, 72, 73, 86, 87, 89, 96, 100, 104, 122, 124, 148], "metric": [0, 3, 5, 6, 7, 13, 19, 25, 26, 27, 34, 36, 39, 40, 42, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "increas": [0, 40, 44, 49, 52, 53, 55, 56, 61, 62, 104], "order": [0, 5, 77, 112], "keep": [0, 4, 5, 17, 36, 39, 41, 44, 46, 66, 145, 148, 149], "number": [0, 4, 8, 9, 12, 14, 19, 25, 28, 29, 30, 31, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 63, 66, 67, 71, 72, 73, 75, 85, 87, 88, 91, 99, 102, 104, 114, 116, 120, 122, 125, 126, 132, 145, 149], "wait": [0, 40], "improv": [0, 40, 56, 149], "run": [0, 4, 5, 12, 14, 15, 19, 20, 22, 24, 25, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "present": [0, 19, 102], "state": [0, 5, 10, 11, 13, 14, 15, 17, 19, 24, 26, 27, 28, 29, 30, 31, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149], "float": [0, 4, 34, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 72, 73, 81, 84, 86, 90, 97, 99, 100, 104, 105, 110, 111, 112, 113, 114, 116, 122, 141], "sign": [0, 36], "error": [0, 36, 39, 65, 84, 98, 101, 105, 109, 128, 130, 131, 134, 135, 136, 138, 139, 140, 149], "like": [0, 4, 5, 12, 36, 71, 87, 89, 96, 99, 122, 125, 126, 148, 149], "e": [0, 5, 15, 19, 22, 35, 36, 38, 39, 40, 42, 45, 46, 57, 58, 65, 66, 70, 71, 72, 73, 82, 83, 92, 93, 94, 95, 97, 99, 103, 113, 117, 118, 119, 120, 121, 122, 124, 148, 149], "g": [0, 5, 19, 35, 36, 38, 39, 42, 45, 46, 57, 58, 65, 66, 70, 71, 72, 73, 82, 83, 91, 92, 93, 94, 95, 103, 113, 120, 121, 122, 124, 148, 149], "better": [0, 35, 36], "neg": [0, 4, 36, 74, 90, 102, 118, 126], "object": [0, 19, 20, 25, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 58, 60, 66, 68, 69, 70, 71, 72, 73, 80, 86, 91, 104, 113, 122, 124, 149], "larger": [0, 9, 10, 12, 19, 36, 50, 65, 84, 131, 138, 139, 140], "ar": [0, 4, 5, 10, 15, 19, 22, 32, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 48, 58, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 148, 149], "retain": [0, 36, 38], "A": [0, 4, 15, 19, 20, 24, 36, 38, 40, 42, 51, 89, 92, 94, 99, 105, 114, 117, 123, 131, 140, 141, 142, 143, 148], "earlystop": 0, "gen_save_best_models_by_val_scor": 0, "save_handl": [0, 36], "n_save": [0, 36, 38, 39, 46, 73], "3": [0, 4, 5, 10, 19, 22, 23, 33, 34, 36, 37, 38, 41, 42, 47, 51, 54, 55, 56, 57, 59, 60, 61, 68, 69, 71, 75, 81, 82, 84, 87, 88, 89, 90, 91, 92, 94, 98, 100, 101, 102, 105, 108, 109, 114, 115, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "tag": [0, 34, 39, 45, 46, 58, 66, 72, 73, 89], "val": 0, "kwarg": [0, 4, 9, 10, 11, 12, 19, 25, 32, 34, 36, 38, 39, 44, 45, 46, 47, 51, 53, 54, 56, 58, 63, 66, 71, 72, 73, 96, 122, 124, 148], "add": [0, 4, 19, 41], "save": [0, 5, 14, 15, 19, 32, 35, 36, 37, 38, 39, 40, 46, 53, 56, 65, 73, 122], "best": [0, 36, 39, 46, 56, 73, 110, 111, 112], "highest": [0, 36, 38], "logic": [0, 19], "how": [0, 41, 44, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 124, 125, 126, 147], "store": [0, 5, 15, 16, 19, 24, 36, 38, 39, 65, 68, 69, 84, 116, 131, 138, 139, 140, 148, 149], "deleg": 0, "union": [0, 4, 9, 13, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 41, 44, 45, 46, 47, 48, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "basesavehandl": [0, 36], "two": [0, 5, 19, 36, 38, 41, 44, 84, 104, 116, 132], "checkpoint": [0, 5, 32, 35, 37, 38, 39, 41, 46, 73, 149], "dictionari": [0, 15, 19, 25, 35, 36, 39, 44, 45, 46, 47, 48, 53, 58, 66, 71, 72, 73, 87, 89, 96, 104, 113, 122, 123, 124, 145], "filenam": [0, 32, 35, 36, 38, 39, 46, 68, 69, 149], "If": [0, 4, 9, 12, 13, 14, 15, 19, 26, 27, 32, 36, 38, 39, 41, 45, 46, 49, 50, 52, 56, 57, 58, 65, 66, 71, 72, 73, 76, 78, 79, 81, 83, 84, 85, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 122, 124, 132, 143, 148, 149], "can": [0, 4, 5, 10, 12, 13, 14, 15, 19, 21, 22, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 52, 58, 60, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "inherit": [0, 11, 21, 22, 36, 38, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "implement": [0, 11, 19, 34, 36, 44, 77, 78, 84, 85, 94, 96, 117, 118, 119, 122, 127, 131, 132, 138, 139, 140, 143, 148], "remov": [0, 1, 19, 20, 24, 32, 34, 35, 36, 38, 39, 44, 46], "fix": [0, 36, 127, 133], "In": [0, 4, 5, 10, 19, 35, 36, 39, 41, 60, 74, 77, 84, 85, 89, 96, 99, 104, 113, 120, 122, 125, 126, 131, 146, 148], "need": [0, 19, 20, 36, 38, 41, 44, 46, 66, 71, 72, 73, 79, 81, 83, 90, 93, 95, 97, 98, 99, 100, 101, 103, 105, 109, 113, 114, 115, 117, 118, 119, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "disk": [0, 32, 36, 38], "defin": [0, 3, 4, 7, 13, 14, 15, 19, 21, 22, 25, 26, 27, 34, 36, 38, 40, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 71, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "disksav": [0, 5, 36, 38, 41], "dict": [0, 13, 19, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 53, 58, 66, 68, 72, 73, 78, 87, 89, 96, 104, 119, 122, 123, 145], "have": [0, 4, 5, 8, 14, 19, 36, 39, 41, 45, 46, 58, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "state_dict": [0, 5, 15, 19, 36, 38, 40, 44, 47, 48, 53, 122], "load_state_dict": [0, 5, 19, 36, 40, 44, 47, 48, 53, 122], "fetch": [0, 4, 5, 22, 25, 68, 69], "epoch": [0, 5, 15, 19, 22, 24, 25, 36, 38, 39, 40, 42, 43, 45, 46, 49, 50, 52, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148, 149], "prefix": [0, 35, 36, 38], "_": [0, 4, 15, 19, 36, 38, 42, 70, 73, 97, 138, 139, 140], "By": [0, 4, 5, 19, 25, 36, 48, 66, 71, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "ani": [0, 4, 9, 10, 11, 12, 13, 14, 15, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148, 149], "keyword": [0, 9, 12, 19, 25, 32, 36, 38, 39, 56, 58, 66, 73, 96, 124, 148], "arg": [0, 4, 12, 19, 34, 38, 39, 45, 46, 52, 58, 66, 70, 71, 72, 73, 84, 107, 108, 122, 124, 148], "pass": [0, 4, 14, 19, 21, 22, 25, 33, 35, 36, 38, 44, 46, 53, 56, 65, 71, 72, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 105, 110, 113, 114, 115, 116, 119, 120, 122, 123, 124, 126, 132, 143, 148], "construct": [0, 14, 39, 46, 53, 56, 66, 123], "save_best_model_by_val_scor": 0, "output_path": [0, 68, 69], "path": [0, 32, 36, 38, 39, 66, 68, 69, 73, 149], "indic": [0, 5, 16, 20, 22, 38, 61, 70, 78, 117, 118, 120, 148, 149], "where": [0, 4, 32, 33, 36, 38, 39, 41, 45, 46, 48, 53, 58, 66, 71, 72, 73, 74, 77, 81, 83, 85, 86, 90, 91, 93, 95, 96, 97, 98, 99, 101, 103, 105, 109, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "setup_any_log": 0, "logger": [0, 34, 39, 42, 45, 46, 58, 66, 71, 72, 73, 147, 149], "logger_modul": 0, "log_every_it": 0, "deprec": [0, 20, 147], "sinc": [0, 1, 2, 14, 19, 22, 38, 39, 40, 41, 45, 46, 58, 66, 72, 73, 148], "version": [0, 1, 2, 4, 5, 10, 11, 12, 13, 14, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 142, 143, 144, 148, 149], "4": [0, 1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "pleas": [0, 4, 5, 9, 10, 12, 15, 17, 19, 20, 35, 36, 38, 39, 44, 45, 46, 58, 66, 71, 72, 73, 85, 91, 105, 148], "instead": [0, 1, 14, 20, 38, 39, 45, 46, 58, 66, 71, 72, 73], "setup_tb_log": 0, "setup_visdom_log": 0, "setup_mlflow_log": 0, "etc": [0, 5, 12, 19, 36, 39, 73, 149], "baselogg": [0, 34], "setup_clearml_log": 0, "100": [0, 5, 19, 22, 41, 42, 57, 80, 87, 104, 139, 146], "clearml": [0, 39, 146], "log": [0, 4, 34, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 77, 83, 87, 88, 89, 93, 95, 103, 149], "list": [0, 2, 4, 19, 20, 34, 36, 39, 42, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 77, 78, 104, 110, 111, 112, 122, 145, 147], "averag": [0, 4, 19, 41, 70, 76, 77, 80, 86, 88, 90, 96, 97, 99, 100, 104, 105, 110, 111, 112, 113, 116, 120, 124, 125, 126, 148], "learn": [0, 36, 39, 42, 44, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 63, 66, 72, 73, 78, 125, 126, 127, 133, 146], "rate": [0, 39, 42, 44, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 63, 66, 72, 73, 102, 146], "singl": [0, 4, 12, 20, 24, 25, 35, 36, 38, 40, 67, 70, 71, 75, 88, 116, 120, 148], "torch": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 27, 29, 32, 36, 38, 39, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "kei": [0, 12, 19, 25, 36, 38, 39, 40, 44, 45, 46, 58, 66, 72, 73, 78, 87, 89, 96, 104, 122, 145], "interv": [0, 42], "attach": [0, 3, 7, 14, 19, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "iter": [0, 5, 13, 14, 15, 16, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 55, 56, 58, 66, 68, 71, 72, 73, 87, 89, 148], "To": [0, 36, 38, 39, 45, 46, 58, 66, 72, 73, 76, 79, 81, 83, 84, 85, 87, 90, 93, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 114, 115, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "set": [0, 4, 5, 9, 19, 22, 25, 36, 38, 39, 41, 46, 48, 54, 55, 57, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 77, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "clearmllogg": [0, 39], "setup_common_distrib_training_handl": 0, "train_sampl": 0, "to_sav": [0, 5, 36, 38, 39, 41, 44, 46], "save_every_it": 0, "1000": [0, 36, 85, 91], "lr_schedul": [0, 5, 36, 51, 53, 56, 57, 59, 61, 64, 146], "with_gpu_stat": 0, "output_nam": 0, "with_pbar": 0, "with_pbar_on_it": 0, "stop_on_nan": 0, "clear_cuda_cach": 0, "also": [0, 4, 5, 15, 19, 21, 22, 36, 38, 39, 44, 45, 46, 58, 66, 69, 71, 72, 73, 85, 113, 123, 135, 148], "support": [0, 4, 9, 10, 11, 12, 13, 14, 19, 28, 36, 39, 46, 99, 125, 126, 148], "distribut": [0, 5, 8, 9, 10, 11, 12, 32, 35, 36, 38, 39, 84, 122, 131, 147, 149], "configur": [0, 4, 8, 9, 10, 11, 12, 19, 32, 35, 36, 38, 39, 42, 47, 54, 63, 84, 122, 131, 148, 149], "terminateonnan": [0, 68], "schedul": [0, 5, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 147], "modelcheckpoint": [0, 36, 73], "runningaverag": [0, 71], "update_funct": 0, "progress": [0, 42, 71, 87, 89], "bar": [0, 71, 87, 89, 131, 140, 141, 142], "distributedsampl": [0, 9, 148], "sampler": [0, 4, 8, 9, 15, 16, 18, 148], "call": [0, 4, 5, 10, 14, 19, 22, 35, 36, 39, 45, 46, 51, 66, 70, 73, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "set_epoch": 0, "start": [0, 13, 14, 15, 16, 19, 22, 23, 26, 27, 28, 29, 30, 31, 33, 36, 38, 42, 44, 48, 49, 50, 52, 56, 57, 59, 61, 64, 68, 70, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 144, 148, 149], "map": [0, 4, 13, 19, 35, 36, 38, 40, 44, 47, 48, 53, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 149], "instanc": [0, 14, 29, 36, 39, 41, 46, 53, 56, 68, 69, 79, 81, 82, 83, 90, 92, 93, 94, 95, 97, 98, 100, 101, 103, 105, 109, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "each": [0, 3, 4, 7, 12, 13, 14, 15, 19, 25, 26, 27, 28, 29, 30, 31, 39, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "mutual": [0, 19, 84, 103, 131], "exclus": [0, 19], "paramschedul": [0, 1, 48, 53, 57], "lrschedul": [0, 57], "nativ": [0, 4, 10, 11, 12], "gpuinfo": 0, "pynvml": [0, 89], "12": [0, 4, 5, 13, 19, 26, 27, 35, 42, 45, 61, 66, 71, 87, 89, 90, 146, 149], "packag": [0, 4, 12, 44, 45, 47, 58, 66, 72, 85, 89], "instal": [0, 12, 39, 44, 45, 46, 47, 58, 66, 71, 72, 73, 85, 91], "associ": [0, 19, 32, 35, 39, 46, 148], "wise": [0, 148], "ad": [0, 4, 10, 11, 12, 13, 14, 15, 19, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 46, 49, 50, 51, 52, 57, 66, 74, 75, 76, 77, 79, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 122, 123, 125, 126, 148, 149], "cuda": [0, 4, 9, 10, 13, 19, 27, 28, 29, 30, 41, 45, 58, 85, 114, 148, 149], "empty_cach": 0, "end": [0, 5, 19, 22, 44, 49, 50, 52, 55, 57, 58, 73, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "detail": [0, 4, 15, 17, 19, 36, 38, 45, 71, 73, 77, 85, 91, 97, 110, 111, 112, 117, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 146, 148], "setup_common_training_handl": 0, "mlflow": [0, 45], "mlflowlogg": [0, 34, 45], "setup_neptune_log": 0, "neptun": [0, 46, 146], "neptunelogg": [0, 46], "setup_plx_log": 0, "polyaxon": [0, 58], "polyaxonlogg": [0, 34, 58], "tensorboard": [0, 66, 89], "directori": [0, 32, 36, 38, 39, 66, 149], "tensorboardlogg": [0, 34, 66], "setup_trains_log": 0, "wa": [0, 1, 12, 19, 32, 70, 113], "renam": 0, "visdom": [0, 72, 146], "visdomlogg": [0, 34, 72], "setup_wandb_log": 0, "wandb": [0, 73, 146], "wandblogg": [0, 73], "6": [1, 4, 5, 14, 19, 36, 38, 41, 44, 55, 61, 62, 68, 69, 74, 85, 86, 90, 91, 100, 110, 111, 125, 126, 132, 141, 143, 145, 146], "fastailrfind": 1, "basictimeprofil": 1, "handlerstimeprofil": 1, "5": [1, 2, 4, 5, 12, 13, 14, 19, 22, 26, 27, 28, 29, 30, 31, 36, 37, 41, 42, 44, 48, 49, 50, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149], "all": [2, 4, 9, 10, 11, 14, 19, 21, 31, 35, 36, 38, 39, 42, 44, 45, 46, 56, 58, 66, 71, 72, 73, 84, 86, 89, 96, 99, 104, 119, 122, 124, 131, 138, 139, 140, 147, 148], "complet": [2, 4, 5, 15, 19, 22, 23, 25, 36, 40, 42, 46, 56, 68, 69, 70, 71, 73, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147, 149], "from": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149], "collect": [3, 4, 7, 19, 23, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 67, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "import": [3, 4, 5, 7, 9, 10, 11, 12, 14, 16, 19, 21, 28, 29, 30, 31, 33, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149], "ordereddict": [3, 7, 15, 19, 36, 40, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "nn": [3, 7, 10, 36, 38, 41, 42, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "ignit": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "engin": [3, 4, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149], "cluster": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "regress": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "util": [3, 5, 7, 14, 16, 42, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147], "evalu": [3, 7, 13, 19, 26, 27, 36, 39, 40, 41, 43, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149], "doctest": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "def": [3, 4, 5, 7, 12, 14, 15, 19, 21, 22, 23, 24, 36, 39, 40, 41, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "eval_step": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "default_evalu": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "param_tensor": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "zero": [3, 7, 19, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 70, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "requires_grad": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "default_optim": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "sgd": [3, 4, 7, 36, 42, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "lr": [3, 4, 5, 7, 19, 34, 36, 39, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147], "trainer": [3, 7, 14, 19, 21, 28, 29, 30, 31, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149], "could": [3, 7, 38, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "test": [3, 7, 44, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "must": [3, 4, 7, 14, 36, 38, 44, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "hi": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "own": [3, 7, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "testsetup": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "get_default_train": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "train_step": [3, 7, 19, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "default_model": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "sequenti": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "linear": [3, 7, 36, 38, 41, 42, 44, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "2": [3, 4, 5, 7, 10, 11, 12, 19, 22, 29, 32, 36, 38, 39, 41, 42, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148], "fc": [3, 7, 39, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "manual_se": [3, 5, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149], "666": [3, 7, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "multipl": [4, 5, 12, 36, 38, 41, 53, 59, 61, 64, 67, 110, 148], "backend": [4, 9, 10, 11, 12, 15, 148], "nccl": [4, 12], "gloo": [4, 12], "mpi": [4, 12], "xla": [4, 9, 11, 12, 31, 35, 36], "tpu": [4, 12, 14, 31, 36, 148], "via": [4, 12, 24], "horovod": [4, 10, 11, 12], "framework": [4, 10, 12], "we": [4, 5, 9, 10, 11, 39, 44, 45, 46, 58, 60, 66, 72, 73, 85, 91, 96, 122, 123, 148], "context": [4, 10, 12, 24, 39, 44, 46, 66, 72], "manag": [4, 12, 24, 44, 46, 66, 72, 123], "simplifi": [4, 12], "code": [4, 5, 8, 12, 45, 46, 66, 148], "setup": [4, 5, 9, 12, 16, 19, 36, 38, 39, 43, 45, 46, 58, 66, 72, 73, 96, 122, 147, 148, 149], "abov": [4, 36, 91, 102, 113, 148], "method": [4, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149], "auto_model": 4, "auto_optim": 4, "auto_dataload": 4, "help": [4, 16, 39, 43, 45, 46, 58, 66, 72, 73, 147, 148], "adapt": [4, 8, 9, 10, 11, 148], "transpar": [4, 147], "wai": [4, 5, 10, 16, 44, 104, 148], "loader": 4, "exist": [4, 32, 38, 41, 44, 59, 60, 61, 62, 63, 64, 84, 117, 118, 119, 132, 143, 149], "main": [4, 5, 12, 72, 78], "py": [4, 12], "idist": [4, 9, 10, 11, 12, 36], "local_rank": [4, 12, 148], "config": [4, 12, 73], "print": [4, 5, 12, 19, 24, 36, 38, 41, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 68, 69, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "get_rank": [4, 12, 36], "train_load": [4, 5, 9, 19, 65], "dataset": [4, 9, 19, 39, 40, 45, 46, 58, 66, 72, 73, 104], "batch_siz": [4, 5, 9, 45, 58, 74, 75, 78, 84, 85, 86, 88, 91, 96, 102, 105, 116, 120, 125, 126, 148], "32": [4, 5, 9, 19, 90], "num_work": [4, 9, 15, 72, 148], "shuffl": [4, 5, 9], "size": [4, 5, 8, 9, 10, 12, 42, 50, 64, 75, 85, 88, 90, 96, 97, 114, 116, 148], "automat": [4, 9, 13, 14, 19, 36, 39, 71, 73, 87, 89, 99, 122, 124], "resnet50": 4, "ddp": [4, 127, 128, 129, 130, 133, 134, 135, 137, 142, 144], "dp": 4, "just": [4, 5, 73], "itself": [4, 9], "accord": [4, 5, 12, 36, 96, 102, 148], "01": [4, 19, 49, 52, 53, 104, 114, 146, 149], "except": [4, 22, 32, 38, 99, 105, 125, 126, 147, 148], "overrid": [4, 11, 15, 19, 35, 59, 60, 61, 62, 63, 64, 148], "safe": 4, "behind": [4, 45, 66], "xm": [4, 11, 32, 35, 38], "optimizer_step": [4, 11], "optimizi": 4, "perform": [4, 10, 41, 71, 107, 108], "dist_config": [4, 12], "nproc_per_nod": [4, 12], "specifi": [4, 12, 19, 20, 32, 36, 38, 44, 45, 71, 72, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "launch": [4, 12], "python": [4, 12, 72, 148], "start_method": 4, "fork": 4, "jupyt": [4, 71], "notebook": [4, 71, 146], "parallel": [4, 8, 91, 148, 149], "b": [4, 12, 19, 22, 36, 83, 89, 90, 92, 93, 94, 95, 97, 103, 105, 117, 118, 119, 132, 148], "execut": [4, 5, 12, 17, 19, 20, 22, 34, 44, 57, 70, 84, 148], "exampl": [4, 5, 9, 10, 11, 12, 14, 16, 19, 21, 24, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "cifar10": [4, 5], "found": [4, 5, 10, 19, 44, 46, 77, 85, 91, 96, 97, 110, 111, 112, 117, 118, 119, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144], "here": [4, 5, 19, 46, 85, 99, 117, 118, 119, 132, 148], "group": [4, 12, 49, 50, 52, 53, 54, 55, 56, 123], "initi": [4, 5, 10, 12, 14, 19, 34, 39, 41, 56, 57, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 144, 148, 149], "wrap": [4, 9, 10, 11, 36, 51, 53, 56, 146], "about": [4, 15, 22], "final": [4, 32, 38, 84, 131, 148], "spawn": [4, 12], "has_native_dist_support": 4, "avail": [4, 9, 10, 11, 12, 39, 45, 46, 58, 65, 66, 71, 72, 73, 84, 99, 123, 125, 126, 131, 138, 139, 140], "has_xla_support": 4, "torch_xla": [4, 31, 149], "all_gath": 4, "gather": [4, 84, 122, 131], "oper": [4, 22, 23, 71, 84, 107, 108, 131, 148], "across": [4, 14, 28, 29, 30, 31, 84, 86, 99, 104, 113, 125, 126, 131, 148], "particip": [4, 8, 12, 148], "shape": [4, 19, 39, 66, 74, 75, 78, 81, 83, 84, 85, 86, 88, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 114, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149], "integ": [4, 36, 38, 39, 45, 46, 48, 55, 58, 62, 66, 72, 73, 110, 125, 148], "world_siz": [4, 9], "string": [4, 36, 39, 45, 46, 58, 66, 71, 72, 73, 79, 87, 89, 113, 122, 124, 148], "current": [4, 8, 10, 12, 15, 18, 19, 20, 22, 36, 38, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 70, 71, 84, 87, 89, 113, 122, 124, 131, 138, 139, 140, 148], "doe": [4, 5, 19, 38, 39, 41, 45, 46, 58, 61, 64, 66, 72, 73], "belong": [4, 39, 46, 66, 83, 125, 126], "veri": [4, 99], "11": [4, 5, 14, 19, 22, 28, 29, 30, 31, 53, 61, 69, 81, 90, 98, 100, 101, 108, 109, 114], "all_gather_tensors_with_shap": 4, "possibli": [4, 145], "differ": [4, 5, 9, 19, 35, 57, 79, 85, 99, 106, 113, 122, 124, 148], "so": [4, 19, 32, 38, 64, 113, 120, 123, 125, 126, 148], "you": [4, 13, 14, 19, 26, 27, 46, 58, 67, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "know": 4, "them": [4, 46, 67, 99, 104, 123, 125, 126, 145, 148], "beforehand": [4, 14], "your": [4, 5, 14, 39, 46, 74, 75, 77, 81, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "don": [4, 99], "t": [4, 41, 70, 77, 78, 99, 113, 122], "all_gather_object": 4, "otherwis": [4, 14, 19, 35, 36, 38, 40, 44, 56, 66, 71, 78, 86, 105, 113, 148], "quit": 4, "faster": [4, 85], "rank": [4, 8, 9, 10, 11, 32, 36, 38, 39, 84, 122, 131, 132, 143, 149], "w": [4, 71, 77, 105], "get_world_s": 4, "randn": [4, 36], "r": [4, 77, 86, 110, 111, 112, 124, 141, 142, 143], "rang": [4, 5, 15, 19, 41, 42, 44, 70, 104, 105, 114, 119, 122], "contain": [4, 5, 15, 19, 20, 25, 35, 36, 44, 47, 48, 53, 67, 68, 69, 74, 75, 76, 79, 81, 83, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 132, 143, 145], "all_reduc": 4, "op": [4, 11, 116], "sum": [4, 19, 75, 77, 99, 102, 148], "reduc": [4, 39, 46, 55, 56, 62, 66, 72, 85, 110, 111, 112, 148], "reduct": [4, 34, 39, 46, 66, 72, 148], "possibl": [4, 5, 36, 38, 46, 66, 72, 73, 105, 125, 149], "product": [4, 148], "min": [4, 56, 68, 69, 148], "max": [4, 19, 56, 68, 69, 81, 104, 119, 141, 144, 146, 148], "AND": 4, "OR": 4, "adasum": 4, "available_backend": [4, 9, 10, 11], "barrier": 4, "synchron": [4, 15, 17, 73, 147], "broadcast": [4, 10, 11, 84, 131], "src": [4, 113], "safe_mod": 4, "make": [4, 5, 9, 10, 19, 35, 36, 113], "sure": [4, 9, 10, 35], "crash": [4, 5], "non": [4, 9, 10, 11, 74, 75, 77, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "anyth": [4, 14], "discard": 4, "mind": [4, 5, 36, 44], "mode": [4, 39, 41, 56, 77, 146], "work": [4, 36, 54, 63, 70, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 142, 144], "dens": 4, "It": [4, 5, 19, 38, 40, 41, 44, 46, 66, 72, 73, 85, 86, 87, 89, 91, 99, 113, 122, 148], "lead": [4, 65, 84, 85, 131, 138, 139, 140], "some": [4, 5, 15, 19, 50, 125, 126, 148], "slower": 4, "than": [4, 10, 12, 19, 40, 44, 46, 50, 56, 65, 71, 74, 80, 84, 85, 90, 122, 131, 138, 139, 140, 149], "without": [4, 5, 9, 12, 36, 120, 148], "y": [4, 13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 42, 74, 76, 77, 79, 81, 83, 84, 85, 86, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148], "t1": [4, 146], "rand": [4, 5, 42, 91, 105, 114, 122, 148], "s1": 4, "abc": 4, "3456": 4, "els": [4, 19, 36, 124], "empti": [4, 65, 71], "assert": [4, 15, 19, 87, 89, 113, 122, 124], "isinst": [4, 113], "those": [4, 5], "do": [4, 19, 20, 22, 23, 65, 70, 120], "placehold": 4, "new": [4, 11, 18, 19, 26, 27, 28, 29, 30, 31, 33, 36, 37, 41, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 77, 80, 85, 90, 91, 99, 102, 104, 105, 110, 111, 112, 114, 117, 118, 119, 124, 125, 126, 132, 143, 148, 149], "index": [4, 12, 55, 60, 62, 68, 69, 82, 92, 94, 102, 114, 115, 120, 121, 148], "dist": [4, 12], "destroy_process_group": 4, "get_local_rank": 4, "local": [4, 9, 12, 39, 68, 69, 73], "within": [4, 8], "get_nnod": 4, "node": [4, 12, 148], "get_node_rank": 4, "get_nproc_per_nod": 4, "task": [4, 5, 39, 99, 106, 108, 148], "per": [4, 12, 19, 25, 87, 99, 104, 125, 126], "world": [4, 9, 10, 12], "hostnam": 4, "accept": [4, 10, 12, 22, 32, 36, 38, 39, 45, 46, 58, 65, 66, 71, 72, 73, 104, 105, 114, 122, 132], "timeout": 4, "timedelta": 4, "minut": 4, "30": [4, 5, 19, 22, 55, 76, 90, 146, 148], "init_method": [4, 12], "env": [4, 12, 39], "info": [4, 12, 42, 149], "torch_init": 4, "comm": 4, "hvd_init": 4, "multi": [4, 12, 61, 67, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "torchrun": [4, 12], "train_fn": 4, "c": [4, 19, 22, 45, 66, 83, 93, 95, 99, 103, 125, 126, 132], "is_avail": 4, "is_initi": 4, "f": [4, 19, 24, 36, 41, 86, 97, 110, 111, 112, 122, 124, 125, 126, 148], "window": [4, 46, 72], "file": [4, 12, 32, 35, 36, 38, 39, 68, 69, 71, 73, 149], "tmp": [4, 5, 12, 15, 19, 36, 38], "share": [4, 46, 73], "model_nam": 4, "given": [4, 5, 10, 12, 19, 25, 36, 39, 40, 42, 44, 46, 48, 66, 68, 69, 82, 89, 91, 104, 113, 120], "serial": [4, 5, 32, 38, 148], "new_group": 4, "subset": 4, "pg_option": 4, "one_rank_first": 4, "ensur": [4, 5, 39, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "first": [4, 5, 12, 19, 25, 36, 38, 41, 48, 49, 55, 57, 75, 76, 79, 84, 88, 96, 106, 107, 108, 116, 117, 118, 119, 125, 126, 132, 143, 149], "environ": [4, 5, 33, 46, 72], "block": [4, 74, 75, 77, 81, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "insid": [4, 71], "flag": [4, 19, 22, 42, 70, 72, 74, 125, 126], "global": [4, 36, 38, 39, 43, 45, 46, 58, 66, 72, 73], "download_dataset": 4, "d": [4, 12, 22, 45, 66, 117, 118, 119], "13": [4, 5, 13, 14, 19, 26, 27, 28, 29, 30, 31, 45, 49, 50, 52, 66, 68, 90, 117, 118, 119], "one_rank_onli": 4, "with_barri": 4, "decor": [4, 5, 17, 19, 148], "filter": [4, 19, 20, 22, 120, 148], "wrt": 4, "synchronis": 4, "mean": [4, 14, 19, 28, 29, 30, 31, 36, 41, 68, 69, 73, 78, 81, 83, 84, 85, 86, 93, 95, 97, 98, 99, 100, 101, 104, 105, 109, 116, 119, 121, 124, 125, 126, 130, 131, 135, 136, 137, 142, 148], "some_handl": 4, "set_local_rank": 4, "hint": 4, "up": [4, 5, 41, 46, 49, 50, 52, 57, 75, 148], "init_process_group": [4, 12], "dist_info": 4, "show_config": 4, "displai": [4, 71], "fn": [4, 74, 126], "kwargs_dict": 4, "entrypoint": 4, "top": [4, 90, 104, 115], "level": [4, 42, 99, 104, 147, 149], "pickl": [4, 148], "impos": 4, "multiprocess": 4, "through": [4, 14, 48, 49, 50, 52, 147, 148], "nnode": [4, 12], "node_rank": [4, 12], "master_addr": [4, 12], "127": 4, "master_port": [4, 12], "2222": [4, 128], "mp": [4, 13, 14, 28], "start_process": 4, "xmp": 4, "hvd_run": 4, "toler": 4, "ignor": [4, 14, 39, 44, 82, 92, 94, 99, 121, 148], "rais": [4, 6, 19, 32, 36, 38, 39, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "23": [4, 5, 19, 45, 66, 67, 87, 89, 90, 149], "8": [4, 5, 12, 19, 22, 33, 48, 51, 53, 55, 56, 57, 61, 62, 81, 90, 127, 128, 129, 130, 132, 141, 143, 148, 149], "master": [4, 12], "7": [4, 5, 11, 14, 19, 28, 29, 30, 31, 36, 39, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 77, 86, 90, 96, 110, 115, 125, 126, 146], "googl": 4, "colab": 4, "core": [4, 19, 149], "xla_model": [4, 149], "sync": [4, 73], "temporari": [4, 32, 38, 39], "forc": 4, "manual": [4, 39, 58, 113], "destroi": 4, "done": [4, 5, 15, 19, 46, 66, 72, 73, 74, 86, 99, 105, 113, 122, 124, 125, 126, 148], "get_": 4, "impact": [4, 5, 71], "librari": [5, 85, 147, 148], "approxim": 5, "reproduc": [5, 16], "origin": 5, "behaviour": [5, 19, 38], "easili": 5, "deseri": 5, "its": [5, 11, 12, 15, 19, 34, 36, 38, 39, 41, 42, 45, 46, 56, 57, 58, 66, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147], "data_load": [5, 19, 36], "create_dir": [5, 32, 36, 38], "add_event_handl": [5, 19, 24, 33, 36, 38, 39, 40, 41, 46, 48, 49, 51, 52, 53, 55, 56, 57, 67, 73], "epoch_complet": [5, 19, 22, 24, 25, 36, 38, 39, 41, 45, 46, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 72, 73, 148], "max_epoch": [5, 14, 15, 19, 25, 36, 38, 39, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 71, 72, 73, 149], "l": [5, 80, 90, 110, 111], "checkpoint_50000": 5, "pt": [5, 15, 19, 36, 38], "restor": [5, 19, 44], "to_load": [5, 36, 41], "load": [5, 14, 19, 36, 41, 68, 69], "checkpoint_fil": 5, "load_object": [5, 36, 41], "n": [5, 19, 39, 46, 49, 66, 75, 77, 81, 83, 88, 89, 91, 98, 101, 103, 104, 109, 110, 112, 113, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149], "continu": [5, 19], "mnist": [5, 39, 46, 73, 146], "gener": [5, 39, 41, 42, 45, 46, 58, 59, 61, 64, 66, 72, 73, 91, 147], "rather": [5, 46, 85, 149], "difficult": 5, "achiev": [5, 146], "reli": 5, "aspect": 5, "softwar": 5, "hardwar": 5, "note": [5, 10, 19, 36, 38, 40, 46, 85, 91, 120, 126], "random": [5, 17, 149], "take": [5, 20, 36, 38, 39, 40, 45, 46, 49, 58, 59, 60, 61, 62, 63, 64, 66, 70, 72, 73, 96, 97, 99], "problem": 5, "platform": 5, "releas": 5, "seed": [5, 25, 45, 58, 149], "cudnn": [5, 15], "applic": [5, 10, 13, 14, 26, 27, 28, 29, 30, 31, 35, 36, 49, 113, 122], "enough": 5, "rerun": 5, "experi": [5, 45, 58, 66], "deterministicengin": [5, 14], "reproduciblebatchsampl": [5, 15], "control": [5, 33, 70, 110, 111, 112], "precis": [5, 13, 14, 15, 54, 63, 76, 77, 78, 80, 86, 99, 104, 106, 110, 111, 112, 120, 123, 124, 148], "roughli": 5, "look": [5, 71, 87, 89, 149], "num_epoch": [5, 15], "set_se": [5, 15], "do_single_epoch_iter": [5, 15], "dataload": [5, 9, 14, 15, 16, 18, 19, 22, 25, 44, 68, 69, 148], "made": 5, "trivial": 5, "usag": [5, 17, 36, 42, 87, 89, 113, 122, 124, 146, 147], "random_train_data_load": 5, "arang": 5, "print_train_data": 5, "tolist": [5, 19, 106, 108], "56": [5, 117, 118, 119], "40": [5, 36, 42, 55, 90, 117, 118, 119], "epoch_length": [5, 15, 19, 25, 44], "2nd": 5, "rng_state": 5, "31": [5, 19, 90], "18": [5, 19, 42, 46, 90], "16": [5, 12, 19, 69, 76, 90, 105, 114], "10": [5, 12, 19, 22, 29, 32, 36, 38, 40, 42, 44, 46, 47, 54, 55, 56, 60, 62, 63, 64, 70, 71, 73, 80, 85, 87, 89, 90, 91, 105, 117, 118, 119, 122, 125, 126, 146, 148, 149], "33": [5, 19, 45, 66, 90, 117, 118, 119], "36": [5, 90], "37": [5, 42, 90], "19": [5, 19, 22, 42, 69, 90], "9": [5, 19, 22, 38, 39, 46, 49, 51, 52, 55, 56, 59, 60, 61, 64, 66, 74, 86, 90, 110, 125, 126, 127, 128, 129, 130, 132, 141, 143, 148], "20": [5, 12, 19, 42, 55, 63, 64, 90, 117, 118, 119, 120, 124, 146, 149], "14": [5, 19, 22, 64, 90], "26": [5, 19, 90, 117, 118, 119], "29": [5, 19, 22, 90, 117, 118, 119], "35": [5, 87, 90, 117, 118, 119], "38": [5, 42, 90], "34": [5, 19, 71, 90, 117, 118, 119], "22": [5, 19, 42, 69, 90], "17": [5, 19, 42, 68, 71, 87, 89, 90], "25": [5, 19, 22, 48, 64, 90, 117, 118, 119, 134, 135, 137, 139, 144, 146], "21": [5, 19, 55, 76, 90, 149], "24": [5, 19, 22, 87, 89, 90, 117, 118, 119], "15": [5, 19, 62, 64, 90, 146], "39": [5, 42, 90], "28": [5, 19, 90, 117, 118, 119], "27": [5, 19, 90], "sampl": [5, 9, 13, 14, 26, 27, 28, 29, 30, 31, 75, 88, 90, 97, 99, 102, 104, 116, 119, 120, 125, 126], "exactli": [5, 15], "simul": [5, 47, 48, 51, 53, 54, 56, 57, 63], "previou": [5, 19, 39, 44, 45, 46, 58, 66, 72, 73], "skip": [5, 39, 41, 90], "correspond": [5, 36, 39, 45, 46, 48, 53, 58, 66, 72, 73, 89, 102, 113], "after": [5, 13, 14, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 44, 45, 46, 56, 57, 58, 65, 66, 68, 69, 71, 72, 73, 113, 148], "datapoint": 5, "augment": 5, "middl": [5, 50, 52], "thu": 5, "remain": [5, 55, 71], "until": [5, 19, 55], "issu": [5, 8, 19, 76, 79, 84, 106, 107, 108, 117, 118, 119, 132, 143], "period": [5, 36, 38, 64, 113, 122, 124], "dure": [5, 19, 22, 32, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 51, 53, 54, 56, 58, 59, 60, 61, 63, 64, 66, 72, 73, 76, 79, 106, 107, 108, 113, 120, 122, 124, 148], "random_train_data_gener": 5, "yield": 5, "randint": [5, 42, 148], "iteration_complet": [5, 19, 22, 33, 36, 39, 41, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 87, 89, 113, 122, 148], "user_handl": 5, "77": [5, 36, 42, 117, 118, 119, 146], "randomli": 5, "intend": 5, "alter": 5, "produc": [5, 9, 15, 39, 45, 46, 58, 66, 72, 73], "keep_random_st": 5, "numpi": [5, 17, 63, 146, 149], "therefor": [5, 148], "deal": 5, "describ": 5, "notcomputableerror": [6, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147, 148], "cannot": [6, 44, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "auto": [8, 9, 10, 11, 147], "num_replica": 8, "proxi": 8, "http": [8, 14, 19, 44, 46, 59, 61, 64, 72, 77, 103, 122], "github": [8, 14, 19, 44, 72], "com": [8, 19, 44, 72], "23430": 8, "issuecom": 8, "562350407": 8, "assum": [8, 78, 148], "constant": [8, 41], "helper": [9, 10, 11, 17, 18, 34, 36, 39, 42, 43, 45, 46, 53, 57, 58, 66, 72, 73, 75, 87, 88, 89, 116, 122, 147, 149], "follow": [9, 10, 19, 21, 25, 36, 39, 41, 45, 46, 58, 66, 72, 73, 74, 75, 80, 85, 86, 88, 99, 102, 104, 113, 114, 116, 120, 122, 125, 126, 148], "scale": [9, 14, 29, 44], "equal": [9, 36, 38, 40, 55, 70, 104, 120, 149], "worker": [9, 72, 149], "nproc": 9, "anoth": [9, 36, 38, 39, 41, 43, 45, 46, 54, 58, 63, 66, 72, 73, 113, 122, 124], "distributedproxysampl": 9, "pin_memori": [9, 148], "custom": [9, 13, 14, 19, 21, 22, 26, 27, 28, 29, 30, 31, 69, 71, 122, 147], "compat": [9, 125, 126, 133], "iterabledataset": 9, "mpdeviceload": 9, "_mpdeviceload": 9, "distribt": [9, 10], "train_dataset": 9, "drop_last": 9, "sync_bn": 10, "send": [10, 14, 19, 72], "distributeddataparallel": [10, 14, 36, 41, 148], "dataparallel": [10, 36, 41], "variabl": [10, 46, 72, 75, 88, 116, 148], "convert_sync_batchnorm": 10, "nvidia": [10, 14], "apex": [10, 14, 30], "batchnorm": 10, "convers": 10, "amp": [10, 13, 14, 27, 29], "opt_level": 10, "goal": 11, "distributedoptim": 11, "launcher": [12, 147, 149], "spawn_kwarg": 12, "child": 12, "standalon": [12, 39], "script": 12, "horovodrun": 12, "total": [12, 19, 25, 42, 68, 69, 70], "machin": 12, "mandatori": 12, "tcp": 12, "ip": 12, "address": 12, "port": [12, 72], "np": [12, 54, 63, 146], "3344": 12, "h": [12, 83, 103, 105], "hostname1": 12, "hostname2": 12, "both": [12, 102, 125, 126, 132], "some_fil": 12, "23456": 12, "15000": 12, "func": [12, 17, 19, 148, 149], "posit": [12, 58, 66, 73, 74, 77, 86, 88, 99, 102, 125, 126, 148], "model_transform": [13, 14, 26, 27, 28, 29, 30, 31], "lambda": [13, 14, 19, 26, 27, 28, 29, 30, 31, 36, 38, 39, 41, 42, 44, 45, 46, 58, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "output_transform": [13, 14, 19, 26, 27, 28, 29, 30, 31, 34, 39, 42, 44, 45, 46, 58, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "amp_mod": [13, 14], "model_fn": [13, 14, 26, 27, 28, 29, 30, 31], "factori": [13, 14, 26, 27, 28, 29, 30, 31], "convert": [13, 14, 26, 27, 28, 29, 30, 31, 85, 91, 145, 149], "predict": [13, 26, 27, 65, 71, 74, 76, 79, 81, 83, 84, 85, 86, 91, 93, 95, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "y_pred": [13, 14, 19, 21, 26, 27, 28, 29, 30, 31, 42, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148], "assign": [13, 14, 26, 27, 28, 29, 30, 31, 85, 91, 120], "which": [13, 19, 20, 22, 26, 27, 32, 34, 36, 38, 39, 41, 43, 44, 45, 46, 49, 50, 52, 58, 63, 66, 70, 71, 72, 73, 74, 75, 77, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 148], "fit": [13, 26, 27], "expect": [13, 26, 27, 38, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "cast": [13, 14], "float16": [13, 14, 114], "infer": [13, 26, 27, 102], "batch_pr": [13, 26, 27], "mix": [13, 14, 22], "transform": [13, 14, 26, 27, 28, 29, 30, 31, 36, 38, 39, 44, 45, 46, 58, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "determinist": [14, 15, 16, 17, 18, 147], "scaler": [14, 29], "gradient_accumulation_step": [14, 28, 29, 30, 31], "form": [14, 28, 29, 30, 31, 46, 49, 59, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "item": [14, 19, 28, 29, 30, 31, 36, 42, 84, 104, 113, 124, 148], "gradscal": [14, 29], "accumul": [14, 28, 29, 30, 31, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "convert_tensor": [14, 147, 149], "tqdm_logger": 14, "progressbar": [14, 71, 87, 89], "prepare_batch_fn": 14, "directli": [14, 36, 71, 148], "output_transform_fn": 14, "actual": [14, 20, 38, 74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "behavior": 14, "want": [14, 67, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "pbar": [14, 71], "attribut": [14, 19, 22, 25, 36, 38, 39, 41, 42, 45, 46, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 122, 148], "finish": 14, "wrapper": [14, 20, 51, 56, 73, 85], "io": 14, "html": [14, 59, 61, 64, 77, 103], "process_funct": [15, 19, 25, 65, 67, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "deriv": [15, 19, 35], "dataflow": [15, 17, 68, 69, 147], "seed_offset": 15, "resum": [15, 19, 41, 70, 147], "setup_saved_rng_st": 15, "replac": [15, 18, 36, 38, 40, 71, 122], "setup_sampl": 15, "benchmark": 15, "restart": [15, 19], "handl": [15, 19, 24, 36, 39, 41, 45, 46, 58, 66, 72, 73, 74, 75, 76, 77, 79, 81, 83, 87, 88, 90, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143, 148, 149], "state_dict_user_kei": [15, 19], "append": [15, 19, 65], "alpha": [15, 19, 39, 45, 46, 58, 66, 71, 72, 73, 110, 111, 112, 113], "beta": [15, 19, 39, 45, 46, 58, 66, 71, 72, 73, 78, 86, 124, 148], "init_user_valu": [15, 19], "save_engin": [15, 19], "batch_sampl": 16, "start_iter": 16, "batchsampl": [16, 18], "update_dataload": 16, "rewind": 16, "setup_batch_indic": 16, "intact": 17, "new_batch_sampl": 18, "emit": 19, "goe": [19, 48, 49, 50, 52], "reset": [19, 36, 40, 44, 65, 70, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 144, 147, 149], "last_event_nam": 19, "trigger": [19, 20, 22, 37, 42, 63, 68, 69, 71, 148], "v0": [19, 22, 38, 58], "interrupt": [19, 22], "featur": [19, 85, 90, 91, 97, 103, 117, 118, 119, 148], "behav": 19, "certain": [19, 148], "corner": 19, "compar": [19, 85], "interrupt_resume_en": 19, "basic": 19, "criterion": [19, 21, 42, 90, 96], "target": [19, 24, 65, 81, 84, 96, 98, 99, 100, 101, 104, 105, 109, 114, 115, 120, 122, 125, 131, 132, 138, 139, 140, 145], "zero_grad": 19, "backward": [19, 21, 125, 126], "update_model": 19, "log_train": 19, "batch_loss": 19, "param_group": [19, 39, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 66, 72, 73], "10874069479016124": 19, "1700": 19, "4217900575859437": 19, "accuraci": [19, 36, 39, 45, 46, 56, 58, 66, 71, 72, 73, 96, 99, 113, 115, 122, 123, 125, 126, 148], "predict_on_batch": 19, "eval": [19, 41, 85], "no_grad": [19, 85], "val_acc": [19, 35], "val_dataload": 19, "imag": [19, 83, 85, 91, 93, 95, 103, 104, 105, 114, 145], "std": [19, 68, 69], "compute_mean_std": 19, "reshap": 19, "dtype": [19, 75, 77, 82, 86, 88, 92, 94, 104, 105, 114, 125, 126], "float64": [19, 75, 77, 82, 86, 88, 92, 94, 114, 125, 126], "mean2": 19, "compute_engin": 19, "img_mean": 19, "img_mean2": 19, "sqrt": [19, 85, 109, 141], "len": [19, 96], "500": [19, 39, 45, 46, 58, 66, 72, 73], "event_nam": [19, 24, 25, 34, 36, 38, 39, 45, 46, 58, 66, 71, 72, 73, 87, 89], "fire": [19, 22, 37], "valid": [19, 34, 36, 39, 40, 41, 42, 45, 46, 58, 66, 71, 72, 73, 77, 87, 89, 110, 111, 112, 113, 114, 122, 124, 148], "register_ev": [19, 21, 34], "invok": 19, "No": 19, "restrict": [19, 84], "signatur": [19, 116], "bound": [19, 44, 49, 50, 52, 104, 145], "removableeventhandl": [19, 34, 71], "exception_rais": [19, 22], "print_epoch": [19, 24], "events_list": 19, "execute_someth": 19, "thing": 19, "relat": 19, "becom": [19, 22, 90, 119], "flexibl": [19, 22], "allow": [19, 22, 83, 93, 95, 103], "fire_ev": [19, 21], "thei": [19, 96, 102, 114, 145], "been": [19, 38, 39, 71], "regist": [19, 24, 39, 43, 45, 46, 58, 66, 70, 72, 73], "exchang": 19, "dynam": 19, "among": 19, "has_event_handl": 19, "check": [19, 67, 122, 124, 148], "search": [19, 44], "has_registered_ev": 19, "whether": [19, 20, 36, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "registr": 19, "signal": [19, 105], "check_input_data": 19, "call_interrupt": 19, "4rd": 19, "500th": 19, "499": 19, "shortcut": [19, 34], "event_to_attr": 19, "let": [19, 36, 96, 105, 122], "point": [19, 119], "open": [19, 71, 149], "door": 19, "loop": [19, 42], "even": [19, 22], "eventenum": [19, 22, 89], "being": [19, 74, 75, 76, 79, 81, 83, 87, 88, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "below": [19, 22, 70, 74, 76, 84, 86, 96, 106, 107, 108, 122, 125, 126, 146, 148], "customev": [19, 22], "foo_ev": [19, 22], "bar_ev": [19, 22], "bwd_event": 19, "opt_ev": 19, "trigger_custom_ev": 19, "do_foo_op": 19, "do_bar_op": 19, "enum": [19, 20, 24], "time_iteration_start": 19, "time_iteration_complet": 19, "tbptt_event_to_attr": 19, "time_iter": 19, "access": [19, 39, 45, 46, 58, 66, 72, 73, 122], "remove_event_handl": 19, "max_it": [19, 25], "At": [19, 36], "timer": [19, 33], "time": [19, 25, 33, 36, 39, 42, 44, 45, 46, 58, 66, 68, 69, 70, 72, 73, 147, 149], "alreadi": [19, 36, 39, 41, 59, 60, 61, 62, 63, 64, 71, 104, 145], "kept": [19, 36, 38], "NOT": 19, "repeat": [19, 48], "again": [19, 41], "taken": [19, 48, 99, 120, 149], "account": [19, 59, 60, 61, 62, 63, 64, 99], "count": [19, 40, 99, 102, 125, 126, 132], "determin": [19, 39, 46, 66, 90, 99, 113, 120, 142], "stopiter": 19, "preprocess": 19, "iteration_start": [19, 22, 23, 39, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 66, 68, 70, 72, 73, 148], "latter": [19, 96, 99, 113, 122], "usual": [19, 49, 50, 52, 96], "switch_batch": 19, "preprocess_batch": 19, "begin": [19, 93, 97, 103, 132], "weight": [19, 34, 36, 39, 41, 46, 66, 72, 73, 77, 78, 79, 86, 99, 125, 126], "set_data": 19, "next": [19, 22, 48, 49, 50, 52, 55, 56, 62, 119], "processing_funct": 19, "newli": [19, 54, 63], "modifi": [19, 77], "switch": 19, "data1": [19, 36], "data2": 19, "switch_iter": 19, "5000": [19, 75, 86, 92, 94, 125, 126], "onc": [19, 20, 22, 61, 63, 74, 77, 80, 81, 83, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 105, 110, 113, 114, 115, 116, 120, 122, 123, 124, 126, 132, 143, 148], "switch_dataload": 19, "termin": [19, 22, 33], "skip_complet": [19, 22], "unless": [19, 22, 39], "2669": 19, "terminate_epoch": [19, 22], "skip_epoch_complet": [19, 22], "terminate_single_epoch": [19, 22], "epoch_start": [19, 22, 65, 68, 148], "event_filt": [20, 22], "touch": 20, "boolean": 20, "result": [20, 44, 68, 69, 84, 85, 87, 89, 117, 118, 119, 122, 123, 124, 131, 148], "alwai": [20, 36], "static": [20, 36, 68, 69, 120], "before_and_after_event_filt": 20, "default_event_filt": 20, "every_before_and_after_event_filt": 20, "every_event_filt": 20, "member": [20, 99, 125, 145], "once_event_filt": 20, "calcul": [21, 74, 77, 81, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "backpropev": 21, "backward_start": 21, "backward_complet": 21, "optim_step_complet": 21, "function_before_backprop": 21, "built": [22, 96], "get_batch_start": 22, "get_batch_complet": 22, "dataloader_stop_iter": 22, "encount": [22, 120], "tabl": [22, 113, 125], "illustr": [22, 148], "variou": [22, 34, 42, 99, 146, 148], "custom_event_filt": 22, "50": [22, 47, 54, 71, 80, 87, 89, 90, 117, 118, 119, 146], "call_on_special_ev": 22, "someth": [22, 23, 65, 124], "call_everi": 22, "10th": [22, 55], "call_onc": 22, "50th": [22, 87], "call_befor": 22, "call_every_itr_before_aft": 22, "depend": [22, 85, 114, 124], "combin": [22, 148], "call_on_ev": [22, 23], "stack": 23, "__or__": 23, "weakref": 24, "statement": [24, 34], "protocol": 24, "callableeventwithfilt": [24, 25, 34, 41, 63, 71, 148], "eventslist": [24, 34, 41, 63], "unregist": 24, "get_event_attrib_valu": [25, 39, 45, 46, 58, 66, 72, 73], "update_fn": [28, 29, 30, 31, 46, 66, 72], "dirnam": [32, 38, 39], "atom": [32, 38], "require_empti": [32, 38, 73], "save_on_rank": [32, 36, 38], "destin": [32, 38], "guarante": [32, 38, 71], "damag": [32, 38], "doesnt": 32, "limit_sec": 33, "28800": 33, "session": [33, 39], "limit": [33, 148], "gracefulli": 33, "exce": 33, "maximum": [33, 80, 97, 104, 105, 134], "second": [33, 68, 70, 87, 145, 149], "hour": 33, "basehandl": 34, "log_handl": [34, 39, 45, 46, 58, 66, 72, 73, 89], "forward": [34, 85, 122], "attach_opt_params_handl": [34, 39, 45, 46, 58, 66, 71, 72, 73], "optimizerparamshandl": [34, 39, 45, 46, 58, 66, 72, 73], "miss": [34, 99], "attach_output_handl": [34, 39, 45, 46, 58, 66, 72, 73], "outputhandl": [34, 39, 45, 46, 58, 66, 72, 73, 89], "baseoptimizerparamshandl": 34, "param_nam": [34, 39, 45, 46, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 72, 73, 146], "baseoutputhandl": 34, "global_step_transform": [34, 36, 38, 39, 43, 45, 46, 58, 66, 72, 73], "state_attribut": [34, 39, 42, 45, 46, 58, 66, 71, 72, 73], "baseweightshandl": 34, "whitelist": [34, 39, 46, 66], "baseweightsscalarhandl": 34, "norm": [34, 39, 46, 66, 72, 100], "scalar": [34, 39, 45, 46, 47, 48, 55, 56, 58, 59, 60, 61, 62, 64, 66, 71, 72, 73, 84, 148], "__call__": [35, 60], "overridden": [35, 39], "treat": 35, "slightli": 35, "stuck": [35, 36], "abstract": [35, 47, 50, 54, 63, 122], "metadata": 35, "addition": 35, "basenam": 35, "epoch_checkpoint": 35, "score_nam": [35, 36, 38, 39, 46, 73], "prioriti": [35, 36], "higher": [35, 40, 117], "6554435": 35, "filename_prefix": [36, 38, 39, 46, 73], "score_funct": [36, 38, 39, 40, 46, 73], "filename_pattern": [36, 38], "include_self": [36, 38], "greater_or_equ": [36, 38], "cloud": [36, 73], "storag": [36, 38, 39, 76, 78, 79, 84, 107, 108, 138, 139, 140], "write": 36, "avoid": [36, 72, 81, 100, 141, 149], "alon": 36, "get_default_score_fn": 36, "older": [36, 38], "desir": [36, 38, 39, 45, 46, 58, 66, 72, 73], "global_step": [36, 38, 39, 45, 46, 58, 66, 72, 73], "global_step_from_engin": [36, 38, 39, 45, 46, 58, 66, 72, 73], "pattern": [36, 38], "render": [36, 38, 71], "would": [36, 38, 45, 56, 66, 104, 124, 148], "includ": [36, 38, 39, 42, 46, 66, 78, 80], "latest": [36, 38], "instanti": [36, 38], "structur": [36, 114], "suffix": 36, "ext": [36, 149], "constructor": 36, "compos": 36, "neg_val_loss": 36, "_neg_val_loss": 36, "1234": 36, "templat": 36, "30000": 36, "94": 36, "warn": [36, 41, 76, 79, 84, 106, 107, 108, 117, 118, 119, 132, 143, 149], "collid": 36, "overwritten": 36, "newer": 36, "expos": 36, "last_checkpoint": [36, 38], "checkpoint_12345": 36, "friendli": 36, "zeroredundancyoptim": 36, "wrong": [36, 148], "checkpoint_it": 36, "checkpoint_": 36, "gst": 36, "checkpoint_7000": 36, "checkpoint_8000": 36, "checkpoint_5": 36, "checkpoint_6": 36, "best_model_9_accuraci": 36, "best_model_10_accuraci": 36, "78": [36, 42, 146], "customis": 36, "respond": 36, "checkpoint_handl": 36, "save_dir": 36, "saved_checkpoint": [36, 37], "on_checkpoint_sav": 36, "alia": 36, "checkpointev": 36, "field": 36, "best_acc_scor": 36, "best_model_handl": 36, "val_accuraci": 36, "neg_loss_scor": 36, "val_neg_loss": 36, "filepath": [36, 149], "model_state_dict": 36, "opt_state_dict": 36, "strict": 36, "enabl": [36, 42, 77], "part": [36, 44], "pretrain": [36, 85, 91], "transfer": 36, "tempfil": 36, "pathlib": 36, "temporarydirectori": 36, "tmpdirnam": 36, "myprefix": [36, 38], "1e": [36, 47, 54, 81, 100, 124, 141, 146], "checkpoint_fp": 36, "myprefix_checkpoint_40": 36, "obj": 36, "pair": [36, 106, 132], "reload_object": 36, "load_kwarg": 36, "filename_compon": 36, "compon": 36, "global_st": 36, "independ": [36, 54, 63, 90], "fold": 36, "data0": 36, "setup_filename_pattern": 36, "with_prefix": 36, "with_scor": 36, "with_score_nam": 36, "with_global_step": 36, "least": [36, 67, 90, 148], "activ": [36, 76, 106, 107, 108, 122], "consid": [38, 40, 83, 99, 103, 104, 124, 125, 126], "show": [38, 41, 44, 72, 78, 96, 122, 148], "further": 38, "There": [38, 41], "counter": [38, 40, 70, 148], "action": 38, "step_numb": 38, "parent": 38, "pariti": 38, "o": [38, 46], "mymodel": [38, 122], "sort": [38, 99], "listdir": 38, "myprefix_mymodel_20": 38, "myprefix_mymodel_30": 38, "text": [39, 41, 74, 77, 78, 81, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 104, 105, 109, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144], "plot": [39, 44, 45, 46, 47, 54, 58, 63, 65, 66, 71, 72, 73, 120, 146], "upload": 39, "solut": 39, "choic": 39, "server": [39, 46, 72], "s3": 39, "bucket": 39, "pip": [39, 44, 45, 46, 47, 58, 66, 72, 73], "init": [39, 73], "project_nam": [39, 46], "integr": [39, 46, 73], "task_nam": 39, "cnn": [39, 46, 73], "nll": [39, 40, 45, 46, 58, 66, 71, 72, 73], "train_evalu": [39, 45, 46, 58, 65, 66, 72, 73, 122], "weightsscalarhandl": [39, 46, 66, 72], "format": [39, 45, 46, 58, 66, 71, 72, 73, 79, 81, 83, 90, 93, 95, 97, 98, 100, 101, 103, 104, 105, 109, 114, 115, 117, 118, 119, 120, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149], "0d": [39, 45, 46, 58, 66, 71, 72, 73], "1d": [39, 45, 46, 58, 66, 71, 72, 73, 75, 88, 116], "classmethod": [39, 47, 48, 51, 53, 54, 56, 63], "bypass_mod": 39, "bypass": 39, "github_act": 39, "set_bypass_mod": 39, "refer": [39, 44, 46, 66, 73, 77, 85, 91, 110, 111, 112, 135, 136, 137], "doc": [39, 45, 46, 59, 61, 64, 66, 71, 148], "offlin": 39, "outsid": 39, "commun": 39, "get_task": 39, "report": [39, 78, 89], "equival": [39, 45, 46, 58, 66, 72, 73, 99, 113, 125, 126], "current_task": 39, "Will": 39, "folder": 39, "clearmlsav": 39, "output_uri": 39, "artifact": 39, "runtim": 39, "locat": 39, "123": [39, 45, 66, 71], "acc": [39, 123], "validation_evalu": [39, 46], "event_complet": 39, "get_local_copi": 39, "download": [39, 46], "gradshisthandl": [39, 66], "histogram": [39, 66], "titl": [39, 45, 46, 58, 66, 72, 73, 146], "submodul": [39, 46, 66], "along": [39, 45, 46, 58, 66, 71, 72, 73], "fulli": [39, 46, 66, 124], "qualifi": [39, 40, 46, 66], "bia": [39, 46, 66, 129, 137], "has_shape_2_1": [39, 66], "p": [39, 46, 66, 77, 86, 91, 93, 95, 97, 99, 100, 103, 110, 111, 112, 124, 141, 143], "gradsscalarhandl": [39, 46, 66, 72], "upon": [39, 46, 66, 123], "ones": [39, 46, 66, 85, 104], "permit": [39, 46, 66], "Then": [39, 41, 46, 48, 55, 56, 63, 66], "layer": [39, 46, 66], "is_in_fc_lay": [39, 46, 66], "prepar": [39, 45, 46, 58, 66, 72, 73], "loss1": [39, 45, 46, 58, 66, 72, 73], "another_loss": [39, 45, 46, 58, 66, 72, 73], "loss2": [39, 45, 46, 58, 66, 72, 73], "label": [39, 45, 46, 54, 58, 63, 66, 72, 73, 78, 99, 102, 104, 115, 117, 118, 119, 120, 125, 126, 146], "validation_set": [39, 45, 46, 58, 66, 72, 73], "weightshisthandl": [39, 66], "conv": [39, 66], "weight_selector": [39, 66], "has_bias_in_nam": [39, 46, 66], "custom_event_nam": [39, 43, 45, 46, 58, 66, 72, 73], "early_stop": 40, "min_delta": 40, "cumulative_delta": 40, "minimum": [40, 44, 105], "less": [40, 72, 90], "val_loss": 40, "best_scor": 40, "ema_handl": 41, "momentum": [41, 146], "0002": 41, "momentum_warmup": 41, "warmup_it": 41, "handle_buff": 41, "exponenti": [41, 44, 59], "ema": 41, "smooth": [41, 44, 77], "theta_": 41, "cdot": [41, 77, 81, 139], "onlin": [41, 85, 148], "th": [41, 53, 83, 102, 103, 113, 122, 124], "retriev": [41, 63, 113, 123], "ema_momentum": 41, "warmup": 41, "phase": [41, 57], "left": [41, 77, 86, 90, 103, 104, 105, 132, 134, 135, 138, 139, 140], "right": [41, 77, 86, 90, 103, 104, 105, 132, 134, 135, 138, 139, 140], "buffer": 41, "three": [41, 56, 148], "ema_train": 41, "ema_model": 41, "track": [41, 45, 46, 58], "recommend": [41, 71], "build": [41, 78], "train_step_fn": 41, "resume_from": 41, "ckpt_handler": 41, "print_ema_momentum": 41, "val_step_fn": 41, "get_val_step_fn": 41, "run_valid": 41, "val_data_load": 41, "warm": [41, 49, 50, 52, 57], "linearli": [41, 48, 49, 50, 52, 55, 62], "002": 41, "afterward": 41, "step_fn": 41, "build_gener": 41, "discrimin": 41, "build_discrimin": 41, "gen_handl": 41, "disc_handl": 41, "get_step_fn": 41, "gen_ema_momentum": 41, "dis_ema_momentum": 41, "disc_ema_momentum": 41, "warn_if_exist": 41, "suppress": 41, "messag": [41, 42, 71, 149], "choos": 41, "uniqu": 41, "thrown": 41, "fbresearch": 42, "fbresearchlogg": 42, "delimit": 42, "show_output": 42, "research": 42, "purpos": [42, 65, 148], "design": 42, "system": 42, "stat": [42, 68, 99, 125, 126, 132, 143], "memori": [42, 65, 84, 89, 131, 138, 139, 140, 149], "create_supervised_train": [42, 65, 71], "setup_logg": [42, 147, 149], "opt": 42, "001": [42, 49, 51, 52, 53, 146], "crossentropyloss": 42, "total_loss": 42, "2024": 42, "04": [42, 117, 118, 119], "05": [42, 44, 52, 55, 56, 57, 115], "47": [42, 90, 117, 118, 119], "843": 42, "eta": 42, "00": [42, 87, 89, 149], "00100": 42, "5999": 42, "0008": 42, "prep": 42, "9297": 42, "60": [42, 117, 118, 119], "9985": 42, "80": [42, 80, 104, 117, 118, 119, 146], "9785": 42, "6211": 42, "5981": 42, "0009": 42, "9013": 42, "59": [42, 89], "9811": 42, "79": [42, 76, 89], "9434": 42, "99": [42, 63], "6116": 42, "5972": 42, "8753": 42, "58": 42, "9657": 42, "9112": 42, "98": [42, 57, 113, 146], "6035": 42, "5969": 42, "8516": 42, "57": [42, 117, 118, 119], "9521": 42, "8816": 42, "97": 42, "5966": 42, "frequenc": 42, "select": [42, 71, 104, 105], "log_complet": 42, "log_epoch_complet": 42, "log_epoch_start": 42, "log_everi": 42, "regular": 42, "lr_finder": 44, "finder": [44, 147], "boundari": 44, "manner": [44, 113], "valuabl": 44, "well": [44, 103, 117, 118, 119, 124, 125, 126], "network": [44, 49, 120], "what": [44, 71], "trainer_with_lr_find": 44, "get_result": [44, 68, 69], "matplotlib": [44, 47, 63, 146], "suggest": [44, 49], "lr_suggest": 44, "exit": 44, "cyclic": [44, 49, 50, 52, 146], "neural": [44, 49, 147], "arxiv": 44, "org": [44, 46, 59, 61, 64, 77, 122], "ab": [44, 56, 127, 146], "1506": 44, "01186": 44, "fastai": 44, "lr_find": 44, "apply_suggested_lr": 44, "num_it": 44, "start_lr": 44, "end_lr": 44, "step_mod": 44, "exp": [44, 77, 83, 91, 97, 130, 131], "smooth_f": 44, "diverge_th": 44, "lower": [44, 104], "upper": 44, "factor": [44, 56, 59, 61, 64, 86, 113, 146], "best_loss": 44, "find": [44, 85], "numer": 44, "curv": [44, 99, 107], "skip_start": 44, "skip_end": 44, "log_lr": 44, "display_suggest": 44, "ax": 44, "trim": 44, "logarithm": 44, "red": 44, "dot": 44, "pre": 44, "plt": [44, 47, 54, 63, 146], "subplot": [44, 146], "figur": [44, 47, 146], "savefig": 44, "jpg": 44, "tracking_uri": 45, "client": [45, 58], "uri": 45, "log_param": 45, "__class__": [45, 58], "__name__": [45, 58], "__version__": [45, 58], "get_device_nam": [45, 58], "runnabl": [45, 66], "evalut": [45, 66], "dict_valu": [45, 66], "111": [45, 66], "234": [45, 66], "list_valu": [45, 66], "aa": [45, 66], "bb": [45, 66], "44": [45, 66, 90], "tuple_valu": [45, 66], "112": [45, 66], "113": [45, 66], "aaa": [45, 66], "bbb": [45, 66], "log_metr": 45, "mlflow_tracking_uri": 45, "api_token": 46, "anonym": 46, "npt_logger": 46, "experiment_nam": 46, "param": [46, 47, 48, 49, 52, 53, 55, 56, 59, 60, 61, 62, 64], "minst": [46, 73], "project": [46, 73], "api": [46, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 124, 125, 126, 147], "token": [46, 87, 110, 111, 112], "ai": [46, 147], "menu": 46, "neptune_api_token": 46, "secur": 46, "workspac": 46, "tom": 46, "classif": [46, 78, 83, 84, 93, 95, 99, 103, 106, 108, 120], "neptune_project": 46, "init_run": 46, "leav": 46, "out": [46, 120, 148], "explor": 46, "app": 46, "neptunesav": 46, "validation_accuraci": [46, 73], "create_supervised_evalu": [46, 65, 96, 122, 148], "neptuneserv": 46, "close": [46, 58, 59, 66, 71, 72, 73, 119], "ui": 46, "pytor1": 46, "chart": 46, "neptuneml": 46, "param_schedul": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "save_histori": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64], "param_histori": [47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64], "get_param": [47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 64], "plot_valu": 47, "num_ev": [47, 48, 51, 53, 54, 56, 63, 146], "scheduler_kwarg": [47, 54, 56, 63], "line": 47, "line2d": 47, "pylab": [47, 146], "figsiz": [47, 146], "linearcyclicalschedul": [47, 48, 54], "start_valu": [47, 49, 50, 52, 54, 146], "end_valu": [47, 49, 50, 52, 54, 146], "cycle_s": [47, 49, 50, 52, 54, 146], "simulate_valu": [47, 48, 51, 53, 54, 56, 63, 146], "event_index": [47, 48, 51, 53, 54, 56, 60, 63], "durat": [48, 49, 50, 52, 57, 146], "concat": [48, 146], "default_train": [48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 113], "scheduler_1": [48, 49, 53, 146], "scheduler_2": [48, 49, 53, 146], "cosineannealingschedul": [48, 53], "anneal": [48, 49, 146], "cycl": [48, 49, 50, 52, 53], "indefinit": 48, "combined_schedul": 48, "print_lr": [48, 49, 51, 52, 53, 55, 57], "75": [48, 80, 84, 98, 100, 101, 105, 109, 114, 115, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146], "8828": 48, "6000": 48, "3171": 48, "value_0": 48, "value_1": 48, "cycle_mult": [49, 50, 52, 146], "start_value_mult": [49, 50, 52, 146], "end_value_mult": [49, 50, 52, 146], "warmup_dur": [49, 50, 52, 57], "param_group_index": [49, 50, 52, 53, 54, 55, 56], "half": [49, 52], "cosin": [49, 81, 146], "wave": [49, 144], "smith17": 49, "ratio": [49, 50, 52, 105], "iteration_": [49, 50, 52], "cosineann": [49, 53], "1464": [49, 53], "4999": [49, 53, 78], "8535": [49, 53], "01464": [49, 53], "04999": [49, 53], "08535": [49, 53], "smith": 49, "lesli": 49, "vision": [49, 145], "wacv": 49, "2017": [49, 85], "ieee": 49, "winter": 49, "confer": 49, "use_legaci": 51, "steplr": [51, 64, 146], "torch_lr_schedul": [51, 57], "step_siz": [51, 63, 64, 146], "gamma": [51, 57, 59, 60, 61, 63, 64, 146], "010": 51, "monoton": 52, "kwagr": 52, "adjust": [52, 114], "back": [52, 66], "descend": 52, "ascend": 52, "togeth": [52, 148], "scheduler1": [52, 55], "scheduler2": [52, 55], "histori": [53, 56, 65, 84, 148], "scheduler_0_valu": 53, "scheduler_1_valu": 53, "scheduler_i_valu": 53, "whatev": [54, 63, 73], "absolut": [54, 63, 98, 128, 130, 131, 134, 135, 138, 139, 140], "lr_valu": [54, 146], "arrai": [54, 63, 132, 146], "xlabel": [54, 63, 146], "ylabel": [54, 63, 146], "legend": [54, 63, 72, 146], "milestones_valu": [55, 62], "piecewis": [55, 62], "mileston": [55, 61, 62], "45": [55, 90], "decreas": [55, 56], "20th": 55, "jump": 55, "21st": 55, "30th": 55, "till": 55, "third": [55, 148], "fifth": 55, "milestones_values1": 55, "08": [55, 81, 141], "02": [55, 104, 149], "milestones_values2": 55, "09": 55, "reducelronplateau": 56, "whose": [56, 104, 125, 145], "monitor": 56, "paramat": 56, "unit": [56, 120], "most": [56, 104, 148], "multipli": 56, "threshold_mod": [56, 146], "threshold": [56, 74, 80, 86, 99, 104, 106, 108, 125, 126, 146], "rel": [56, 131, 135, 140], "metric_valu": [56, 146], "set_metric_v": 56, "trigger_ev": 56, "init_lr": [56, 146], "warmup_start_valu": 57, "warmup_end_valu": 57, "output_simulated_valu": 57, "fill": 57, "concatschedul": 57, "normal": [57, 102, 114, 120, 137, 148], "exponentiallr": [57, 59, 146], "098": 57, "09604": 57, "09411": 57, "09223": 57, "09039": 57, "plx_logger": 58, "log_input": 58, "state_param_schedul": [59, 60, 61, 62, 63, 64], "initial_valu": [59, 60, 61, 63, 64], "create_new": [59, 60, 61, 62, 63, 64], "decai": [59, 61, 64, 113], "stabl": [59, 61, 64], "81": [59, 60, 61, 64, 146], "729": [59, 60, 61, 64], "6561": [59, 60, 61, 64], "print_param": [59, 60, 61, 62, 64], "7290": [59, 60, 61, 64], "lambda_obj": 60, "lambdast": 60, "__init__": [60, 85, 117, 118, 119, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "self": [60, 65, 85, 122, 148], "event_endex": 60, "5904": [60, 64], "5314": 60, "4782": 60, "4304": 60, "reach": 61, "multisteplr": 61, "96": [62, 117, 118, 119], "92": [62, 117, 118, 119], "88": [62, 117, 118, 119], "8400": 62, "76": 62, "72": [62, 117, 118, 119], "68": [62, 117, 118, 119], "64": [62, 71], "pyplot": [63, 146], "step_state_param_valu": 63, "stepstateschedul": 63, "step_scheduled_param": 63, "visual": [65, 146], "potenti": [65, 84, 131, 138, 139, 140], "ram": [65, 84, 131, 138, 139, 140], "eo": 65, "log_training_result": [65, 69], "y_pred0": 65, "y0": 65, "y_pred1": 65, "y1": [65, 104, 145], "under": [65, 87, 89, 99, 107, 122, 124], "tb_logger": [66, 89], "log_dir": 66, "tb_log": 66, "favor": [66, 113], "tensorboardx": [66, 146], "fall": 66, "summarywrit": 66, "v1": 66, "writer": 66, "add_scalar": 66, "terminate_on_nan": 67, "nan": [67, 88], "infinit": 67, "time_profil": [68, 69], "profil": [68, 69, 147], "train_updat": [68, 69], "log_intermediate_result": [68, 69], "print_result": [68, 69], "write_result": [68, 69], "path_to_dir": [68, 69], "csv": [68, 69], "aggreg": [68, 69, 88], "157": 68, "46292": 68, "01452": 68, "1501": 68, "26905": 68, "07730": 68, "01258": 68, "11384": 68, "00008": 68, "1935": 68, "28461": 68, "1551": 68, "00300": 68, "02693": 68, "82721": 68, "00000": 68, "00006": 68, "piecewiselinear": 68, "03482": 68, "00001": 68, "188": 68, "00018": 68, "679": 68, "00002": 68, "20037": 68, "866": 68, "00089": 68, "1943": 68, "00010": 68, "00003": [68, 69], "empty_cuda_cach": 68, "log_elapsed_tim": [68, 69], "57860": 68, "11529": 68, "14977": 68, "12893": 68, "00790": 68, "yet": 68, "unaggreg": [68, 69], "awesome_filenam": [68, 69], "processing_stat": [68, 69], "dataflow_stat": [68, 69], "event_start": 68, "252387": [68, 69], "125676": [68, 69], "00029": [68, 69], "252342": [68, 69], "125123": [68, 69], "43245": 69, "log_validation_result": 69, "55271": 69, "log_tim": 69, "00049": 69, "00106": 69, "log_training_loss": 69, "059": 69, "04571": 69, "took": 69, "29543": 69, "00393": 69, "1875": 69, "00784": 69, "00602": 69, "00034": 69, "24365": 69, "00533": 69, "1874": 69, "01129": 69, "937": 69, "00866": 69, "00113": 69, "measur": [70, 89, 90, 99, 103, 114, 125, 126, 148], "divid": 70, "elaps": [70, 71], "step_count": 70, "increment": 70, "forget": 70, "sleep": 70, "idl": 70, "003073937026784": 70, "2003182829997968": 70, "paus": 70, "10016545779653825": 70, "training_update_funct": 70, "callback": 70, "tqdm": [71, 87, 89, 146], "persist": [71, 87, 89], "bar_format": 71, "desc": 71, "n_fmt": 71, "total_fmt": 71, "percentag": [71, 89, 135, 139], "0f": 71, "postfix": 71, "tqdm_kwarg": 71, "l_bar": 71, "r_bar": 71, "rate_fmt": 71, "descript": [71, 80, 104, 113], "simpli": [71, 79, 81, 83, 90, 93, 95, 97, 98, 100, 101, 103, 105, 109, 114, 115, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "simpl": [71, 148], "128": 71, "06": [71, 100], "stderr": [71, 149], "log_fil": 71, "log_messag": 71, "stdout": 71, "tqdm_notebook": 71, "ipywidget": 71, "due": 71, "bug": 71, "closing_event_nam": 71, "either": [71, 72, 76, 106, 107, 108, 145], "entri": [71, 90], "advanc": 71, "intention": 71, "preserv": 71, "wish": 71, "show_legend": 72, "vd_logger": 72, "vb_logger": 72, "raise_except": 72, "git": 72, "fossasia": 72, "url": 72, "visdom_server_url": 72, "visdom_port": 72, "concurr": 72, "futur": 72, "threadpoolexecutor": 72, "post": 72, "thread": [72, 73], "usernam": 72, "password": 72, "visdom_usernam": 72, "visdom_password": 72, "frequent": 72, "slow": 72, "down": 72, "situat": 72, "seper": 73, "entiti": 73, "bias": 73, "graph": 73, "watch": 73, "dir": 73, "model_checkpoint": 73, "is_multilabel": [74, 78, 99, 125, 126], "skip_unrol": [74, 75, 76, 79, 80, 81, 83, 84, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144], "binari": [74, 86, 99, 106, 108, 120, 125, 126], "multiclass": [74, 78, 86, 99, 125, 126], "multilabel": [74, 78, 99, 125, 126], "frac": [74, 81, 83, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 109, 119, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144], "tp": [74, 104, 125, 126], "tn": 74, "fp": [74, 125], "num_categori": [74, 78, 86, 125, 126], "greater": [74, 80, 104], "unrol": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "fed": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 132, 143], "ouput": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "y_pred_a": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "y_pred_b": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "altern": [74, 75, 76, 79, 81, 83, 87, 88, 90, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 132, 143], "visit": [74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 124, 125, 126], "y_true": [74, 76, 78, 79, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 102, 103, 106, 107, 108, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "6666": [74, 78, 107], "0266": [74, 78, 86, 125, 126], "1719": [74, 78, 86, 125, 126], "3055": [74, 78, 86, 125, 126], "6886": [74, 78, 86, 125, 126], "3978": [74, 78, 86, 125, 126], "8176": [74, 78, 86, 125, 126], "9230": [74, 78, 86, 125, 126], "0197": [74, 78, 86, 125, 126], "8395": [74, 78, 86, 125, 126], "1785": [74, 78, 86, 125, 126], "2670": [74, 78, 86, 125, 126], "6084": [74, 78, 86, 125, 126], "8448": [74, 78, 86, 125, 126], "7177": [74, 78, 86, 125, 126], "7288": [74, 78, 86, 125, 126], "7748": [74, 78, 86], "9542": [74, 78, 86], "8573": [74, 78, 86], "element": [74, 86, 125, 126], "thresholded_output_transform": [74, 86, 125, 126], "round": [74, 86, 106, 108, 120, 125, 126], "65": [74, 86, 125, 126], "quantiti": [74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "interest": [74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 148], "shallow": [74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "flatten": [74, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "arithmet": [75, 116, 147], "rule": [75, 88, 99, 116], "nd": [75, 88, 116], "seen": [75, 88, 120], "output_tranform": [75, 79, 81, 83, 88, 90, 93, 95, 97, 98, 100, 101, 103, 105, 109, 114, 115], "avg": [75, 78, 88], "er": [75, 88], "check_compute_fn": [76, 79, 84, 106, 107, 108, 117, 118, 119, 132, 143], "ground": [76, 79, 81, 93, 95, 98, 99, 101, 102, 104, 106, 107, 108, 109, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "truth": [76, 79, 93, 95, 99, 102, 104, 106, 107, 108, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "sklearn": [76, 78, 79, 106, 107, 108, 117, 118, 119, 133], "average_precision_scor": 76, "compris": [76, 99, 106, 107, 108], "probabl": [76, 83, 91, 93, 95, 99, 103, 106, 107, 108, 125], "estim": [76, 90, 106, 107, 108], "confid": [76, 104, 106, 107, 108, 145], "shown": [76, 106, 107, 108], "activated_output_transform": 76, "softmax": 76, "avg_precis": [76, 106, 107, 108], "70": 76, "46": [76, 90, 149], "54": 76, "84": [76, 146], "average_precis": 76, "9166": 76, "ngram": [77, 112], "no_smooth": 77, "macro": [77, 78, 99, 125, 126], "b_": 77, "sum_": [77, 81, 83, 91, 93, 95, 97, 98, 99, 101, 103, 104, 109, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 144], "w_": 77, "p_": [77, 83, 93, 95, 104], "gram": [77, 90], "sentenc": 77, "breveti": 77, "penalti": 77, "papineni": 77, "et": [77, 85, 90, 91, 97], "al": [77, 85, 90, 91, 97], "2002": 77, "review": 77, "techniqu": 77, "chen": 77, "2014": 77, "hypothes": 77, "corpu": 77, "remark": [77, 85], "inspir": [77, 85], "nltk": 77, "smooth1": 77, "nltk_smooth2": 77, "smooth2": 77, "micro": [77, 99, 125, 126], "www": 77, "_modul": 77, "translat": 77, "bleu_scor": 77, "nlp": 77, "m": [77, 80, 93, 102, 110, 111, 112, 148], "cat": [77, 110, 111, 112], "mat": [77, 110, 111, 112], "split": [77, 110, 111, 112], "_y": 77, "0393": 77, "output_dict": 78, "resembl": 78, "scikit": [78, 125, 126, 127, 133], "classification_report": 78, "underli": 78, "doesn": [78, 113], "harmon": [78, 86, 116], "metricslambda": [78, 82, 86, 92, 94, 121, 148], "cr": 78, "dict_kei": 78, "recal": [78, 80, 86, 99, 104, 106, 110, 111, 112, 120, 124, 148], "f1": [78, 124, 148], "3333": [78, 125], "3999": 78, "6111": 78, "5222": [78, 86], "2333": 78, "cohen": 79, "kappa": 79, "wieght": 79, "quadrat": 79, "cohen_kappa_scor": 79, "ck": 79, "4285": 79, "num_class": [80, 82, 92, 94, 102, 104, 120, 121, 148, 149], "detect": [80, 104], "ap": [80, 99, 124], "95": [80, 104], "iou": [80, 94, 104, 148], "small": [80, 81, 100, 104, 141], "32px": 80, "medium": [80, 104], "96px": 80, "larg": [80, 104], "1e5px": 80, "ep": [81, 100, 141], "similar": [81, 114, 148], "_similar": 81, "x_i": 81, "y_i": 81, "_2": 81, "epsilon": [81, 141], "y_": [81, 98, 101, 109], "x_": [81, 98, 101, 109], "divis": [81, 100, 141], "cosine_similar": 81, "pred": [81, 98, 100, 101, 105, 109, 114, 115], "5080491304397583": 81, "cm": [82, 92, 94, 120, 121, 127, 148], "ignore_index": [82, 92, 94, 121], "dice": 82, "coeffici": [82, 132, 141, 142, 143], "confusionmatrix": [82, 92, 94, 121, 148], "confus": [82, 92, 94, 102, 120, 121], "matrix": [82, 85, 92, 94, 102, 120, 121, 148], "background": [82, 92, 94, 120, 121, 148], "6667": [82, 86, 106], "0000": [82, 83, 92, 93, 94, 95, 103, 125, 126], "quad": [83, 141], "z_": 83, "unnorm": [83, 93, 95, 103], "logit": [83, 85, 93, 95, 103, 120], "segment": [83, 93, 95, 103], "6931": [83, 93, 95, 103], "0986": [83, 93, 95, 103], "3863": [83, 93, 95, 103], "6094": [83, 93, 95, 103], "3026": [83, 93, 95, 103], "8902875582377116": 83, "compute_fn": [84, 117, 118, 119, 132, 143], "entir": [84, 148], "n_target": 84, "datatyp": 84, "float32": [84, 114, 138, 139, 140, 142], "might": [84, 114, 117, 118, 119, 132, 143], "mse_fn": 84, "y_target": 84, "type_a": 84, "mse": [84, 101, 105], "5729": 84, "epochmetricwarn": 84, "disabl": 84, "num_featur": [85, 91], "feature_extractor": [85, 91], "frechet": 85, "incept": [85, 91], "distanc": [85, 90, 100, 105, 119, 127, 133, 144], "mu_": 85, "tr": [85, 90], "sigma_": [85, 143], "sigma_1": 85, "sigma_2": 85, "mu_1": 85, "covari": 85, "mu_2": 85, "heusel": 85, "approach": 85, "mathiasen": 85, "2020": [85, 149], "pytorch_fid": 85, "torchvis": [85, 91], "scipi": [85, 132, 143], "squar": [85, 101, 105, 109, 142], "root": [85, 109], "vector": [85, 97, 103, 115, 120, 148], "extract": 85, "neither": [85, 91], "nor": [85, 91], "imagenet": [85, 91], "ident": [85, 91, 104], "implicitli": [85, 91], "mention": [85, 91], "inceptionv3": 85, "wrapperinceptionv3": 85, "fid_incv3": 85, "super": [85, 122, 148], "2048": 85, "block_idx": 85, "block_index_by_dim": 85, "wrapper_model": 85, "pytorch_fid_metr": 85, "f_": 86, "real": [86, 91], "unweight": [86, 99, 125, 126], "7499": 86, "4000": [86, 129], "wps_metric": 87, "ntoken": 87, "wp": 87, "400": 87, "On": [87, 89, 122, 124], "epochwis": [87, 89, 113, 122, 124], "usage_nam": [87, 89, 122, 124, 148], "batchwis": [87, 89, 113, 122, 124], "mymetr": [87, 89, 113, 122, 124], "is_attach": [87, 89, 113, 122, 124], "put": [87, 89, 122], "explicitli": [87, 89, 122], "sent": [87, 89, 122], "geometr": [88, 116, 130, 131], "prod": 88, "8171": 88, "2134": 88, "mem": 89, "sigma_x": 90, "sigma_i": 90, "ignore_invalid_batch": 90, "hilbert": 90, "schmidt": 90, "tild": 90, "mathbf": [90, 93, 95, 97, 103], "k": [90, 97, 99, 104, 115, 125, 126], "matric": 90, "gaussian": [90, 97, 114], "rbf": [90, 97], "kernel": [90, 97, 114], "diagon": [90, 120], "statist": 90, "unbias": 90, "propos": 90, "song": 90, "2012": [90, 97], "eq": [90, 148], "paper": 90, "four": [90, 148], "bandwidth": [90, 97], "heurist": 90, "median": [90, 138, 139, 140], "valueerror": 90, "41": 90, "42": [90, 117, 118, 119], "43": [90, 117, 118, 119], "48": 90, "49": [90, 117, 118, 119], "sin": 90, "pi": 90, "09226646274328232": 90, "d_": [91, 93, 95], "kl": [91, 93, 95], "hat": [91, 103], "condit": [91, 148], "margin": 91, "diverg": [91, 93, 95], "barratt": 91, "2018": [91, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 144, 148], "299": 91, "intersect": [92, 121], "j": [92, 93, 94, 97, 102, 105, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "lvert": [92, 94, 98, 134], "cap": [92, 94], "rvert": [92, 94, 98, 134], "cup": [92, 94], "jensen": 93, "shannon": 93, "align": [93, 97, 103], "_i": [93, 95, 97, 103], "q": [93, 95, 97], "q_": [93, 95], "div": [93, 95], "1626": 93, "jaccard": 94, "jac": 94, "kullback": 95, "leibler": 95, "7220296859741211": 95, "observ": 96, "extra": 96, "required_output_kei": [96, 113, 116, 122], "criterion_kwarg": 96, "standard": [96, 114, 122, 149], "nllloss": [96, 123], "3499999": 96, "var": 97, "discrep": 97, "mmd": 97, "underset": 97, "leq": 97, "sup": 97, "mathbb": 97, "sim": 97, "approx": 97, "substack": 97, "neq": 97, "_j": 97, "sigma": [97, 114], "gretton": 97, "ldot": 97, "80324818": 97, "95768364": 97, "03807209": 97, "11059691": 97, "38230813": 97, "4111988": 97, "8864329": 97, "02890403": 97, "60119252": 97, "68732452": 97, "12854739": 97, "72095073": 97, "62604613": 97, "52368328": 97, "24112842": 97, "0686768": 97, "80502737": 97, "53321717": 97, "83849465": 97, "59099726": 97, "76385441": 97, "68688272": 97, "56833803": 97, "98100778": 97, "55267761": 97, "13084654": 97, "45382906": 97, "0754253": 97, "70317304": 97, "4756805": 97, "0726": 97, "mae": [98, 134, 138], "9375": [98, 124], "rec_threshold": [99, 104], "class_mean": 99, "rec": [99, 104], "_threshold": [99, 104], "r_k": [99, 104], "r_": [99, 104, 143], "p_k": [99, 125, 126], "attempt": 99, "give": [99, 148], "detector": [99, 104], "classifi": 99, "sensiv": [99, 104], "area": [99, 104, 107], "Its": 99, "liter": [99, 104], "incorpor": 99, "dimension": 99, "altogeth": [99, 123, 125, 126], "tp_c": 99, "fp_c": 99, "term": 99, "v": [99, 125, 126], "rest": [99, 125, 126], "sens": [99, 113, 125, 126], "imbal": [99, 125, 126], "y_a": [99, 104, 123], "y_b": [99, 104, 123], "consist": [99, 125], "pairwisedist": 100, "pairwis": 100, "degre": 100, "mpd": 100, "5955": 100, "828125": 101, "denot": 102, "uint8": [102, 149], "int8": 102, "int16": 102, "int32": 102, "int64": 102, "mlcm": 102, "p_c": 103, "entropi": 103, "intuit": 103, "space": 103, "proceed": 103, "mlr": 103, "press": 103, "v70": 103, "hu17b": 103, "mutual_inform": 103, "18599730730056763": 103, "iou_threshold": 104, "max_detections_per_image_per_class": 104, "area_rang": 104, "coco": 104, "summat": 104, "operand": 104, "word": 104, "peek": 104, "match": 104, "55": [104, 117, 118, 119], "categori": 104, "therein": 104, "coco_tensor_list_to_dict_list": 104, "det": 104, "gt": 104, "bbox": [104, 145], "box": [104, 145], "x1": [104, 145], "x2": [104, 145], "y2": [104, 145], "bottom": 104, "coordin": 104, "iscrowd": [104, 145], "crowd": 104, "data_rang": [105, 114], "peak": 105, "nois": 105, "log_": 105, "max_": [105, 134], "8671405": 105, "grayscal": 105, "rgb": 105, "But": 105, "ycbcr": 105, "yuv": 105, "channel": 105, "And": [105, 123, 148], "get_y_channel": 105, "219": 105, "7027966": 105, "precision_recall_curv": 106, "sigmoid_output_transform": [106, 107, 108], "sigmoid": [106, 107, 108, 120], "0474": [106, 107, 108], "5987": [106, 107, 108], "7109": [106, 107, 108], "9997": [106, 107, 108], "prec_recall_curv": 106, "characterist": [107, 108], "roc": [107, 108], "auc": 107, "roc_auc_scor": 107, "roc_curv": [107, 108], "roc_auc": 108, "fpr": 108, "tpr": 108, "333": 108, "inf": 108, "711": 108, "047": 108, "rmse": 109, "956559480312316": 109, "variant": [110, 132], "multiref": [110, 111, 112], "lin": [110, 111, 112], "2004": [110, 111, 112], "candid": [110, 111, 112], "roug": [111, 112], "longest": 111, "co": 112, "epoch_bound": 113, "hold": [113, 132], "deprac": 113, "singleepochrunningbatchwis": 113, "runningbatchwis": 113, "running_avg_accuraci": 113, "log_running_avg_metr": 113, "zip": 113, "98039": 113, "98079": 113, "96117": 113, "96195": 113, "020000": 113, "019600": 113, "039208": 113, "038423": 113, "057655": 113, "insert": 113, "metricusag": [113, 122, 124], "former": 113, "runningepochwis": 113, "much": 113, "detach": [113, 122, 124, 148], "conjunct": [113, 122, 124], "sever": [113, 122, 124], "expens": [113, 122, 124], "epoch_wis": [113, 122, 124], "batch_wis": [113, 122, 124], "kernel_s": 114, "k1": 114, "k2": 114, "03": [114, 117, 118, 119], "ndim": 114, "bfloat16": 114, "typic": 114, "255": [114, 120], "deviat": 114, "uniform": 114, "2d": 114, "3d": 114, "un": 114, "9218971": 114, "categor": 115, "one_hot_to_binary_output_transform": 115, "argmax": [115, 120, 148], "hot": [115, 120, 149], "top_k_accuraci": 115, "public": [116, 122], "num_exampl": 116, "calinski": 117, "harabasz": 117, "qualiti": [117, 118, 119], "good": [117, 118, 119], "separ": [117, 118, 119], "calinski_harabasz_scor": 117, "epochmetr": [117, 118, 119], "71": [117, 118, 119], "62": [117, 118, 119], "69": [117, 118, 119], "89": [117, 118, 119], "53": [117, 118, 119], "63": [117, 118, 119], "67": [117, 118, 119], "52": [117, 118, 119], "51": [117, 118, 119], "733935832977295": 117, "davi": 118, "bouldin": 118, "closer": 118, "davies_bouldin_scor": 118, "3838673743829881": 118, "silhouette_kwarg": 119, "silhouett": 119, "nearest": 119, "silhouette_scor": 119, "1260736584663391": 119, "confusion_matrix": 120, "schema": 120, "column": 120, "row": 120, "were": [120, 125, 126], "correctli": [120, 149], "horizont": 120, "vertic": 120, "neglect": 120, "binary_one_hot_output_transform": 120, "to_onehot": [120, 147, 149], "24999": 121, "myloss": 122, "ca": 122, "cb": 122, "a_tru": 122, "b_true": 122, "a_pr": 122, "b_pred": 122, "mse_loss": 122, "cross_entropi": 122, "discuss": 122, "91221": 122, "custommetr": 122, "re": [122, 145, 148], "becam": 122, "written": [122, 124, 149], "major": 122, "pick": 122, "proper": 122, "_state_dict_all_req_kei": 122, "metric_group": 123, "easier": 123, "eval_metr": 123, "individu": 123, "metrics_lambda": 124, "obtain": 124, "recurs": 124, "partial": [124, 148], "fbeta": 124, "f2": 124, "f3": 124, "f4": 124, "8571": 124, "9677": 124, "9807": 124, "too": 124, "_baseprecisionrecal": [125, 126], "multicalss": [125, 126], "tp_k": [125, 126], "fp_k": 125, "basi": [125, 126], "tp_n": [125, 126], "fp_n": 125, "incompat": [125, 126], "precision_k": 125, "weighted_metr": 125, "two_class_metr": [125, 126], "6666666666666666": [125, 126], "7500": [125, 126], "macro_metr": [125, 126], "27777777777777773": 125, "3333333333333333": [125, 126, 148], "num_label": 125, "micro_metr": [125, 126], "samples_metr": [125, 126], "2000": 125, "2222222222222222": 125, "2333333333333333": 125, "175": 125, "stand": 125, "fn_k": 126, "fn_n": 126, "recall_k": 126, "canberra": 127, "a_j": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "p_j": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "botchkarev": [127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 144, 148], "8000": 127, "denomin": 127, "fraction": [128, 129], "fae": 128, "fractional_abs_error": 128, "fb": 129, "fractional_bia": 129, "gmae": 130, "ln": [130, 131], "2723": 130, "gmrae": 131, "math": 131, "gmare": 131, "kendal": 132, "correl": [132, 141, 143], "tau": 132, "discord": 132, "p_i": 132, "a_i": 132, "said": 132, "concord": 132, "kendalltau": 132, "kendall_tau": 132, "4666666666666666": 132, "manhattan": 133, "md": [133, 138, 139, 140], "maxa": 134, "mare": 135, "mape": [135, 139], "me": 136, "625": [136, 138], "mnb": 137, "mdae": 138, "mdape": 139, "mdrae": 140, "mrae": 140, "pearson": 141, "corr": [141, 143], "9768688678741455": 141, "r2": 142, "8035": 142, "spearman": 143, "cov": 143, "spearmanr": 143, "spearman_corr": 143, "7142857142857143": 143, "hedg": 144, "whd": 144, "object_detection_average_precision_recal": 145, "unchang": 145, "deisr": 145, "plu": 145, "comprehens": 146, "cyclegan": 146, "efficientnet": 146, "section": 146, "lr_values_1": 146, "2e": 146, "lr_values_2": 146, "lr_values_3": 146, "lr_values_4": 146, "141": 146, "ylim": 146, "142": 146, "143": 146, "144": 146, "131": 146, "132": 146, "133": 146, "150": 146, "cosineannealinglr": 146, "lr_scheduler_1": 146, "lr_scheduler_2": 146, "lr_scheduler_3": 146, "t_max": 146, "eta_min": 146, "121": 146, "122": 146, "82": 146, "83": 146, "suptitl": 146, "xtick": 146, "high": 147, "flexibli": 147, "our": 147, "apply_to_tensor": [147, 149], "apply_to_typ": [147, 149], "hash_checkpoint": [147, 149], "truncat": 147, "backpropag": 147, "fashion": 148, "practic": 148, "respons": 148, "care": 148, "metrics_group": 148, "As": 148, "functool": 148, "ot_func": 148, "snippet": 148, "device_id": 148, "output_devic": 148, "test_sampl": 148, "test_dataset": 148, "test_load": 148, "becaus": 148, "parti": 148, "dill": 148, "overcom": 148, "fine": 148, "grain": 148, "metric1": 148, "metric2": 148, "pow": 148, "unaverag": 148, "iou_metr": 148, "iou_no_bg_metr": 148, "mean_iou_no_bg_metr": 148, "12345": 148, "These": 148, "customaccuraci": 148, "ignored_class": 148, "_num_correct": 148, "_num_exampl": 148, "_devic": 148, "mask": 148, "view": 148, "necessari": 148, "notic": 148, "differenti": 148, "inter": 148, "definit": 148, "page": 148, "appendix": 148, "mathemat": 148, "accompani": 148, "reinit": 148, "attr": 148, "abil": 148, "byte": 149, "input_typ": 149, "relev": 149, "pin": 149, "checkpoint_path": 149, "output_dir": 149, "hash": 149, "check_hash": 149, "hub": 149, "load_state_dict_from_url": 149, "digit": 149, "sha256": 149, "manual_seed_al": 149, "set_rng_stat": 149, "stream": 149, "asctim": 149, "levelnam": 149, "distributed_rank": 149, "encod": 149, "utf": 149, "critic": 149, "debug": 149, "textio": 149, "sy": 149, "readabl": 149, "07": 149, "356": 149, "358": 149, "my": 149, "special": 149, "charact": 149, "torchscript": 149}, "objects": {"": [[147, 0, 0, "-", "ignite"]], "ignite": [[147, 0, 0, "-", "contrib"], [149, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[0, 0, 0, "-", "common"], [0, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[0, 1, 1, "", "add_early_stopping_by_val_score"], [0, 1, 1, "", "gen_save_best_models_by_val_score"], [0, 1, 1, "", "save_best_model_by_val_score"], [0, 1, 1, "", "setup_any_logging"], [0, 1, 1, "", "setup_clearml_logging"], [0, 1, 1, "", "setup_common_distrib_training_handlers"], [0, 1, 1, "", "setup_common_training_handlers"], [0, 1, 1, "", "setup_mlflow_logging"], [0, 1, 1, "", "setup_neptune_logging"], [0, 1, 1, "", "setup_plx_logging"], [0, 1, 1, "", "setup_tb_logging"], [0, 1, 1, "", "setup_trains_logging"], [0, 1, 1, "", "setup_visdom_logging"], [0, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[0, 2, 1, "", "Tbptt_Events"], [0, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.distributed.auto": [[8, 2, 1, "", "DistributedProxySampler"], [9, 1, 1, "", "auto_dataloader"], [10, 1, 1, "", "auto_model"], [11, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[12, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[12, 3, 1, "", "run"]], "ignite.distributed": [[4, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[4, 1, 1, "", "all_gather"], [4, 1, 1, "", "all_gather_tensors_with_shapes"], [4, 1, 1, "", "all_reduce"], [4, 1, 1, "", "available_backends"], [4, 1, 1, "", "backend"], [4, 1, 1, "", "barrier"], [4, 1, 1, "", "broadcast"], [4, 1, 1, "", "device"], [4, 1, 1, "", "finalize"], [4, 1, 1, "", "get_local_rank"], [4, 1, 1, "", "get_nnodes"], [4, 1, 1, "", "get_node_rank"], [4, 1, 1, "", "get_nproc_per_node"], [4, 1, 1, "", "get_rank"], [4, 1, 1, "", "get_world_size"], [4, 4, 1, "", "has_native_dist_support"], [4, 4, 1, "", "has_xla_support"], [4, 1, 1, "", "hostname"], [4, 1, 1, "", "initialize"], [4, 1, 1, "", "model_name"], [4, 1, 1, "", "new_group"], [4, 1, 1, "", "one_rank_first"], [4, 1, 1, "", "one_rank_only"], [4, 1, 1, "", "set_local_rank"], [4, 1, 1, "", "show_config"], [4, 1, 1, "", "spawn"], [4, 1, 1, "", "sync"]], "ignite.engine": [[13, 1, 1, "", "create_supervised_evaluator"], [14, 1, 1, "", "create_supervised_trainer"], [26, 1, 1, "", "supervised_evaluation_step"], [27, 1, 1, "", "supervised_evaluation_step_amp"], [28, 1, 1, "", "supervised_training_step"], [29, 1, 1, "", "supervised_training_step_amp"], [30, 1, 1, "", "supervised_training_step_apex"], [31, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[15, 2, 1, "", "DeterministicEngine"], [16, 2, 1, "", "ReproducibleBatchSampler"], [17, 1, 1, "", "keep_random_state"], [18, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[15, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[16, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[19, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[19, 3, 1, "", "add_event_handler"], [19, 3, 1, "", "fire_event"], [19, 3, 1, "", "has_event_handler"], [19, 3, 1, "", "has_registered_events"], [19, 3, 1, "", "interrupt"], [19, 4, 1, "", "last_event_name"], [19, 3, 1, "", "load_state_dict"], [19, 3, 1, "", "on"], [19, 3, 1, "", "register_events"], [19, 3, 1, "", "remove_event_handler"], [19, 3, 1, "", "run"], [19, 3, 1, "", "set_data"], [19, 4, 1, "", "state"], [19, 3, 1, "", "state_dict"], [19, 3, 1, "", "terminate"], [19, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[20, 2, 1, "", "CallableEventWithFilter"], [21, 2, 1, "", "EventEnum"], [22, 2, 1, "", "Events"], [23, 2, 1, "", "EventsList"], [24, 2, 1, "", "RemovableEventHandle"], [25, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[20, 3, 1, "", "before_and_after_event_filter"], [20, 3, 1, "", "default_event_filter"], [20, 3, 1, "", "every_before_and_after_event_filter"], [20, 3, 1, "", "every_event_filter"], [20, 4, 1, "", "name"], [20, 3, 1, "", "once_event_filter"], [20, 4, 1, "", "value"]], "ignite.engine.events.Events": [[22, 4, 1, "", "COMPLETED"], [22, 4, 1, "", "DATALOADER_STOP_ITERATION"], [22, 4, 1, "", "EPOCH_COMPLETED"], [22, 4, 1, "", "EPOCH_STARTED"], [22, 4, 1, "", "EXCEPTION_RAISED"], [22, 4, 1, "", "GET_BATCH_COMPLETED"], [22, 4, 1, "", "GET_BATCH_STARTED"], [22, 4, 1, "", "INTERRUPT"], [22, 4, 1, "", "ITERATION_COMPLETED"], [22, 4, 1, "", "ITERATION_STARTED"], [22, 4, 1, "", "STARTED"], [22, 4, 1, "", "TERMINATE"], [22, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[24, 3, 1, "", "remove"]], "ignite.engine.events.State": [[25, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[6, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[32, 2, 1, "", "DiskSaver"], [33, 2, 1, "", "TimeLimit"], [34, 0, 0, "-", "base_logger"], [39, 0, 0, "-", "clearml_logger"], [42, 0, 0, "-", "fbresearch_logger"], [43, 1, 1, "", "global_step_from_engine"], [45, 0, 0, "-", "mlflow_logger"], [46, 0, 0, "-", "neptune_logger"], [58, 0, 0, "-", "polyaxon_logger"], [66, 0, 0, "-", "tensorboard_logger"], [71, 0, 0, "-", "tqdm_logger"], [72, 0, 0, "-", "visdom_logger"], [73, 0, 0, "-", "wandb_logger"]], "ignite.handlers.DiskSaver": [[32, 3, 1, "", "remove"]], "ignite.handlers.base_logger": [[34, 2, 1, "", "BaseHandler"], [34, 2, 1, "", "BaseLogger"], [34, 2, 1, "", "BaseOptimizerParamsHandler"], [34, 2, 1, "", "BaseOutputHandler"], [34, 2, 1, "", "BaseWeightsHandler"], [34, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.handlers.base_logger.BaseLogger": [[34, 3, 1, "", "attach"], [34, 3, 1, "", "attach_opt_params_handler"], [34, 3, 1, "", "attach_output_handler"]], "ignite.handlers.checkpoint": [[35, 2, 1, "", "BaseSaveHandler"], [36, 2, 1, "", "Checkpoint"], [37, 2, 1, "", "CheckpointEvents"], [38, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[35, 3, 1, "", "__call__"], [35, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[36, 2, 1, "", "Item"], [36, 4, 1, "", "SAVED_CHECKPOINT"], [36, 3, 1, "", "get_default_score_fn"], [36, 3, 1, "", "load_objects"], [36, 3, 1, "", "load_state_dict"], [36, 3, 1, "", "reload_objects"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "setup_filename_pattern"], [36, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[36, 4, 1, "", "filename"], [36, 4, 1, "", "priority"]], "ignite.handlers.clearml_logger": [[39, 2, 1, "", "ClearMLLogger"], [39, 2, 1, "", "ClearMLSaver"], [39, 2, 1, "", "GradsHistHandler"], [39, 2, 1, "", "GradsScalarHandler"], [39, 2, 1, "", "OptimizerParamsHandler"], [39, 2, 1, "", "OutputHandler"], [39, 2, 1, "", "WeightsHistHandler"], [39, 2, 1, "", "WeightsScalarHandler"], [39, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.clearml_logger.ClearMLLogger": [[39, 3, 1, "", "bypass_mode"], [39, 3, 1, "", "get_task"], [39, 3, 1, "", "set_bypass_mode"]], "ignite.handlers.clearml_logger.ClearMLSaver": [[39, 3, 1, "", "get_local_copy"], [39, 3, 1, "", "remove"]], "ignite.handlers.early_stopping": [[40, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[40, 3, 1, "", "load_state_dict"], [40, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[41, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[41, 3, 1, "", "attach"], [41, 4, 1, "", "ema_model"], [41, 4, 1, "", "handle_buffers"], [41, 4, 1, "", "model"], [41, 4, 1, "", "momentum"]], "ignite.handlers.fbresearch_logger": [[42, 2, 1, "", "FBResearchLogger"]], "ignite.handlers.fbresearch_logger.FBResearchLogger": [[42, 3, 1, "", "attach"], [42, 3, 1, "", "log_completed"], [42, 3, 1, "", "log_epoch_completed"], [42, 3, 1, "", "log_epoch_started"], [42, 3, 1, "", "log_every"]], "ignite.handlers.lr_finder": [[44, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[44, 3, 1, "", "apply_suggested_lr"], [44, 3, 1, "", "attach"], [44, 3, 1, "", "get_results"], [44, 3, 1, "", "lr_suggestion"], [44, 3, 1, "", "plot"]], "ignite.handlers.mlflow_logger": [[45, 2, 1, "", "MLflowLogger"], [45, 2, 1, "", "OptimizerParamsHandler"], [45, 2, 1, "", "OutputHandler"], [45, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger": [[46, 2, 1, "", "GradsScalarHandler"], [46, 2, 1, "", "NeptuneLogger"], [46, 2, 1, "", "NeptuneSaver"], [46, 2, 1, "", "OptimizerParamsHandler"], [46, 2, 1, "", "OutputHandler"], [46, 2, 1, "", "WeightsScalarHandler"], [46, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.neptune_logger.NeptuneSaver": [[46, 3, 1, "", "remove"]], "ignite.handlers.param_scheduler": [[47, 2, 1, "", "BaseParamScheduler"], [48, 2, 1, "", "ConcatScheduler"], [49, 2, 1, "", "CosineAnnealingScheduler"], [50, 2, 1, "", "CyclicalScheduler"], [51, 2, 1, "", "LRScheduler"], [52, 2, 1, "", "LinearCyclicalScheduler"], [53, 2, 1, "", "ParamGroupScheduler"], [54, 2, 1, "", "ParamScheduler"], [55, 2, 1, "", "PiecewiseLinear"], [56, 2, 1, "", "ReduceLROnPlateauScheduler"], [57, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[47, 3, 1, "", "get_param"], [47, 3, 1, "", "load_state_dict"], [47, 3, 1, "", "plot_values"], [47, 3, 1, "", "simulate_values"], [47, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[48, 3, 1, "", "get_param"], [48, 3, 1, "", "load_state_dict"], [48, 3, 1, "", "simulate_values"], [48, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[49, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[51, 3, 1, "", "get_param"], [51, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[52, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[53, 3, 1, "", "get_param"], [53, 3, 1, "", "load_state_dict"], [53, 3, 1, "", "simulate_values"], [53, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[54, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[55, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[56, 3, 1, "", "get_param"], [56, 3, 1, "", "simulate_values"]], "ignite.handlers.polyaxon_logger": [[58, 2, 1, "", "OptimizerParamsHandler"], [58, 2, 1, "", "OutputHandler"], [58, 2, 1, "", "PolyaxonLogger"], [58, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.state_param_scheduler": [[59, 2, 1, "", "ExpStateScheduler"], [60, 2, 1, "", "LambdaStateScheduler"], [61, 2, 1, "", "MultiStepStateScheduler"], [62, 2, 1, "", "PiecewiseLinearStateScheduler"], [63, 2, 1, "", "StateParamScheduler"], [64, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[59, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[60, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[61, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[62, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[63, 3, 1, "", "attach"], [63, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[64, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[65, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[65, 3, 1, "", "attach"], [65, 4, 1, "", "data"], [65, 3, 1, "", "reset"], [65, 3, 1, "", "store"], [65, 3, 1, "", "update"]], "ignite.handlers.tensorboard_logger": [[66, 2, 1, "", "GradsHistHandler"], [66, 2, 1, "", "GradsScalarHandler"], [66, 2, 1, "", "OptimizerParamsHandler"], [66, 2, 1, "", "OutputHandler"], [66, 2, 1, "", "TensorboardLogger"], [66, 2, 1, "", "WeightsHistHandler"], [66, 2, 1, "", "WeightsScalarHandler"], [66, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.terminate_on_nan": [[67, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[68, 2, 1, "", "BasicTimeProfiler"], [69, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[68, 3, 1, "", "attach"], [68, 3, 1, "", "get_results"], [68, 3, 1, "", "print_results"], [68, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[69, 3, 1, "", "attach"], [69, 3, 1, "", "get_results"], [69, 3, 1, "", "print_results"], [69, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[70, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[70, 3, 1, "", "attach"], [70, 3, 1, "", "pause"], [70, 3, 1, "", "reset"], [70, 3, 1, "", "resume"], [70, 4, 1, "", "running"], [70, 3, 1, "", "step"], [70, 4, 1, "", "step_count"], [70, 4, 1, "", "total"], [70, 3, 1, "", "value"]], "ignite.handlers.tqdm_logger": [[71, 2, 1, "", "ProgressBar"]], "ignite.handlers.tqdm_logger.ProgressBar": [[71, 3, 1, "", "attach"], [71, 3, 1, "", "attach_opt_params_handler"], [71, 3, 1, "", "log_message"]], "ignite.handlers.visdom_logger": [[72, 2, 1, "", "GradsScalarHandler"], [72, 2, 1, "", "OptimizerParamsHandler"], [72, 2, 1, "", "OutputHandler"], [72, 2, 1, "", "VisdomLogger"], [72, 2, 1, "", "WeightsScalarHandler"], [72, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.wandb_logger": [[73, 2, 1, "", "OptimizerParamsHandler"], [73, 2, 1, "", "OutputHandler"], [73, 2, 1, "", "WandBLogger"], [73, 1, 1, "", "global_step_from_engine"]], "ignite.metrics": [[74, 2, 1, "", "Accuracy"], [75, 2, 1, "", "Average"], [76, 2, 1, "", "AveragePrecision"], [77, 2, 1, "", "Bleu"], [78, 1, 1, "", "ClassificationReport"], [79, 2, 1, "", "CohenKappa"], [80, 2, 1, "", "CommonObjectDetectionMetrics"], [81, 2, 1, "", "CosineSimilarity"], [82, 1, 1, "", "DiceCoefficient"], [83, 2, 1, "", "Entropy"], [84, 2, 1, "", "EpochMetric"], [85, 2, 1, "", "FID"], [86, 1, 1, "", "Fbeta"], [87, 2, 1, "", "Frequency"], [88, 2, 1, "", "GeometricAverage"], [89, 2, 1, "", "GpuInfo"], [90, 2, 1, "", "HSIC"], [91, 2, 1, "", "InceptionScore"], [92, 1, 1, "", "IoU"], [93, 2, 1, "", "JSDivergence"], [94, 1, 1, "", "JaccardIndex"], [95, 2, 1, "", "KLDivergence"], [96, 2, 1, "", "Loss"], [97, 2, 1, "", "MaximumMeanDiscrepancy"], [98, 2, 1, "", "MeanAbsoluteError"], [99, 2, 1, "", "MeanAveragePrecision"], [100, 2, 1, "", "MeanPairwiseDistance"], [101, 2, 1, "", "MeanSquaredError"], [102, 2, 1, "", "MultiLabelConfusionMatrix"], [103, 2, 1, "", "MutualInformation"], [104, 2, 1, "", "ObjectDetectionAvgPrecisionRecall"], [105, 2, 1, "", "PSNR"], [106, 2, 1, "", "PrecisionRecallCurve"], [107, 2, 1, "", "ROC_AUC"], [108, 2, 1, "", "RocCurve"], [109, 2, 1, "", "RootMeanSquaredError"], [110, 2, 1, "", "Rouge"], [111, 2, 1, "", "RougeL"], [112, 2, 1, "", "RougeN"], [113, 2, 1, "", "RunningAverage"], [114, 2, 1, "", "SSIM"], [115, 2, 1, "", "TopKCategoricalAccuracy"], [116, 2, 1, "", "VariableAccumulation"], [121, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[74, 3, 1, "", "compute"], [74, 3, 1, "", "reset"], [74, 3, 1, "", "update"]], "ignite.metrics.Average": [[75, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[77, 3, 1, "", "compute"], [77, 3, 1, "", "reset"], [77, 3, 1, "", "update"]], "ignite.metrics.CommonObjectDetectionMetrics": [[80, 3, 1, "", "compute"], [80, 3, 1, "", "reset"], [80, 3, 1, "", "update"]], "ignite.metrics.CosineSimilarity": [[81, 3, 1, "", "compute"], [81, 3, 1, "", "reset"], [81, 3, 1, "", "update"]], "ignite.metrics.Entropy": [[83, 3, 1, "", "compute"], [83, 3, 1, "", "reset"], [83, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[84, 3, 1, "", "compute"], [84, 3, 1, "", "reset"], [84, 3, 1, "", "update"]], "ignite.metrics.FID": [[85, 3, 1, "", "compute"], [85, 3, 1, "", "reset"], [85, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[87, 3, 1, "", "attach"], [87, 3, 1, "", "completed"], [87, 3, 1, "", "compute"], [87, 3, 1, "", "reset"], [87, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[88, 3, 1, "", "compute"]], "ignite.metrics.GpuInfo": [[89, 3, 1, "", "attach"], [89, 3, 1, "", "completed"], [89, 3, 1, "", "compute"], [89, 3, 1, "", "reset"], [89, 3, 1, "", "update"]], "ignite.metrics.HSIC": [[90, 3, 1, "", "compute"], [90, 3, 1, "", "reset"], [90, 3, 1, "", "update"]], "ignite.metrics.InceptionScore": [[91, 3, 1, "", "compute"], [91, 3, 1, "", "reset"], [91, 3, 1, "", "update"]], "ignite.metrics.JSDivergence": [[93, 3, 1, "", "compute"]], "ignite.metrics.KLDivergence": [[95, 3, 1, "", "compute"], [95, 3, 1, "", "reset"], [95, 3, 1, "", "update"]], "ignite.metrics.Loss": [[96, 3, 1, "", "compute"], [96, 4, 1, "", "required_output_keys"], [96, 3, 1, "", "reset"], [96, 3, 1, "", "update"]], "ignite.metrics.MaximumMeanDiscrepancy": [[97, 3, 1, "", "compute"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[98, 3, 1, "", "compute"], [98, 3, 1, "", "reset"], [98, 3, 1, "", "update"]], "ignite.metrics.MeanAveragePrecision": [[99, 3, 1, "", "compute"], [99, 3, 1, "", "reset"], [99, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[101, 3, 1, "", "compute"], [101, 3, 1, "", "reset"], [101, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[102, 3, 1, "", "compute"], [102, 3, 1, "", "reset"], [102, 3, 1, "", "update"]], "ignite.metrics.MutualInformation": [[103, 3, 1, "", "compute"], [103, 3, 1, "", "reset"]], "ignite.metrics.ObjectDetectionAvgPrecisionRecall": [[104, 3, 1, "", "compute"], [104, 3, 1, "", "reset"], [104, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[105, 3, 1, "", "compute"], [105, 3, 1, "", "reset"], [105, 3, 1, "", "update"]], "ignite.metrics.PrecisionRecallCurve": [[106, 3, 1, "", "compute"]], "ignite.metrics.RocCurve": [[108, 3, 1, "", "compute"]], "ignite.metrics.RootMeanSquaredError": [[109, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[110, 3, 1, "", "compute"], [110, 3, 1, "", "reset"], [110, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[113, 3, 1, "", "attach"], [113, 3, 1, "", "compute"], [113, 3, 1, "", "detach"], [113, 4, 1, "", "required_output_keys"], [113, 3, 1, "", "reset"], [113, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[114, 3, 1, "", "compute"], [114, 3, 1, "", "reset"], [114, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[115, 3, 1, "", "compute"], [115, 3, 1, "", "reset"], [115, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[116, 3, 1, "", "compute"], [116, 4, 1, "", "required_output_keys"], [116, 3, 1, "", "reset"], [116, 3, 1, "", "update"]], "ignite.metrics.clustering": [[117, 2, 1, "", "CalinskiHarabaszScore"], [118, 2, 1, "", "DaviesBouldinScore"], [119, 2, 1, "", "SilhouetteScore"]], "ignite.metrics.confusion_matrix": [[120, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[120, 3, 1, "", "compute"], [120, 3, 1, "", "normalize"], [120, 3, 1, "", "reset"], [120, 3, 1, "", "update"]], "ignite.metrics.metric": [[148, 2, 1, "", "BatchFiltered"], [148, 2, 1, "", "BatchWise"], [148, 2, 1, "", "EpochWise"], [122, 2, 1, "", "Metric"], [148, 2, 1, "", "MetricUsage"], [148, 2, 1, "", "RunningBatchWise"], [148, 2, 1, "", "RunningEpochWise"], [148, 2, 1, "", "SingleEpochRunningBatchWise"], [148, 1, 1, "", "reinit__is_reduced"], [148, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[148, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[148, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[122, 3, 1, "", "attach"], [122, 3, 1, "", "completed"], [122, 3, 1, "", "compute"], [122, 3, 1, "", "detach"], [122, 3, 1, "", "is_attached"], [122, 3, 1, "", "iteration_completed"], [122, 3, 1, "", "load_state_dict"], [122, 4, 1, "", "required_output_keys"], [122, 3, 1, "", "reset"], [122, 3, 1, "", "started"], [122, 3, 1, "", "state_dict"], [122, 3, 1, "", "update"]], "ignite.metrics.metric.RunningBatchWise": [[148, 4, 1, "", "usage_name"]], "ignite.metrics.metric.RunningEpochWise": [[148, 4, 1, "", "usage_name"]], "ignite.metrics.metric.SingleEpochRunningBatchWise": [[148, 4, 1, "", "usage_name"]], "ignite.metrics.metric_group": [[123, 2, 1, "", "MetricGroup"]], "ignite.metrics.metric_group.MetricGroup": [[123, 3, 1, "", "compute"], [123, 3, 1, "", "reset"], [123, 3, 1, "", "update"]], "ignite.metrics.metrics_lambda": [[124, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[124, 3, 1, "", "attach"], [124, 3, 1, "", "compute"], [124, 3, 1, "", "detach"], [124, 3, 1, "", "is_attached"], [124, 3, 1, "", "reset"], [124, 3, 1, "", "update"]], "ignite.metrics.precision": [[125, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[125, 3, 1, "", "update"]], "ignite.metrics.recall": [[126, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[126, 3, 1, "", "update"]], "ignite.metrics.regression": [[127, 2, 1, "", "CanberraMetric"], [128, 2, 1, "", "FractionalAbsoluteError"], [129, 2, 1, "", "FractionalBias"], [130, 2, 1, "", "GeometricMeanAbsoluteError"], [131, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [132, 2, 1, "", "KendallRankCorrelation"], [133, 2, 1, "", "ManhattanDistance"], [134, 2, 1, "", "MaximumAbsoluteError"], [135, 2, 1, "", "MeanAbsoluteRelativeError"], [136, 2, 1, "", "MeanError"], [137, 2, 1, "", "MeanNormalizedBias"], [138, 2, 1, "", "MedianAbsoluteError"], [139, 2, 1, "", "MedianAbsolutePercentageError"], [140, 2, 1, "", "MedianRelativeAbsoluteError"], [141, 2, 1, "", "PearsonCorrelation"], [142, 2, 1, "", "R2Score"], [143, 2, 1, "", "SpearmanRankCorrelation"], [144, 2, 1, "", "WaveHedgesDistance"]], "ignite.metrics.regression.CanberraMetric": [[127, 3, 1, "", "compute"], [127, 3, 1, "", "reset"]], "ignite.metrics.regression.FractionalAbsoluteError": [[128, 3, 1, "", "compute"], [128, 3, 1, "", "reset"]], "ignite.metrics.regression.FractionalBias": [[129, 3, 1, "", "compute"], [129, 3, 1, "", "reset"]], "ignite.metrics.regression.GeometricMeanAbsoluteError": [[130, 3, 1, "", "compute"], [130, 3, 1, "", "reset"]], "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError": [[131, 3, 1, "", "compute"], [131, 3, 1, "", "reset"]], "ignite.metrics.regression.KendallRankCorrelation": [[132, 3, 1, "", "compute"], [132, 3, 1, "", "update"]], "ignite.metrics.regression.ManhattanDistance": [[133, 3, 1, "", "compute"], [133, 3, 1, "", "reset"]], "ignite.metrics.regression.MaximumAbsoluteError": [[134, 3, 1, "", "compute"], [134, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanAbsoluteRelativeError": [[135, 3, 1, "", "compute"], [135, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanError": [[136, 3, 1, "", "compute"], [136, 3, 1, "", "reset"]], "ignite.metrics.regression.MeanNormalizedBias": [[137, 3, 1, "", "compute"], [137, 3, 1, "", "reset"]], "ignite.metrics.regression.PearsonCorrelation": [[141, 3, 1, "", "compute"], [141, 3, 1, "", "reset"]], "ignite.metrics.regression.R2Score": [[142, 3, 1, "", "compute"], [142, 3, 1, "", "reset"]], "ignite.metrics.regression.SpearmanRankCorrelation": [[143, 3, 1, "", "compute"], [143, 3, 1, "", "update"]], "ignite.metrics.regression.WaveHedgesDistance": [[144, 3, 1, "", "compute"], [144, 3, 1, "", "reset"]], "ignite.metrics.vision.object_detection_average_precision_recall": [[145, 1, 1, "", "coco_tensor_list_to_dict_list"]], "ignite.utils": [[149, 1, 1, "", "apply_to_tensor"], [149, 1, 1, "", "apply_to_type"], [149, 1, 1, "", "convert_tensor"], [149, 1, 1, "", "hash_checkpoint"], [149, 1, 1, "", "manual_seed"], [149, 1, 1, "", "setup_logger"], [149, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ignit": [0, 1, 2, 4, 5, 6, 146, 147, 148, 149], "contrib": [0, 1, 2, 147], "engin": [0, 5, 19, 148], "truncat": 0, "backpropag": 0, "through": 0, "time": [0, 1], "helper": [0, 4, 5, 148], "method": [0, 5], "setup": 0, "trainer": [0, 5], "evalu": [0, 5], "handler": [1, 146], "paramet": [1, 146], "schedul": [1, 146], "deprec": [1, 2], "lr": 1, "finder": 1, "profil": 1, "logger": [1, 146], "metric": [2, 122, 148], "modul": 2, "regress": 2, "distribut": [4, 148], "launcher": 4, "auto": 4, "util": [4, 149], "event": [5, 22], "determinist": 5, "defin": 5, "supervis": 5, "resum": 5, "train": 5, "dataflow": 5, "synchron": 5, "except": 6, "distributedproxysampl": 8, "auto_dataload": 9, "auto_model": 10, "auto_optim": 11, "parallel": 12, "create_supervised_evalu": 13, "create_supervised_train": 14, "deterministicengin": 15, "reproduciblebatchsampl": 16, "keep_random_st": 17, "update_dataload": 18, "callableeventwithfilt": 20, "eventenum": 21, "eventslist": 23, "removableeventhandl": 24, "state": [25, 146], "supervised_evaluation_step": 26, "supervised_evaluation_step_amp": 27, "supervised_training_step": 28, "supervised_training_step_amp": 29, "supervised_training_step_apex": 30, "supervised_training_step_tpu": 31, "disksav": 32, "timelimit": 33, "base_logg": 34, "basesavehandl": 35, "checkpoint": 36, "checkpointev": 37, "modelcheckpoint": 38, "clearml_logg": 39, "earlystop": 40, "emahandl": 41, "fbresearch_logg": 42, "global_step_from_engin": 43, "fastailrfind": 44, "mlflow_logg": 45, "neptune_logg": 46, "baseparamschedul": 47, "concatschedul": [48, 146], "cosineannealingschedul": [49, 146], "cyclicalschedul": 50, "lrschedul": [51, 146], "linearcyclicalschedul": [52, 146], "paramgroupschedul": 53, "paramschedul": 54, "piecewiselinear": 55, "reducelronplateauschedul": [56, 146], "create_lr_scheduler_with_warmup": 57, "polyaxon_logg": 58, "expstateschedul": 59, "lambdastateschedul": 60, "multistepstateschedul": 61, "piecewiselinearstateschedul": 62, "stateparamschedul": 63, "stepstateschedul": 64, "epochoutputstor": 65, "tensorboard_logg": 66, "terminateonnan": 67, "basictimeprofil": 68, "handlerstimeprofil": 69, "timer": 70, "tqdm_logger": 71, "visdom_logg": 72, "wandb_logg": 73, "accuraci": 74, "averag": 75, "averageprecis": 76, "bleu": 77, "classificationreport": 78, "cohenkappa": 79, "commonobjectdetectionmetr": 80, "cosinesimilar": 81, "dicecoeffici": 82, "entropi": 83, "epochmetr": 84, "fid": 85, "fbeta": 86, "frequenc": 87, "geometricaverag": 88, "gpuinfo": 89, "hsic": 90, "inceptionscor": 91, "iou": 92, "jsdiverg": 93, "jaccardindex": 94, "kldiverg": 95, "loss": 96, "maximummeandiscrep": 97, "meanabsoluteerror": 98, "meanaverageprecis": 99, "meanpairwisedist": 100, "meansquarederror": 101, "multilabelconfusionmatrix": 102, "mutualinform": 103, "objectdetectionavgprecisionrecal": 104, "psnr": 105, "precisionrecallcurv": 106, "roc_auc": 107, "roccurv": 108, "rootmeansquarederror": 109, "roug": 110, "rougel": 111, "rougen": 112, "runningaverag": 113, "ssim": 114, "topkcategoricalaccuraci": 115, "variableaccumul": 116, "calinskiharabaszscor": 117, "daviesbouldinscor": 118, "silhouettescor": 119, "confusionmatrix": 120, "miou": 121, "metricgroup": 123, "metricslambda": 124, "precis": 125, "recal": 126, "canberrametr": 127, "fractionalabsoluteerror": 128, "fractionalbia": 129, "geometricmeanabsoluteerror": 130, "geometricmeanrelativeabsoluteerror": 131, "kendallrankcorrel": 132, "manhattandist": 133, "maximumabsoluteerror": 134, "meanabsoluterelativeerror": 135, "meanerror": 136, "meannormalizedbia": 137, "medianabsoluteerror": 138, "medianabsolutepercentageerror": 139, "medianrelativeabsoluteerror": 140, "pearsoncorrel": 141, "r2score": 142, "spearmanrankcorrel": 143, "wavehedgesdist": 144, "coco_tensor_list_to_dict_list": 145, "complet": [146, 148], "list": [146, 148], "gener": 146, "more": 146, "exampl": 146, "param_schedul": 146, "piecewis": 146, "linear": 146, "concaten": 146, "torch": 146, "your": 147, "network": 147, "packag": 147, "refer": 147, "attach": 148, "api": 148, "reset": 148, "updat": 148, "comput": 148, "arithmet": 148, "how": 148, "creat": 148, "custom": 148, "its": 148, "usag": 148, "metricusag": 148, "epochwis": 148, "runningepochwis": 148, "batchwis": 148, "runningbatchwis": 148, "singleepochrunningbatchwis": 148, "batchfilt": 148, "reinit__is_reduc": 148, "sync_all_reduc": 148}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ignite.contrib.engines": [[0, "ignite-contrib-engines"]], "Truncated Backpropagation Through Time": [[0, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[1, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[1, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[1, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[1, "time-profilers-deprecated"]], "Loggers [deprecated]": [[1, "loggers-deprecated"]], "ignite.contrib.metrics": [[2, "ignite-contrib-metrics"]], "Contrib module metrics [deprecated]": [[2, "contrib-module-metrics-deprecated"]], "Regression metrics [deprecated]": [[2, "regression-metrics-deprecated"]], "ignite.distributed": [[4, "ignite-distributed"]], "Distributed launcher and auto helpers": [[4, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[4, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[4, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[4, "ignite-distributed-utils"]], "ignite.engine": [[5, "ignite-engine"]], "ignite.engine.engine": [[5, "ignite-engine-engine"]], "ignite.engine.events": [[5, "ignite-engine-events"]], "ignite.engine.deterministic": [[5, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[5, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[5, "resuming-the-training"]], "Deterministic training": [[5, "deterministic-training"]], "Dataflow synchronization": [[5, "dataflow-synchronization"]], "ignite.exceptions": [[6, "ignite-exceptions"]], "DistributedProxySampler": [[8, "distributedproxysampler"]], "auto_dataloader": [[9, "auto-dataloader"]], "auto_model": [[10, "auto-model"]], "auto_optim": [[11, "auto-optim"]], "Parallel": [[12, "parallel"]], "create_supervised_evaluator": [[13, "create-supervised-evaluator"]], "create_supervised_trainer": [[14, "create-supervised-trainer"]], "DeterministicEngine": [[15, "deterministicengine"]], "ReproducibleBatchSampler": [[16, "reproduciblebatchsampler"]], "keep_random_state": [[17, "keep-random-state"]], "update_dataloader": [[18, "update-dataloader"]], "Engine": [[19, "engine"]], "CallableEventWithFilter": [[20, "callableeventwithfilter"]], "EventEnum": [[21, "eventenum"]], "Events": [[22, "events"]], "EventsList": [[23, "eventslist"]], "RemovableEventHandle": [[24, "removableeventhandle"]], "State": [[25, "state"]], "supervised_evaluation_step": [[26, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[27, "supervised-evaluation-step-amp"]], "supervised_training_step": [[28, "supervised-training-step"]], "supervised_training_step_amp": [[29, "supervised-training-step-amp"]], "supervised_training_step_apex": [[30, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[31, "supervised-training-step-tpu"]], "DiskSaver": [[32, "disksaver"]], "TimeLimit": [[33, "timelimit"]], "base_logger": [[34, "module-ignite.handlers.base_logger"]], "BaseSaveHandler": [[35, "basesavehandler"]], "Checkpoint": [[36, "checkpoint"]], "CheckpointEvents": [[37, "checkpointevents"]], "ModelCheckpoint": [[38, "modelcheckpoint"]], "clearml_logger": [[39, "module-ignite.handlers.clearml_logger"]], "EarlyStopping": [[40, "earlystopping"]], "EMAHandler": [[41, "emahandler"]], "fbresearch_logger": [[42, "module-ignite.handlers.fbresearch_logger"]], "global_step_from_engine": [[43, "global-step-from-engine"]], "FastaiLRFinder": [[44, "fastailrfinder"]], "mlflow_logger": [[45, "module-ignite.handlers.mlflow_logger"]], "neptune_logger": [[46, "module-ignite.handlers.neptune_logger"]], "BaseParamScheduler": [[47, "baseparamscheduler"]], "ConcatScheduler": [[48, "concatscheduler"]], "CosineAnnealingScheduler": [[49, "cosineannealingscheduler"]], "CyclicalScheduler": [[50, "cyclicalscheduler"]], "LRScheduler": [[51, "lrscheduler"]], "LinearCyclicalScheduler": [[52, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[53, "paramgroupscheduler"]], "ParamScheduler": [[54, "paramscheduler"]], "PiecewiseLinear": [[55, "piecewiselinear"]], "ReduceLROnPlateauScheduler": [[56, "reducelronplateauscheduler"]], "create_lr_scheduler_with_warmup": [[57, "create-lr-scheduler-with-warmup"]], "polyaxon_logger": [[58, "module-ignite.handlers.polyaxon_logger"]], "ExpStateScheduler": [[59, "expstatescheduler"]], "LambdaStateScheduler": [[60, "lambdastatescheduler"]], "MultiStepStateScheduler": [[61, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[62, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[63, "stateparamscheduler"]], "StepStateScheduler": [[64, "stepstatescheduler"]], "EpochOutputStore": [[65, "epochoutputstore"]], "tensorboard_logger": [[66, "module-ignite.handlers.tensorboard_logger"]], "TerminateOnNan": [[67, "terminateonnan"]], "BasicTimeProfiler": [[68, "basictimeprofiler"]], "HandlersTimeProfiler": [[69, "handlerstimeprofiler"]], "Timer": [[70, "timer"]], "tqdm_logger": [[71, "module-ignite.handlers.tqdm_logger"]], "visdom_logger": [[72, "module-ignite.handlers.visdom_logger"]], "wandb_logger": [[73, "module-ignite.handlers.wandb_logger"]], "Accuracy": [[74, "accuracy"]], "Average": [[75, "average"]], "AveragePrecision": [[76, "averageprecision"]], "Bleu": [[77, "bleu"]], "ClassificationReport": [[78, "classificationreport"]], "CohenKappa": [[79, "cohenkappa"]], "CommonObjectDetectionMetrics": [[80, "commonobjectdetectionmetrics"]], "CosineSimilarity": [[81, "cosinesimilarity"]], "DiceCoefficient": [[82, "dicecoefficient"]], "Entropy": [[83, "entropy"]], "EpochMetric": [[84, "epochmetric"]], "FID": [[85, "fid"]], "Fbeta": [[86, "fbeta"]], "Frequency": [[87, "frequency"]], "GeometricAverage": [[88, "geometricaverage"]], "GpuInfo": [[89, "gpuinfo"]], "HSIC": [[90, "hsic"]], "InceptionScore": [[91, "inceptionscore"]], "IoU": [[92, "iou"]], "JSDivergence": [[93, "jsdivergence"]], "JaccardIndex": [[94, "jaccardindex"]], "KLDivergence": [[95, "kldivergence"]], "Loss": [[96, "loss"]], "MaximumMeanDiscrepancy": [[97, "maximummeandiscrepancy"]], "MeanAbsoluteError": [[98, "meanabsoluteerror"]], "MeanAveragePrecision": [[99, "meanaverageprecision"]], "MeanPairwiseDistance": [[100, "meanpairwisedistance"]], "MeanSquaredError": [[101, "meansquarederror"]], "MultiLabelConfusionMatrix": [[102, "multilabelconfusionmatrix"]], "MutualInformation": [[103, "mutualinformation"]], "ObjectDetectionAvgPrecisionRecall": [[104, "objectdetectionavgprecisionrecall"]], "PSNR": [[105, "psnr"]], "PrecisionRecallCurve": [[106, "precisionrecallcurve"]], "ROC_AUC": [[107, "roc-auc"]], "RocCurve": [[108, "roccurve"]], "RootMeanSquaredError": [[109, "rootmeansquarederror"]], "Rouge": [[110, "rouge"]], "RougeL": [[111, "rougel"]], "RougeN": [[112, "rougen"]], "RunningAverage": [[113, "runningaverage"]], "SSIM": [[114, "ssim"]], "TopKCategoricalAccuracy": [[115, "topkcategoricalaccuracy"]], "VariableAccumulation": [[116, "variableaccumulation"]], "CalinskiHarabaszScore": [[117, "calinskiharabaszscore"]], "DaviesBouldinScore": [[118, "daviesbouldinscore"]], "SilhouetteScore": [[119, "silhouettescore"]], "ConfusionMatrix": [[120, "confusionmatrix"]], "mIoU": [[121, "miou"]], "Metric": [[122, "metric"]], "MetricGroup": [[123, "metricgroup"]], "MetricsLambda": [[124, "metricslambda"]], "Precision": [[125, "precision"]], "Recall": [[126, "recall"]], "CanberraMetric": [[127, "canberrametric"]], "FractionalAbsoluteError": [[128, "fractionalabsoluteerror"]], "FractionalBias": [[129, "fractionalbias"]], "GeometricMeanAbsoluteError": [[130, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[131, "geometricmeanrelativeabsoluteerror"]], "KendallRankCorrelation": [[132, "kendallrankcorrelation"]], "ManhattanDistance": [[133, "manhattandistance"]], "MaximumAbsoluteError": [[134, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[135, "meanabsoluterelativeerror"]], "MeanError": [[136, "meanerror"]], "MeanNormalizedBias": [[137, "meannormalizedbias"]], "MedianAbsoluteError": [[138, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[139, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[140, "medianrelativeabsoluteerror"]], "PearsonCorrelation": [[141, "pearsoncorrelation"]], "R2Score": [[142, "r2score"]], "SpearmanRankCorrelation": [[143, "spearmanrankcorrelation"]], "WaveHedgesDistance": [[144, "wavehedgesdistance"]], "coco_tensor_list_to_dict_list": [[145, "coco-tensor-list-to-dict-list"]], "ignite.handlers": [[146, "ignite-handlers"]], "Complete list of generic handlers": [[146, "complete-list-of-generic-handlers"]], "Loggers": [[146, "loggers"]], "Parameter scheduler": [[146, "parameter-scheduler"]], "State Parameter scheduler": [[146, "state-parameter-scheduler"]], "More on parameter scheduling": [[146, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[146, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[146, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[146, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[146, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[146, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[146, "concatenate-with-torch-schedulers"]], "Example with ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[146, "example-with-ignite-handlers-param-scheduler-reducelronplateauscheduler"]], "Ignite Your Networks!": [[147, "ignite-your-networks"]], "Package Reference": [[147, null]], "Contrib Package Reference": [[147, null]], "ignite.metrics": [[148, "ignite-metrics"]], "Attach Engine API": [[148, "attach-engine-api"]], "Reset, Update, Compute API": [[148, "reset-update-compute-api"]], "Metric arithmetics": [[148, "metric-arithmetics"]], "How to create a custom metric": [[148, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[148, "metrics-and-its-usages"]], "Complete list of usages": [[148, "complete-list-of-usages"]], "Metrics and distributed computations": [[148, "metrics-and-distributed-computations"]], "Complete list of metrics": [[148, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[148, "helpers-for-customizing-metrics"]], "MetricUsage": [[148, "metricusage"]], "EpochWise": [[148, "epochwise"]], "RunningEpochWise": [[148, "runningepochwise"]], "BatchWise": [[148, "batchwise"]], "RunningBatchWise": [[148, "runningbatchwise"]], "SingleEpochRunningBatchWise": [[148, "singleepochrunningbatchwise"]], "BatchFiltered": [[148, "batchfiltered"]], "reinit__is_reduced": [[148, "reinit-is-reduced"]], "sync_all_reduce": [[148, "sync-all-reduce"]], "ignite.utils": [[149, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[0, "module-ignite.contrib.engines.tbptt"]], "module": [[0, "module-ignite.contrib.engines.common"], [0, "module-ignite.contrib.engines.tbptt"], [4, "module-ignite.distributed.utils"], [34, "module-ignite.handlers.base_logger"], [39, "module-ignite.handlers.clearml_logger"], [42, "module-ignite.handlers.fbresearch_logger"], [45, "module-ignite.handlers.mlflow_logger"], [46, "module-ignite.handlers.neptune_logger"], [58, "module-ignite.handlers.polyaxon_logger"], [66, "module-ignite.handlers.tensorboard_logger"], [71, "module-ignite.handlers.tqdm_logger"], [72, "module-ignite.handlers.visdom_logger"], [73, "module-ignite.handlers.wandb_logger"], [147, "module-ignite"], [147, "module-ignite.contrib"], [149, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_wandb_logging"]], "all_gather() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather"]], "all_gather_tensors_with_shapes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather_tensors_with_shapes"]], "all_reduce() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[4, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.model_name"]], "new_group() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.new_group"]], "one_rank_first() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_first"]], "one_rank_only() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[6, "ignite.exceptions.NotComputableError"]], "distributedproxysampler (class in ignite.distributed.auto)": [[8, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[9, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[10, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[11, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[12, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[12, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[13, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[14, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[15, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[15, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[16, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[16, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[17, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[18, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[19, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.has_event_handler"]], "has_registered_events() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.has_registered_events"]], "interrupt() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.interrupt"]], "last_event_name (ignite.engine.engine.engine attribute)": [[19, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[19, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[19, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[20, "ignite.engine.events.CallableEventWithFilter"]], "before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.before_and_after_event_filter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.every_before_and_after_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[20, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[20, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[20, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[21, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[22, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "interrupt (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.INTERRUPT"]], "iteration_completed (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[22, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[23, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[24, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[24, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[25, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[25, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[26, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[27, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[28, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[29, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[30, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[31, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[32, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[32, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[33, "ignite.handlers.TimeLimit"]], "basehandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseOutputHandler"]], "baseweightshandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseWeightsHandler"]], "baseweightsscalarhandler (class in ignite.handlers.base_logger)": [[34, "ignite.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.handlers.base_logger.baselogger method)": [[34, "ignite.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.handlers.base_logger": [[34, "module-ignite.handlers.base_logger"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[35, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[36, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item"]], "saved_checkpoint (ignite.handlers.checkpoint.checkpoint attribute)": [[36, "ignite.handlers.checkpoint.Checkpoint.SAVED_CHECKPOINT"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[36, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reload_objects() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.reload_objects"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[36, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[36, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "checkpointevents (class in ignite.handlers.checkpoint)": [[37, "ignite.handlers.checkpoint.CheckpointEvents"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[38, "ignite.handlers.checkpoint.ModelCheckpoint"]], "clearmllogger (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[39, "ignite.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.handlers.clearml_logger.clearmlsaver method)": [[39, "ignite.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "get_task() (ignite.handlers.clearml_logger.clearmllogger method)": [[39, "ignite.handlers.clearml_logger.ClearMLLogger.get_task"]], "global_step_from_engine() (in module ignite.handlers.clearml_logger)": [[39, "ignite.handlers.clearml_logger.global_step_from_engine"]], "ignite.handlers.clearml_logger": [[39, "module-ignite.handlers.clearml_logger"]], "remove() (ignite.handlers.clearml_logger.clearmlsaver method)": [[39, "ignite.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.handlers.clearml_logger.clearmllogger class method)": [[39, "ignite.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "earlystopping (class in ignite.handlers.early_stopping)": [[40, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[40, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[40, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[41, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[41, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[41, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "handle_buffers (ignite.handlers.ema_handler.emahandler attribute)": [[41, "ignite.handlers.ema_handler.EMAHandler.handle_buffers"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[41, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[41, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "fbresearchlogger (class in ignite.handlers.fbresearch_logger)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger"]], "attach() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger.attach"]], "ignite.handlers.fbresearch_logger": [[42, "module-ignite.handlers.fbresearch_logger"]], "log_completed() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_completed"]], "log_epoch_completed() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_epoch_completed"]], "log_epoch_started() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_epoch_started"]], "log_every() (ignite.handlers.fbresearch_logger.fbresearchlogger method)": [[42, "ignite.handlers.fbresearch_logger.FBResearchLogger.log_every"]], "global_step_from_engine() (in module ignite.handlers)": [[43, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[44, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "mlflowlogger (class in ignite.handlers.mlflow_logger)": [[45, "ignite.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.handlers.mlflow_logger)": [[45, "ignite.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.mlflow_logger)": [[45, "ignite.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.handlers.mlflow_logger)": [[45, "ignite.handlers.mlflow_logger.global_step_from_engine"]], "ignite.handlers.mlflow_logger": [[45, "module-ignite.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.neptune_logger)": [[46, "ignite.handlers.neptune_logger.global_step_from_engine"]], "ignite.handlers.neptune_logger": [[46, "module-ignite.handlers.neptune_logger"]], "remove() (ignite.handlers.neptune_logger.neptunesaver method)": [[46, "ignite.handlers.neptune_logger.NeptuneSaver.remove"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[47, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[48, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[48, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[48, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[48, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[48, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[49, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[49, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[50, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[51, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[51, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[51, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[52, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[52, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[53, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "get_param() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[53, "ignite.handlers.param_scheduler.ParamGroupScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[53, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[53, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[53, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[54, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[54, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[55, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[55, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "reducelronplateauscheduler (class in ignite.handlers.param_scheduler)": [[56, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler"]], "get_param() (ignite.handlers.param_scheduler.reducelronplateauscheduler method)": [[56, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.reducelronplateauscheduler class method)": [[56, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.simulate_values"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[57, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "optimizerparamshandler (class in ignite.handlers.polyaxon_logger)": [[58, "ignite.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.polyaxon_logger)": [[58, "ignite.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.handlers.polyaxon_logger)": [[58, "ignite.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.handlers.polyaxon_logger)": [[58, "ignite.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.handlers.polyaxon_logger": [[58, "module-ignite.handlers.polyaxon_logger"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[59, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[59, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[60, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[60, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[61, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[61, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[62, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[62, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[63, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[63, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[63, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[64, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[64, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[65, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[65, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[65, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[65, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[65, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[65, "ignite.handlers.stores.EpochOutputStore.update"]], "gradshisthandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.tensorboard_logger)": [[66, "ignite.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.handlers.tensorboard_logger": [[66, "module-ignite.handlers.tensorboard_logger"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[67, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[68, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[68, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[68, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[68, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[68, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[69, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[69, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[69, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[69, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[69, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[70, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[70, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[70, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[70, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[70, "ignite.handlers.timing.Timer.value"]], "progressbar (class in ignite.handlers.tqdm_logger)": [[71, "ignite.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.handlers.tqdm_logger.progressbar method)": [[71, "ignite.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.handlers.tqdm_logger.progressbar method)": [[71, "ignite.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.handlers.tqdm_logger": [[71, "module-ignite.handlers.tqdm_logger"]], "log_message() (ignite.handlers.tqdm_logger.progressbar method)": [[71, "ignite.handlers.tqdm_logger.ProgressBar.log_message"]], "gradsscalarhandler (class in ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.handlers.visdom_logger)": [[72, "ignite.handlers.visdom_logger.global_step_from_engine"]], "ignite.handlers.visdom_logger": [[72, "module-ignite.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.handlers.wandb_logger)": [[73, "ignite.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.handlers.wandb_logger)": [[73, "ignite.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.handlers.wandb_logger)": [[73, "ignite.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.handlers.wandb_logger)": [[73, "ignite.handlers.wandb_logger.global_step_from_engine"]], "ignite.handlers.wandb_logger": [[73, "module-ignite.handlers.wandb_logger"]], "accuracy (class in ignite.metrics)": [[74, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[74, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[74, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[74, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[75, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[75, "ignite.metrics.Average.compute"]], "averageprecision (class in ignite.metrics)": [[76, "ignite.metrics.AveragePrecision"]], "bleu (class in ignite.metrics)": [[77, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[77, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[77, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[77, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[78, "ignite.metrics.ClassificationReport"]], "cohenkappa (class in ignite.metrics)": [[79, "ignite.metrics.CohenKappa"]], "commonobjectdetectionmetrics (class in ignite.metrics)": [[80, "ignite.metrics.CommonObjectDetectionMetrics"]], "compute() (ignite.metrics.commonobjectdetectionmetrics method)": [[80, "ignite.metrics.CommonObjectDetectionMetrics.compute"]], "reset() (ignite.metrics.commonobjectdetectionmetrics method)": [[80, "ignite.metrics.CommonObjectDetectionMetrics.reset"]], "update() (ignite.metrics.commonobjectdetectionmetrics method)": [[80, "ignite.metrics.CommonObjectDetectionMetrics.update"]], "cosinesimilarity (class in ignite.metrics)": [[81, "ignite.metrics.CosineSimilarity"]], "compute() (ignite.metrics.cosinesimilarity method)": [[81, "ignite.metrics.CosineSimilarity.compute"]], "reset() (ignite.metrics.cosinesimilarity method)": [[81, "ignite.metrics.CosineSimilarity.reset"]], "update() (ignite.metrics.cosinesimilarity method)": [[81, "ignite.metrics.CosineSimilarity.update"]], "dicecoefficient() (in module ignite.metrics)": [[82, "ignite.metrics.DiceCoefficient"]], "entropy (class in ignite.metrics)": [[83, "ignite.metrics.Entropy"]], "compute() (ignite.metrics.entropy method)": [[83, "ignite.metrics.Entropy.compute"]], "reset() (ignite.metrics.entropy method)": [[83, "ignite.metrics.Entropy.reset"]], "update() (ignite.metrics.entropy method)": [[83, "ignite.metrics.Entropy.update"]], "epochmetric (class in ignite.metrics)": [[84, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[84, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[84, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[84, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[85, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[85, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[85, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[85, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[86, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[87, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[87, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[87, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[87, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[87, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[87, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[88, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[88, "ignite.metrics.GeometricAverage.compute"]], "gpuinfo (class in ignite.metrics)": [[89, "ignite.metrics.GpuInfo"]], "attach() (ignite.metrics.gpuinfo method)": [[89, "ignite.metrics.GpuInfo.attach"]], "completed() (ignite.metrics.gpuinfo method)": [[89, "ignite.metrics.GpuInfo.completed"]], "compute() (ignite.metrics.gpuinfo method)": [[89, "ignite.metrics.GpuInfo.compute"]], "reset() (ignite.metrics.gpuinfo method)": [[89, "ignite.metrics.GpuInfo.reset"]], "update() (ignite.metrics.gpuinfo method)": [[89, "ignite.metrics.GpuInfo.update"]], "hsic (class in ignite.metrics)": [[90, "ignite.metrics.HSIC"]], "compute() (ignite.metrics.hsic method)": [[90, "ignite.metrics.HSIC.compute"]], "reset() (ignite.metrics.hsic method)": [[90, "ignite.metrics.HSIC.reset"]], "update() (ignite.metrics.hsic method)": [[90, "ignite.metrics.HSIC.update"]], "inceptionscore (class in ignite.metrics)": [[91, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[91, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[91, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[91, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[92, "ignite.metrics.IoU"]], "jsdivergence (class in ignite.metrics)": [[93, "ignite.metrics.JSDivergence"]], "compute() (ignite.metrics.jsdivergence method)": [[93, "ignite.metrics.JSDivergence.compute"]], "jaccardindex() (in module ignite.metrics)": [[94, "ignite.metrics.JaccardIndex"]], "kldivergence (class in ignite.metrics)": [[95, "ignite.metrics.KLDivergence"]], "compute() (ignite.metrics.kldivergence method)": [[95, "ignite.metrics.KLDivergence.compute"]], "reset() (ignite.metrics.kldivergence method)": [[95, "ignite.metrics.KLDivergence.reset"]], "update() (ignite.metrics.kldivergence method)": [[95, "ignite.metrics.KLDivergence.update"]], "loss (class in ignite.metrics)": [[96, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[96, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[96, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[96, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[96, "ignite.metrics.Loss.update"]], "maximummeandiscrepancy (class in ignite.metrics)": [[97, "ignite.metrics.MaximumMeanDiscrepancy"]], "compute() (ignite.metrics.maximummeandiscrepancy method)": [[97, "ignite.metrics.MaximumMeanDiscrepancy.compute"]], "reset() (ignite.metrics.maximummeandiscrepancy method)": [[97, "ignite.metrics.MaximumMeanDiscrepancy.reset"]], "update() (ignite.metrics.maximummeandiscrepancy method)": [[97, "ignite.metrics.MaximumMeanDiscrepancy.update"]], "meanabsoluteerror (class in ignite.metrics)": [[98, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[98, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[98, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[98, "ignite.metrics.MeanAbsoluteError.update"]], "meanaverageprecision (class in ignite.metrics)": [[99, "ignite.metrics.MeanAveragePrecision"]], "compute() (ignite.metrics.meanaverageprecision method)": [[99, "ignite.metrics.MeanAveragePrecision.compute"]], "reset() (ignite.metrics.meanaverageprecision method)": [[99, "ignite.metrics.MeanAveragePrecision.reset"]], "update() (ignite.metrics.meanaverageprecision method)": [[99, "ignite.metrics.MeanAveragePrecision.update"]], "meanpairwisedistance (class in ignite.metrics)": [[100, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[100, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[100, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[100, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[101, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[101, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[101, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[101, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[102, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[102, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[102, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[102, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "mutualinformation (class in ignite.metrics)": [[103, "ignite.metrics.MutualInformation"]], "compute() (ignite.metrics.mutualinformation method)": [[103, "ignite.metrics.MutualInformation.compute"]], "reset() (ignite.metrics.mutualinformation method)": [[103, "ignite.metrics.MutualInformation.reset"]], "objectdetectionavgprecisionrecall (class in ignite.metrics)": [[104, "ignite.metrics.ObjectDetectionAvgPrecisionRecall"]], "compute() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[104, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.compute"]], "reset() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[104, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.reset"]], "update() (ignite.metrics.objectdetectionavgprecisionrecall method)": [[104, "ignite.metrics.ObjectDetectionAvgPrecisionRecall.update"]], "psnr (class in ignite.metrics)": [[105, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[105, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[105, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[105, "ignite.metrics.PSNR.update"]], "precisionrecallcurve (class in ignite.metrics)": [[106, "ignite.metrics.PrecisionRecallCurve"]], "compute() (ignite.metrics.precisionrecallcurve method)": [[106, "ignite.metrics.PrecisionRecallCurve.compute"]], "roc_auc (class in ignite.metrics)": [[107, "ignite.metrics.ROC_AUC"]], "roccurve (class in ignite.metrics)": [[108, "ignite.metrics.RocCurve"]], "compute() (ignite.metrics.roccurve method)": [[108, "ignite.metrics.RocCurve.compute"]], "rootmeansquarederror (class in ignite.metrics)": [[109, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[109, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[110, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[110, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[110, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[110, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[111, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[112, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[113, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[113, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[113, "ignite.metrics.RunningAverage.compute"]], "detach() (ignite.metrics.runningaverage method)": [[113, "ignite.metrics.RunningAverage.detach"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[113, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[113, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[113, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[114, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[114, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[114, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[114, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[115, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[115, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[115, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[115, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[116, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[116, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[116, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[116, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[116, "ignite.metrics.VariableAccumulation.update"]], "calinskiharabaszscore (class in ignite.metrics.clustering)": [[117, "ignite.metrics.clustering.CalinskiHarabaszScore"]], "daviesbouldinscore (class in ignite.metrics.clustering)": [[118, "ignite.metrics.clustering.DaviesBouldinScore"]], "silhouettescore (class in ignite.metrics.clustering)": [[119, "ignite.metrics.clustering.SilhouetteScore"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[120, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[120, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[120, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[120, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[120, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[121, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[122, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.iteration_completed"]], "load_state_dict() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.load_state_dict"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[122, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.started"]], "state_dict() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.state_dict"]], "update() (ignite.metrics.metric.metric method)": [[122, "ignite.metrics.metric.Metric.update"]], "metricgroup (class in ignite.metrics.metric_group)": [[123, "ignite.metrics.metric_group.MetricGroup"]], "compute() (ignite.metrics.metric_group.metricgroup method)": [[123, "ignite.metrics.metric_group.MetricGroup.compute"]], "reset() (ignite.metrics.metric_group.metricgroup method)": [[123, "ignite.metrics.metric_group.MetricGroup.reset"]], "update() (ignite.metrics.metric_group.metricgroup method)": [[123, "ignite.metrics.metric_group.MetricGroup.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[125, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[125, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[126, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[126, "ignite.metrics.recall.Recall.update"]], "canberrametric (class in ignite.metrics.regression)": [[127, "ignite.metrics.regression.CanberraMetric"]], "compute() (ignite.metrics.regression.canberrametric method)": [[127, "ignite.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.metrics.regression.canberrametric method)": [[127, "ignite.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.metrics.regression)": [[128, "ignite.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.metrics.regression.fractionalabsoluteerror method)": [[128, "ignite.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.metrics.regression.fractionalabsoluteerror method)": [[128, "ignite.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.metrics.regression)": [[129, "ignite.metrics.regression.FractionalBias"]], "compute() (ignite.metrics.regression.fractionalbias method)": [[129, "ignite.metrics.regression.FractionalBias.compute"]], "reset() (ignite.metrics.regression.fractionalbias method)": [[129, "ignite.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.metrics.regression)": [[130, "ignite.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.metrics.regression.geometricmeanabsoluteerror method)": [[130, "ignite.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.metrics.regression.geometricmeanabsoluteerror method)": [[130, "ignite.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.metrics.regression)": [[131, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[131, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[131, "ignite.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "kendallrankcorrelation (class in ignite.metrics.regression)": [[132, "ignite.metrics.regression.KendallRankCorrelation"]], "compute() (ignite.metrics.regression.kendallrankcorrelation method)": [[132, "ignite.metrics.regression.KendallRankCorrelation.compute"]], "update() (ignite.metrics.regression.kendallrankcorrelation method)": [[132, "ignite.metrics.regression.KendallRankCorrelation.update"]], "manhattandistance (class in ignite.metrics.regression)": [[133, "ignite.metrics.regression.ManhattanDistance"]], "compute() (ignite.metrics.regression.manhattandistance method)": [[133, "ignite.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.metrics.regression.manhattandistance method)": [[133, "ignite.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.metrics.regression)": [[134, "ignite.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.metrics.regression.maximumabsoluteerror method)": [[134, "ignite.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.metrics.regression.maximumabsoluteerror method)": [[134, "ignite.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.metrics.regression)": [[135, "ignite.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.metrics.regression.meanabsoluterelativeerror method)": [[135, "ignite.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.metrics.regression.meanabsoluterelativeerror method)": [[135, "ignite.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.metrics.regression)": [[136, "ignite.metrics.regression.MeanError"]], "compute() (ignite.metrics.regression.meanerror method)": [[136, "ignite.metrics.regression.MeanError.compute"]], "reset() (ignite.metrics.regression.meanerror method)": [[136, "ignite.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.metrics.regression)": [[137, "ignite.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.metrics.regression.meannormalizedbias method)": [[137, "ignite.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.metrics.regression.meannormalizedbias method)": [[137, "ignite.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.metrics.regression)": [[138, "ignite.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.metrics.regression)": [[139, "ignite.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.metrics.regression)": [[140, "ignite.metrics.regression.MedianRelativeAbsoluteError"]], "pearsoncorrelation (class in ignite.metrics.regression)": [[141, "ignite.metrics.regression.PearsonCorrelation"]], "compute() (ignite.metrics.regression.pearsoncorrelation method)": [[141, "ignite.metrics.regression.PearsonCorrelation.compute"]], "reset() (ignite.metrics.regression.pearsoncorrelation method)": [[141, "ignite.metrics.regression.PearsonCorrelation.reset"]], "r2score (class in ignite.metrics.regression)": [[142, "ignite.metrics.regression.R2Score"]], "compute() (ignite.metrics.regression.r2score method)": [[142, "ignite.metrics.regression.R2Score.compute"]], "reset() (ignite.metrics.regression.r2score method)": [[142, "ignite.metrics.regression.R2Score.reset"]], "spearmanrankcorrelation (class in ignite.metrics.regression)": [[143, "ignite.metrics.regression.SpearmanRankCorrelation"]], "compute() (ignite.metrics.regression.spearmanrankcorrelation method)": [[143, "ignite.metrics.regression.SpearmanRankCorrelation.compute"]], "update() (ignite.metrics.regression.spearmanrankcorrelation method)": [[143, "ignite.metrics.regression.SpearmanRankCorrelation.update"]], "wavehedgesdistance (class in ignite.metrics.regression)": [[144, "ignite.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.metrics.regression.wavehedgesdistance method)": [[144, "ignite.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.metrics.regression.wavehedgesdistance method)": [[144, "ignite.metrics.regression.WaveHedgesDistance.reset"]], "coco_tensor_list_to_dict_list() (in module ignite.metrics.vision.object_detection_average_precision_recall)": [[145, "ignite.metrics.vision.object_detection_average_precision_recall.coco_tensor_list_to_dict_list"]], "ignite": [[147, "module-ignite"]], "ignite.contrib": [[147, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.MetricUsage"]], "runningbatchwise (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.RunningBatchWise"]], "runningepochwise (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.RunningEpochWise"]], "singleepochrunningbatchwise (class in ignite.metrics.metric)": [[148, "ignite.metrics.metric.SingleEpochRunningBatchWise"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[148, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[148, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[148, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[148, "ignite.metrics.metric.EpochWise.usage_name"]], "usage_name (ignite.metrics.metric.runningbatchwise attribute)": [[148, "ignite.metrics.metric.RunningBatchWise.usage_name"]], "usage_name (ignite.metrics.metric.runningepochwise attribute)": [[148, "ignite.metrics.metric.RunningEpochWise.usage_name"]], "usage_name (ignite.metrics.metric.singleepochrunningbatchwise attribute)": [[148, "ignite.metrics.metric.SingleEpochRunningBatchWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[149, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[149, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[149, "ignite.utils.convert_tensor"]], "hash_checkpoint() (in module ignite.utils)": [[149, "ignite.utils.hash_checkpoint"]], "ignite.utils": [[149, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[149, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[149, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[149, "ignite.utils.to_onehot"]]}})